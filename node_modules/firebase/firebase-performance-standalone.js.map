{"version":3,"file":"firebase-performance-standalone.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/deepCopy.ts","../util/src/deferred.ts","../util/src/errors.ts","../util/src/obj.ts","../component/src/component.ts","../component/src/constants.ts","../component/src/provider.ts","../component/src/component_container.ts","../logger/src/logger.ts","../app/src/errors.ts","../app/src/constants.ts","../app/src/lite/firebaseAppLite.ts","../app/src/logger.ts","../app/src/firebaseNamespaceCore.ts","../app/src/platformLoggerService.ts","../app/src/registerCoreComponents.ts","../app/index.lite.ts","../app/src/lite/firebaseNamespaceLite.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/util/get-key.ts","../installations/src/helpers/fid-changed.ts","../installations/src/helpers/idb-manager.ts","../installations/src/index.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation-request.ts","../installations/src/api/generate-auth-token-request.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation-request.ts","../installations/src/functions/on-id-change.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/services/api_service.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/utils/console_logger.ts","../performance/src/services/settings_service.ts","../util/src/environment.ts","../performance/src/utils/string_merger.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/transport_service.ts","../performance/src/services/perf_logger.ts","../performance/src/utils/metric_utils.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts","src/index.perf.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { InstantiationMode, Name, NameServiceMapping } from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier: string = DEFAULT_ENTRY_NAME): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n      // If the service instance is available, resolve the promise with it immediately\n      try {\n        const instance = this.getOrInitializeService(normalizedIdentifier);\n        if (instance) {\n          deferred.resolve(instance);\n        }\n      } catch (e) {\n        // when the instance factory throws an exception during get(), it should not cause\n        // a fatal error. We just return the unresolved promise in this case.\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    const { identifier, optional } = {\n      identifier: DEFAULT_ENTRY_NAME,\n      optional: false,\n      ...options\n    };\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    try {\n      const instance = this.getOrInitializeService(normalizedIdentifier);\n\n      if (!instance) {\n        if (optional) {\n          return null;\n        }\n        throw Error(`Service ${this.name} is not available`);\n      }\n      return instance;\n    } catch (e) {\n      if (optional) {\n        return null;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService(DEFAULT_ENTRY_NAME);\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier = this.normalizeInstanceIdentifier(\n        instanceIdentifier\n      );\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService(normalizedIdentifier)!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  private getOrInitializeService(\n    identifier: string\n  ): NameServiceMapping[T] | null {\n    let instance = this.instances.get(identifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(\n        this.container,\n        normalizeIdentifierForFactory(identifier)\n      ) as NameServiceMapping[T];\n      this.instances.set(identifier, instance);\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(identifier: string): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager(component: Component<Name>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$appName}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\nimport { name as appName } from '../package.json';\nimport { name as analyticsName } from '../../analytics/package.json';\nimport { name as authName } from '../../auth/package.json';\nimport { name as databaseName } from '../../database/package.json';\nimport { name as functionsName } from '../../functions/package.json';\nimport { name as installationsName } from '../../installations/package.json';\nimport { name as messagingName } from '../../messaging/package.json';\nimport { name as performanceName } from '../../performance/package.json';\nimport { name as remoteConfigName } from '../../remote-config/package.json';\nimport { name as storageName } from '../../storage/package.json';\nimport { name as firestoreName } from '../../firestore/package.json';\nimport { name as packageName } from '../../../package.json';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [analyticsName]: 'fire-analytics',\n  [authName]: 'fire-auth',\n  [databaseName]: 'fire-rtdb',\n  [functionsName]: 'fire-fn',\n  [installationsName]: 'fire-iid',\n  [messagingName]: 'fire-fcm',\n  [performanceName]: 'fire-perf',\n  [remoteConfigName]: 'fire-rc',\n  [storageName]: 'fire-gcs',\n  [firestoreName]: 'fire-fst',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { deepCopy } from '@firebase/util';\nimport { ERROR_FACTORY, AppError } from '../errors';\nimport { DEFAULT_ENTRY_NAME } from '../constants';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType,\n  Name\n} from '@firebase/component';\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppLiteImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private automaticDataCollectionEnabled_: boolean;\n  private container: ComponentContainer;\n\n  // lite version has an empty INTERNAL namespace\n  readonly INTERNAL = {};\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n    this.container = new ComponentContainer(config.name!);\n\n    // add itself to container\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n    // populate ComponentContainer with existing components\n    for (const component of this.firebase_.INTERNAL.components.values()) {\n      this.container.addComponent(component);\n    }\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n\n        return Promise.all(\n          this.container.getProviders().map(provider => provider.delete())\n        );\n      })\n      .then((): void => {\n        this.isDeleted_ = true;\n      });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return (this.container.getProvider(name as Name).getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown) as FirebaseService;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this.name_ });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceNamespace\n} from '@firebase/app-types/private';\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { version } from '../../firebase/package.json';\nimport { logger } from './logger';\nimport {\n  setUserLogHandler,\n  setLogLevel,\n  LogCallback,\n  LogOptions\n} from '@firebase/logger';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp,\n    // @ts-ignore\n    app,\n    registerVersion,\n    setLogLevel,\n    onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: version,\n    INTERNAL: {\n      registerComponent,\n      removeApp,\n      components,\n      useAsService\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name };\n    }\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    const { name } = config;\n\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n        appName: String(name)\n      });\n    }\n\n    if (contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponent(\n    component: Component\n  ): FirebaseServiceNamespace<FirebaseService> | null {\n    const componentName = component.name;\n    if (components.has(componentName)) {\n      logger.debug(\n        `There were multiple attempts to register component ${componentName}.`\n      );\n\n      return component.type === ComponentType.PUBLIC\n        ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (namespace as any)[componentName]\n        : null;\n    }\n\n    components.set(componentName, component);\n\n    // create service namespace for public components\n    if (component.type === ComponentType.PUBLIC) {\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentName] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentName]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentName] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentName] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    // add the component to existing app instances\n    for (const appName of Object.keys(apps)) {\n      (apps[appName] as _FirebaseApp)._addComponent(component);\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentName]\n      : null;\n  }\n\n  function registerVersion(\n    libraryKeyOrName: string,\n    version: string,\n    variant?: string\n  ): void {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      const warning = [\n        `Unable to register library \"${library}\" with version \"${version}\":`\n      ];\n      if (libraryMismatch) {\n        warning.push(\n          `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n        );\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(\n          `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n        );\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    registerComponent(\n      new Component(\n        `${library}-version` as Name,\n        () => ({ library, version }),\n        ComponentType.VERSION\n      )\n    );\n  }\n\n  function onLog(logCallback: LogCallback | null, options?: LogOptions): void {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT, {\n        appName: name\n      });\n    }\n    setUserLogHandler(logCallback, options);\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\n\nexport class PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate();\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(\n  provider: Provider<Name>\n): provider is Provider<'app-version'> {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerService } from './platformLoggerService';\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(\n  firebase: FirebaseNamespace,\n  variant?: string\n): void {\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerService(container),\n      ComponentType.PRIVATE\n    )\n  );\n  // Register `app` package.\n  firebase.registerVersion(name, version, variant);\n  // Register platform SDK identifier (no version).\n  firebase.registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFirebaseNamespaceLite } from './src/lite/firebaseNamespaceLite';\nimport { registerCoreComponents } from './src/registerCoreComponents';\n\nexport const firebase = createFirebaseNamespaceLite();\n\nregisterCoreComponents(firebase, 'lite');\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { FirebaseAppLiteImpl } from './firebaseAppLite';\nimport { createFirebaseNamespaceCore } from '../firebaseNamespaceCore';\nimport { Component, ComponentType } from '@firebase/component';\n\nexport function createFirebaseNamespaceLite(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppLiteImpl);\n\n  namespace.SDK_VERSION = `${namespace.SDK_VERSION}_LITE`;\n\n  const registerComponent = (namespace as _FirebaseNamespace).INTERNAL\n    .registerComponent;\n  (namespace as _FirebaseNamespace).INTERNAL.registerComponent = registerComponentForLite;\n\n  /**\n   * This is a special implementation, so it only works with performance.\n   * only allow performance SDK to register.\n   */\n  function registerComponentForLite(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    component: Component<any>\n  ): FirebaseServiceNamespace<FirebaseService> | null {\n    // only allow performance to register with firebase lite\n    if (\n      component.type === ComponentType.PUBLIC &&\n      component.name !== 'performance' &&\n      component.name !== 'installations'\n    ) {\n      throw Error(`${name} cannot register with the standalone perf instance`);\n    }\n\n    return registerComponent(component);\n  }\n\n  return namespace;\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/app-config';\nimport { IdChangeCallbackFn } from '../functions';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  deleteInstallation,\n  getId,\n  getToken,\n  IdChangeCallbackFn,\n  IdChangeUnsubscribeFn,\n  onIdChange\n} from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport { FirebaseDependencies } from './interfaces/firebase-dependencies';\n\nimport { name, version } from '../package.json';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  instance.INTERNAL.registerComponent(\n    new Component(\n      installationsName,\n      container => {\n        const app = container.getProvider('app').getImmediate();\n\n        // Throws if app isn't configured properly.\n        const appConfig = extractAppConfig(app);\n        const platformLoggerProvider = container.getProvider('platform-logger');\n        const dependencies: FirebaseDependencies = {\n          appConfig,\n          platformLoggerProvider\n        };\n\n        const installations: FirebaseInstallations & FirebaseService = {\n          app,\n          getId: () => getId(dependencies),\n          getToken: (forceRefresh?: boolean) =>\n            getToken(dependencies, forceRefresh),\n          delete: () => deleteInstallation(dependencies),\n          onIdChange: (callback: IdChangeCallbackFn): IdChangeUnsubscribeFn =>\n            onIdChange(dependencies, callback)\n        };\n        return installations;\n      },\n      ComponentType.PUBLIC\n    )\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../api/create-installation-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../api/generate-auth-token-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(dependencies.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  dependencies: FirebaseDependencies,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(dependencies.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(dependencies.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(dependencies, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  dependencies: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      dependencies,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(dependencies.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(dependencies.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(dependencies.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<string> {\n  await completeInstallationRegistration(dependencies.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(dependencies, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport type IdChangeCallbackFn = (installationId: string) => void;\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n */\nexport function onIdChange(\n  { appConfig }: FirebaseDependencies,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  addCallback(appConfig, callback);\n\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getId(\n  dependencies: FirebaseDependencies\n): Promise<string> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    dependencies.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(dependencies).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../api/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(\n  dependencies: FirebaseDependencies\n): Promise<void> {\n  const { appConfig } = dependencies;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { isIndexedDBAvailable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by\n * set methods.\n */\nexport class Api {\n  private readonly performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private readonly PerformanceObserver: typeof PerformanceObserver;\n  private readonly windowLocation: Location;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  readonly onFirstInputDelay?: Function;\n  readonly localStorage?: Storage;\n  readonly document: Document;\n  readonly navigator: Navigator;\n\n  constructor(readonly window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (\n      !fetch ||\n      !Promise ||\n      !this.navigator ||\n      !this.navigator.cookieEnabled\n    ) {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n      return false;\n    }\n\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NONPOSITIVE_TRACE_START_TIME = 'nonpositive trace startTime',\n  NONPOSITIVE_TRACE_DURATION = 'nonpositive trace duration',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalid custom metric name',\n  INVALID_STRING_MERGER_PARAMETER = 'invalid String merger input'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]:\n    'Trace {$traceName} startTime should be positive.',\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]:\n    'Trace {$traceName} duration should be positive.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid',\n  [ErrorCode.INVALID_STRING_MERGER_PARAMETER]:\n    'Input for String merger is invalid, contact support team to resolve.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { mergeStrings } from '../utils/string_merger';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  // Performance event transport endpoint URL which should be compatible with proto3.\n  // New Address for transport service, not configurable via Remote Config.\n  flTransportEndpointUrl = mergeStrings(\n    'hts/frbslgigp.ogepscmv/ieo/eaylg',\n    'tp:/ieaeogn-agolai.o/1frlglgc/o'\n  );\n\n  transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n\n  // Source type for performance event logs.\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  installationsService!: FirebaseInstallations;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  getFlTransportFullUrl(): string {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return 'indexedDB' in self && indexedDB != null;\n}\n\n/**\n * This method validates browser context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = window.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          window.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (!navigator || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './errors';\n\nexport function mergeStrings(part1: string, part2: string): string {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_STRING_MERGER_PARAMETER);\n  }\n\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance().installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance().installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\n/**\n * NetworkInformation\n *\n * ref: https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation\n */\ninterface NetworkInformation {\n  readonly effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n}\n\ninterface NavigatorWithConnection extends Navigator {\n  readonly connection: NetworkInformation;\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = (navigator as NavigatorWithConnection).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n  CONFIG_LOCAL_STORAGE_KEY,\n  SDK_VERSION\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { SettingsService } from './settings_service';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logSource?: number;\n  logEndPointUrl?: string;\n  transportKey?: string;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_log_transport_key?: string;\n  fpr_log_transport_web_percent?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(processConfig)\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */\n      () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: { Authorization: `${FIS_AUTH_PREFIX} ${authToken}` },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valid.\n */\nfunction processConfig(\n  config?: RemoteConfigResponse\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (DEFAULT_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface LogResponseDetails {\n  responseAction?: string;\n}\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC/Fl accepted log format.\ninterface TransportBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json_proto3: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nlet isTransportSetup: boolean = false;\n\nexport function setupTransportService(): void {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\n/**\n * Utilized by testing to clean up message queue and un-initialize transport service.\n */\nexport function resetTransportService(): void {\n  isTransportSetup = false;\n  queue = [];\n}\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents(): void {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event: Log[] = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n\n  const data: TransportBatchLogFormat = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1, // 1 is JS\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(\n  data: TransportBatchLogFormat,\n  staged: BatchEvent[]\n): Promise<void> {\n  return postToFlEndpoint(data)\n    .then(res => {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n      return res.json();\n    })\n    .then(res => {\n      // Find the next call wait time from the response.\n      const transportWait = Number(res.nextRequestWaitMillis);\n      let requestOffset = DEFAULT_SEND_INTERVAL_MS;\n      if (!isNaN(transportWait)) {\n        requestOffset = Math.max(transportWait, requestOffset);\n      }\n\n      // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n      // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n      const logResponseDetails: LogResponseDetails[] = res.logResponseDetails;\n      if (\n        Array.isArray(logResponseDetails) &&\n        logResponseDetails.length > 0 &&\n        logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER'\n      ) {\n        queue = [...staged, ...queue];\n        consoleLogger.info(`Retry transport request later.`);\n      }\n\n      remainingTries = DEFAULT_REMAINING_TRIES;\n      // Schedule the next process.\n      processQueue(requestOffset);\n    });\n}\n\nfunction postToFlEndpoint(data: TransportBatchLogFormat): Promise<Response> {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function transportHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): (...args: unknown[]) => void {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { transportHandler } from './transport_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: { [key: string]: number };\n  custom_attributes?: { [key: string]: string };\n}\n\n/* eslint-enble camelcase */\n\nlet logger: (\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n) => void | undefined;\n// This method is not called before initialization.\nfunction sendLog(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): void {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (!getIid()) {\n    return;\n  }\n\n  const settingsService = SettingsService.getInstance();\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(trace, ResourceType.Trace), 0);\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (\n    networkRequestUrl === logEndpointUrl ||\n    networkRequestUrl === flEndpointUrl\n  ) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(networkRequest, ResourceType.NetworkRequest), 0);\n}\n\nfunction serializer(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n\n/**\n * Converts the provided value to an integer value to be used in case of a metric.\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\n *\n * @returns Converted integer number to be set for the metric.\n */\nexport function convertMetricValueToInteger(providedValue: number): number {\n  const valueAsInteger: number = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\n      `Metric value should be an Integer, setting the value as : ${valueAsInteger}.`\n    );\n  }\n  return valueAsInteger;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport {\n  isValidMetricName,\n  convertMetricValueToInteger\n} from '../utils/metric_utils';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_START_TIME, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_DURATION, {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist. The value will be floored down to an\n   * integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Increment by value\n   */\n  incrementMetric(counter: string, numAsInteger = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist. The value will be floored down to an integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Set custom metric to this value\n   */\n  putMetric(counter: string, numAsInteger: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { setupTransportService } from '../services/transport_service';\nimport { validateIndexedDBOpenable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable()\n        .then(isAvailable => {\n          if (isAvailable) {\n            setupTransportService();\n            getInitializationPromise().then(\n              setupOobResources,\n              setupOobResources\n            );\n          }\n        })\n        .catch(error => {\n          consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n        });\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { PerformanceController } from './src/controllers/perf';\nimport { setupApi } from './src/services/api_service';\nimport { SettingsService } from './src/services/settings_service';\nimport { ERROR_FACTORY, ErrorCode } from './src/utils/errors';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { Component, ComponentType } from '@firebase/component';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { name, version } from './package.json';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod = (\n    app: FirebaseApp,\n    installations: FirebaseInstallations\n  ): PerformanceController => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n    }\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  };\n\n  // Register performance with firebase-app.\n  (instance as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'performance',\n      container => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        // The following call will always succeed because perf has `import '@firebase/installations'`\n        const installations = container\n          .getProvider('installations')\n          .getImmediate();\n\n        return factoryMethod(app, installations);\n      },\n      ComponentType.PUBLIC\n    )\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterPerformance(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/performance';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'lite');\n\nexport default firebase;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","g","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","__spreadArrays","il","k","a","j","jl","deepExtend","target","source","constructor","Date","getTime","undefined","prop","Deferred","callback","_this","promise","catch","ERROR_NAME","Error","create","__","code","message","customData","_super","FirebaseError","captureStackTrace","ErrorFactory","_i","data","fullCode","service","template","errors","replace","PATTERN","key","String","fullMessage","serviceName","contains","obj","Component","mode","instantiationMode","multipleInstances","props","serviceProps","name","instanceFactory","type","DEFAULT_ENTRY_NAME","Provider","identifier","normalizedIdentifier","normalizeInstanceIdentifier","instancesDeferred","has","deferred","set","instance","getOrInitializeService","get","options","_a","optional","component","_b","entries","_d","instanceIdentifier","instanceDeferred","delete","instances","services","from","values","all","filter","map","INTERNAL","_delete","container","Map","ComponentContainer","provider","getProvider","isComponentSet","setComponent","providers","addComponent","LogLevel","defaultLogHandler","logType","args","logLevel","now","toISOString","method","ConsoleMethod","console","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","Logger","_logLevel","val","_logHandler","_userLogHandler","setLogLevel","level","forEach","inst","ERRORS","ERROR_FACTORY","PLATFORM_LOG_STRING","appName","FirebaseAppLiteImpl","checkDestroyed_","automaticDataCollectionEnabled_","name_","options_","firebase_","removeApp","getProviders","isDeleted_","getImmediate","config","automaticDataCollectionEnabled","components","logger","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","rawConfig","app","registerVersion","libraryKeyOrName","version","variant","library","libraryMismatch","match","versionMismatch","warning","join","registerComponent","onLog","logCallback","instances_1","customLogLevel","userLogHandler","arg","toString","JSON","stringify","ignored","toLowerCase","setUserLogHandler","SDK_VERSION","useAsService","serviceNamespace","componentName","appArg","_getService","bind","keys","_addComponent","defineProperty","PlatformLoggerService","getComponent","isVersionServiceProvider","logString","firebase","createFirebaseNamespaceLite","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","proxyProperties","ProxyClass","targetProp","properties","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","slice","nativeObject","getAll","query","count","items","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","isServerError","includes","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","array","btoa","fromCharCode","bufferToBase64UrlSafe","substr","test","getKey","appId","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","callbacks","callbacks_1","broadcastChannel","BroadcastChannel","onmessage","size","close","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","upgradeDB","indexedDB","onupgradeneeded","event","tx","oldValue","put","remove","update","updateFn","newValue","getInstallationEntry","oldEntry","installationEntry","clearTimedOutRequest","registrationStatus","entryWithPromise","registrationPromise","updateInstallationRequest","entry","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","fetch","ok","responseValue","authToken","createInstallationRequest","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getPlatformInfoString","installation","refreshAuthToken","dependencies","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenExpired","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","updatedInstallationEntry","fetchAuthTokenFromServer","getToken","completeInstallationRegistration","deleteInstallationRequest","getDeleteEndpoint","onIdChange","callbackSet","Set","add","addCallback","getMissingValueError","valueName","configKeys_1","keyName","extractAppConfig","getId","deleteInstallation","apiInstance","windowInstance","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","consoleLogger","settingsServiceInstance","Api","windowLocation","href","split","performance","mark","measureName","mark1","mark2","measure","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","cookieEnabled","entryType","PerformanceObserver","list","getEntries","observe","entryTypes","window","location","document","localStorage","perfMetrics","onFirstInputDelay","mergeStrings","part1","part2","sizeDiff","resultArray","charAt","iid","VisibilityState","SettingsService","firebaseAppInstance","flTransportEndpointUrl","transportKey","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getVisibilityState","getInstance","visibilityState","VISIBLE","HIDDEN","UNKNOWN","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","expiryString","getItem","expiry","configValid","configStringified","parse","getStoredConfig","processConfig","authTokenPromise","installationsService","authTokenVal","getAuthTokenPromise","configEndPoint","getProjectId","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","setItem","configTimeToLive","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","handler_1","readyState","removeEventListener","addEventListener","getDocumentReadyComplete","iidPromise","iidVal","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","MAX_EVENT_COUNT_PER_REQUEST","remainingTries","queue","isTransportSetup","processQueue","timeOffset","staged","log_event","splice","evt","source_extension_json_proto3","event_time_ms","eventTime","flTransportFullUrl","getFlTransportFullUrl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","isNaN","max","logResponseDetails","isArray","responseAction","sendEventsToFl","request_time_ms","client_info","client_type","js_client_info","log_source","transportHandler","serializer","addToQueue","sendLog","resource","resourceType","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","networkRequest","networkRequestMetric","url","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","counters","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","getUrl","service_worker_status","serviceWorker","controller","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","oobMetrics","Trace","state","traceName","api","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","startTime","duration","floor","attributes","metrics","metric","counter","numAsInteger","putMetric","startsWith","indexOf","customMetricName","providedValue","valueAsInteger","attr","isValidName","some","prefix","isValidValue","attributeName","attributeValue","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","traceMeasureName","TRACE_START_MARK_PREFIX","randomId","TRACE_STOP_MARK_PREFIX","createNetworkRequestEntry","logEndpointUrl","performanceEntry","responseStart","responseEnd","transferSize","networkRequestUrl","flEndpointUrl","FID_WAIT_TIME_MS","setupOobResources","timeoutId_1","createOobTrace","clearTimeout","resources","resources_1","setupObserver","measures","measures_1","createUserTimingTrace","substring","PerformanceController","preExist_1","DB_CHECK_NAME_1","request_1","open","deleteDatabase","isAvailable","factoryMethod","installations"],"mappings":"wOAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IASrB,IAAIO,EAAW,WAQlB,OAPAA,EAAWN,OAAOO,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIN,KADTK,EAAIG,UAAUF,GACOV,OAAOc,UAAUT,eAAeU,KAAKN,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,OAAOI,IAEKQ,MAAMC,KAAML,YA8BzB,SAASM,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAWD,EAANA,GAAUE,SAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,SAJ1CA,EAIyDK,EAAOL,iBAJ/BN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAAWA,EAAQG,MAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUN,MAAMG,EAASC,GAAc,KAAKS,UAI/D,SAASM,EAAYhB,EAASiB,GACjC,IAAsGC,EAAGC,EAAG9B,EAAxG+B,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPjC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOkC,KAAM,GAAIC,IAAK,IACzFC,EAAI,CAAEf,KAAMgB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAA7D,MAAqF,mBAAXG,SAA0BJ,EAAEI,OAAOC,UAAY,WAAa,OAAOhC,OAAU2B,EACvJ,SAASC,EAAKlC,GAAK,OAAO,SAAUuC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOb,GAAG,IACN,GAAIF,EAAI,EAAGC,IAAM9B,EAAY,EAAR2C,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAO9B,EAAI8B,EAAU,SAAM9B,EAAEO,KAAKuB,GAAI,GAAKA,EAAET,SAAWrB,EAAIA,EAAEO,KAAKuB,EAAGa,EAAG,KAAKlB,KAAM,OAAOzB,EAE3J,OADI8B,EAAI,EAAG9B,IAAG2C,EAAK,CAAS,EAARA,EAAG,GAAQ3C,EAAEmB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG3C,EAAI2C,EAAI,MACxB,KAAK,EAAc,OAAXZ,EAAEC,QAAgB,CAAEb,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGM,EAAEC,QAASF,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKZ,EAAEI,IAAIU,MAAOd,EAAEG,KAAKW,MAAO,SACxC,QACI,KAAkB7C,EAAe,GAA3BA,EAAI+B,EAAEG,MAAY7B,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAVsC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEZ,EAAI,EAAG,SACjG,GAAc,IAAVY,EAAG,MAAc3C,GAAM2C,EAAG,GAAK3C,EAAE,IAAM2C,EAAG,GAAK3C,EAAE,IAAM,CAAE+B,EAAEC,MAAQW,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYZ,EAAEC,MAAQhC,EAAE,GAAI,CAAE+B,EAAEC,MAAQhC,EAAE,GAAIA,EAAI2C,EAAI,MAC7D,GAAI3C,GAAK+B,EAAEC,MAAQhC,EAAE,GAAI,CAAE+B,EAAEC,MAAQhC,EAAE,GAAI+B,EAAEI,IAAIW,KAAKH,GAAK,MACvD3C,EAAE,IAAI+B,EAAEI,IAAIU,MAChBd,EAAEG,KAAKW,MAAO,SAEtBF,EAAKf,EAAKrB,KAAKI,EAASoB,GAC1B,MAAOT,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,UAAeD,EAAI7B,EAAI,EACtD,GAAY,EAAR2C,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACjB,EAAGuC,MAkCtD,SAASK,EAASC,GACrB,IAAI/C,EAAsB,mBAAXuC,QAAyBA,OAAOC,SAAUQ,EAAIhD,GAAK+C,EAAE/C,GAAIC,EAAI,EAC5E,GAAI+C,EAAG,OAAOA,EAAE1C,KAAKyC,GACrB,GAAIA,GAAyB,iBAAbA,EAAE3C,OAAqB,MAAO,CAC1CgB,KAAM,WAEF,OADI2B,GAAK9C,GAAK8C,EAAE3C,SAAQ2C,OAAI,GACrB,CAAE7B,MAAO6B,GAAKA,EAAE9C,KAAMuB,MAAOuB,KAG5C,MAAM,IAAIJ,UAAU3C,EAAI,0BAA4B,mCAGjD,SAASiD,EAAOF,EAAG7C,GACtB,IAAI8C,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UACjD,IAAKQ,EAAG,OAAOD,EACf,IAAmBG,EAAY7B,EAA3BpB,EAAI+C,EAAE1C,KAAKyC,GAAOI,EAAK,GAC3B,IACI,WAAc,IAANjD,GAAsB,EAANA,QAAcgD,EAAIjD,EAAEmB,QAAQI,MAAM2B,EAAGN,KAAKK,EAAEhC,OAExE,MAAOkC,GAAS/B,EAAI,CAAE+B,MAAOA,WAEzB,IACQF,IAAMA,EAAE1B,OAASwB,EAAI/C,EAAU,SAAI+C,EAAE1C,KAAKL,WAExC,GAAIoB,EAAG,MAAMA,EAAE+B,OAE7B,OAAOD,EAGJ,SAASE,IACZ,IAAK,IAAIF,EAAK,GAAIlD,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkD,EAAKA,EAAGG,OAAOL,EAAO9C,UAAUF,KACpC,OAAOkD,EAGJ,SAASI,IACZ,IAAK,IAAIvD,EAAI,EAAGC,EAAI,EAAGuD,EAAKrD,UAAUC,OAAQH,EAAIuD,EAAIvD,IAAKD,GAAKG,UAAUF,GAAGG,OAC7E,IAAK,IAAI8C,EAAIxD,MAAMM,GAAIyD,EAAI,EAAGxD,EAAI,EAAGA,EAAIuD,EAAIvD,IACzC,IAAK,IAAIyD,EAAIvD,UAAUF,GAAI0D,EAAI,EAAGC,EAAKF,EAAEtD,OAAQuD,EAAIC,EAAID,IAAKF,IAC1DP,EAAEO,GAAKC,EAAEC,GACjB,OAAOT,WCpHKW,EAAWC,EAAiBC,GAC1C,KAAMA,aAAkBxE,QACtB,OAAOwE,EAGT,OAAQA,EAAOC,aACb,KAAKC,KAIH,OAAO,IAAIA,KADOF,EACQG,WAE5B,KAAK3E,YACY4E,IAAXL,IACFA,EAAS,IAEX,MACF,KAAKpE,MAEHoE,EAAS,GACT,MAEF,QAEE,OAAOC,EAGX,IAAK,IAAMK,KAAQL,EAEZA,EAAOnE,eAAewE,IAad,cAbmCA,IAG/CN,EAAmCM,GAAQP,EACzCC,EAAmCM,GACnCL,EAAmCK,KAIxC,OAAON,SC3CPO,yBAAA,SACEC,GADF,WAGE,OAAO,SAAClB,EAAOlC,GACTkC,EACFmB,EAAKvD,OAAOoC,GAEZmB,EAAKxD,QAAQG,GAES,mBAAboD,IAGTC,EAAKC,QAAQC,MAAM,cAIK,IAApBH,EAASlE,OACXkE,EAASlB,GAETkB,EAASlB,EAAOlC,SA/BxB,aAAA,WAFAV,YAAoC,aACpCA,aAAqC,aAEnCA,KAAKgE,QAAU,IAAI1D,QAAQ,SAACC,EAASC,GACnCuD,EAAKxD,QAAUA,EACfwD,EAAKvD,OAASA,ICqCpB,MHtC0B3B,EAAGC,EGsCvBoF,EAAa,qBAYgBC,MHjD/BvF,EADsBC,IAAGC,KAGzBD,EAAEgB,UAAkB,OAANf,EAAaC,OAAOqF,OAAOtF,IAAMuF,EAAGxE,UAAYf,EAAEe,UAAW,IAAIwE,MAD/E,SAASA,IAAOrE,KAAKwD,YAAc3E,EGmDrC,WACWyF,EACTC,EACOC,KAEPC,YAAMF,gBAJGR,OAAAO,EAEFP,aAAAS,EALAT,OAAOG,EAWdnF,OAAOC,eAAe+E,EAAMW,EAAc7E,WAItCsE,MAAMQ,mBACRR,MAAMQ,kBAAkBZ,EAAMa,EAAa/E,UAAUuE,iBAezDQ,mBAAA,SACEN,OACA,aAAAO,mBAAAA,IAAAC,oBAEA,IAcuCA,EAdjCN,EAAcM,EAAK,IAAoB,GACvCC,EAAc/E,KAAKgF,YAAWV,EAC9BW,EAAWjF,KAAKkF,OAAOZ,GAEvBC,EAAUU,GAUuBH,EAVcN,EAAVS,EAW7BE,QAAQC,EAAS,SAAC9D,EAAG+D,GACnC,IAAM3E,EAAQoE,EAAKO,GACnB,OAAgB,MAAT3E,EAAgB4E,OAAO5E,GAAS,IAAI2E,UAbwB,QAE7DE,EAAiBvF,KAAKwF,iBAAgBjB,OAAYQ,OAIxD,OAFc,IAAIL,EAAcK,EAAUQ,EAAaf,OAlBzD,WACmBQ,EACAQ,EACAN,GAFAlF,aAAAgF,EACAhF,iBAAAwF,EACAxF,YAAAkF,EA4BrB,IAAME,EAAU,yBCjHAK,EAA2BC,EAAQL,GACjD,OAAOtG,OAAOc,UAAUT,eAAeU,KAAK4F,EAAKL,UC8BjDM,iCAAA,SAAqBC,GAEnB,OADA5F,KAAK6F,kBAAoBD,EAClB5F,MAGT2F,iCAAA,SAAqBG,GAEnB,OADA9F,KAAK8F,kBAAoBA,EAClB9F,MAGT2F,4BAAA,SAAgBI,GAEd,OADA/F,KAAKgG,aAAeD,EACb/F,SAlBT,WACWiG,EACAC,EACAC,GAFAnG,UAAAiG,EACAjG,qBAAAkG,EACAlG,UAAAmG,EAjBXnG,wBAAoB,EAIpBA,kBAA2B,GAE3BA,8BCjBK,IAAMoG,EAAqB,eC2BhCC,gBAAA,SAAIC,gBAAAA,KAEF,IAAMC,EAAuBvG,KAAKwG,4BAA4BF,GAE9D,IAAKtG,KAAKyG,kBAAkBC,IAAIH,GAAuB,CACrD,IAAMI,EAAW,IAAI9C,EACrB7D,KAAKyG,kBAAkBG,IAAIL,EAAsBI,GAEjD,IACE,IAAME,EAAW7G,KAAK8G,uBAAuBP,GACzCM,GACFF,EAASpG,QAAQsG,GAEnB,MAAOhG,KAMX,OAAOb,KAAKyG,kBAAkBM,IAAIR,GAAuBvC,SAmB3DqC,yBAAA,SAAaW,GAIL,IAAAC,KACJX,WAAYF,EACZc,UAAU,GACPF,GAHGV,eAAYY,aAMdX,EAAuBvG,KAAKwG,4BAA4BF,GAC9D,IACE,IAAMO,EAAW7G,KAAK8G,uBAAuBP,GAE7C,GAAKM,EAML,OAAOA,EALL,GAAIK,EACF,OAAO,KAET,MAAM/C,MAAM,WAAWnE,KAAKiG,0BAG9B,MAAOpF,GACP,GAAIqG,EACF,OAAO,KAEP,MAAMrG,IAKZwF,yBAAA,WACE,OAAOrG,KAAKmH,WAGdd,yBAAA,SAAac,WACX,GAAIA,EAAUlB,OAASjG,KAAKiG,KAC1B,MAAM9B,MACJ,yBAAyBgD,EAAUlB,sBAAqBjG,KAAKiG,UAIjE,GAAIjG,KAAKmH,UACP,MAAMhD,MAAM,iBAAiBnE,KAAKiG,mCAKpC,cAFAjG,KAAKmH,UAAYA,GA2FFtB,kBAxFb,IACE7F,KAAK8G,uBAAuBV,GAC5B,MAAOvF,QAWX,IAGK,IAAAuG,EAAA9E,EAAAtC,KAAKyG,kBAAkBY,yCAAW,CAH5B,IAAAC,EAAA7E,aACT8E,OACAC,OAEMjB,EAAuBvG,KAAKwG,4BAChCe,GAGF,IAEE,IAAMV,EAAW7G,KAAK8G,uBAAuBP,GAC7CiB,EAAiBjH,QAAQsG,GACzB,MAAOhG,yGAObwF,0BAAA,SAAcC,gBAAAA,KACZtG,KAAKyG,kBAAkBgB,OAAOnB,GAC9BtG,KAAK0H,UAAUD,OAAOnB,IAKlBD,mBAAN,yGAGE,OAFMsB,EAAWzI,MAAM0I,KAAK5H,KAAK0H,UAAUG,aAErCvH,QAAQwH,MACTH,EACAI,OAAO,SAAA/C,GAAW,MAAA,aAAcA,IAEhCgD,IAAI,SAAAhD,GAAW,OAACA,EAAgBiD,SAAUR,WAC1CE,EACAI,OAAO,SAAA/C,GAAW,MAAA,YAAaA,IAE/BgD,IAAI,SAAAhD,GAAW,OAACA,EAAgBkD,6BARrCjB,mBAYFZ,2BAAA,WACE,OAAyB,MAAlBrG,KAAKmH,WAGNd,mCAAR,SACEC,GAEA,IAsBmCA,EAtB/BO,EAAW7G,KAAK0H,UAAUX,IAAIT,GASlC,OARKO,GAAY7G,KAAKmH,YACpBN,EAAW7G,KAAKmH,UAAUjB,gBACxBlG,KAAKmI,WAmB0B7B,EAlBDA,KAmBdF,OAAqBzC,EAAY2C,GAjBnDtG,KAAK0H,UAAUd,IAAIN,EAAYO,IAG1BA,GAAY,MAGbR,wCAAR,SAAoCC,GAClC,OAAItG,KAAKmH,WACAnH,KAAKmH,UAAUrB,kBAEfQ,EAFgDF,MA1K3D,WACmBH,EACAkC,GADAnI,UAAAiG,EACAjG,eAAAmI,EATXnI,eAAiC,KACxBA,eAAgD,IAAIoI,IACpDpI,uBAGb,IAAIoI,WCKRC,yBAAA,SAA6BlB,GAC3B,IAAMmB,EAAWtI,KAAKuI,YAAYpB,EAAUlB,MAC5C,GAAIqC,EAASE,iBACX,MAAM,IAAIrE,MACR,aAAagD,EAAUlB,0CAAyCjG,KAAKiG,MAIzEqC,EAASG,aAAatB,IAGxBkB,oCAAA,SAAwClB,GACrBnH,KAAKuI,YAAYpB,EAAUlB,MAC/BuC,kBAEXxI,KAAK0I,UAAUjB,OAAON,EAAUlB,MAGlCjG,KAAK2I,aAAaxB,IAUpBkB,wBAAA,SAA4BpC,GAC1B,GAAIjG,KAAK0I,UAAUhC,IAAIT,GACrB,OAAOjG,KAAK0I,UAAU3B,IAAId,GAI5B,IAAMqC,EAAW,IAAIjC,EAAYJ,EAAMjG,MAGvC,OAFAA,KAAK0I,UAAU9B,IAAIX,EAAMqC,GAElBA,GAGTD,yBAAA,WACE,OAAOnJ,MAAM0I,KAAK5H,KAAK0I,UAAUb,cApDnC,WAA6B5B,GAAAjG,UAAAiG,EAFZjG,eAAY,IAAIoI,2LCgB5B,IAaKQ,EAbClB,EAAsB,IAavBkB,GAAAA,EAAAA,2BAEVA,2BACAA,qBACAA,qBACAA,uBACAA,yBA+CoC,SAAhCC,EAAiChC,EAAUiC,OAAS,aAAAjE,mBAAAA,IAAAkE,oBACxD,KAAID,EAAUjC,EAASmC,UAAvB,CAGA,IAAMC,GAAM,IAAIxF,MAAOyF,cACjBC,EAASC,EAAcN,GAC7B,IAAIK,EAMF,MAAM,IAAIhF,MACR,8DAA8D2E,OANhEO,QAAQF,SAARE,WACE,IAAIJ,QAASpC,EAASZ,UACnB8C,KArDT,IAAMO,EAA2D,CAC/DC,MAASX,EAASY,MAClBC,QAAWb,EAASc,QACpBC,KAAQf,EAASgB,KACjBC,KAAQjB,EAASkB,KACjBlH,MAASgG,EAASmB,MAClBC,OAAUpB,EAASqB,QAMfC,EAA4BtB,EAASgB,KAmBrCR,UACHR,EAASY,OAAQ,MAClBvC,EAAC2B,EAASc,SAAU,MACpBzC,EAAC2B,EAASgB,MAAO,OACjB3C,EAAC2B,EAASkB,MAAO,OACjB7C,EAAC2B,EAASmB,OAAQ,cA6ClBhL,sBAAIoL,4BAAJ,WACE,OAAOnK,KAAKoK,eAGd,SAAaC,GACX,KAAMA,KAAOzB,GACX,MAAM,IAAIzG,UAAU,kBAAkBkI,8BAExCrK,KAAKoK,UAAYC,mCAInBF,wBAAA,SAAYE,GACVrK,KAAKoK,UAA2B,iBAARC,EAAmBf,EAAkBe,GAAOA,GAQtEtL,sBAAIoL,8BAAJ,WACE,OAAOnK,KAAKsK,iBAEd,SAAeD,GACb,GAAmB,mBAARA,EACT,MAAM,IAAIlI,UAAU,qDAEtBnC,KAAKsK,YAAcD,mCAOrBtL,sBAAIoL,kCAAJ,WACE,OAAOnK,KAAKuK,qBAEd,SAAmBF,GACjBrK,KAAKuK,gBAAkBF,mCAOzBF,kBAAA,eAAM,aAAAtF,mBAAAA,IAAAkE,kBACJ/I,KAAKuK,iBAAmBvK,KAAKuK,sBAALvK,QAAqBA,KAAM4I,EAASY,OAAUT,IACtE/I,KAAKsK,kBAALtK,QAAiBA,KAAM4I,EAASY,OAAUT,KAE5CoB,gBAAA,eAAI,aAAAtF,mBAAAA,IAAAkE,kBACF/I,KAAKuK,iBACHvK,KAAKuK,sBAALvK,QAAqBA,KAAM4I,EAASc,SAAYX,IAClD/I,KAAKsK,kBAALtK,QAAiBA,KAAM4I,EAASc,SAAYX,KAE9CoB,iBAAA,eAAK,aAAAtF,mBAAAA,IAAAkE,kBACH/I,KAAKuK,iBAAmBvK,KAAKuK,sBAALvK,QAAqBA,KAAM4I,EAASgB,MAASb,IACrE/I,KAAKsK,kBAALtK,QAAiBA,KAAM4I,EAASgB,MAASb,KAE3CoB,iBAAA,eAAK,aAAAtF,mBAAAA,IAAAkE,kBACH/I,KAAKuK,iBAAmBvK,KAAKuK,sBAALvK,QAAqBA,KAAM4I,EAASkB,MAASf,IACrE/I,KAAKsK,kBAALtK,QAAiBA,KAAM4I,EAASkB,MAASf,KAE3CoB,kBAAA,eAAM,aAAAtF,mBAAAA,IAAAkE,kBACJ/I,KAAKuK,iBAAmBvK,KAAKuK,sBAALvK,QAAqBA,KAAM4I,EAASmB,OAAUhB,IACtE/I,KAAKsK,kBAALtK,QAAiBA,KAAM4I,EAASmB,OAAUhB,QA7E5C,WAAmB9C,GAAAjG,UAAAiG,EAUXjG,eAAYkK,EAsBZlK,iBAA0B6I,EAc1B7I,qBAAqC,KA1C3C0H,EAAUrF,KAAKrC,eA6EHwK,EAAYC,GAC1B/C,EAAUgD,QAAQ,SAAAC,GAChBA,EAAKH,YAAYC,KC3LrB,IAAMG,qBAEF,oFAEF3D,mBAAyB,gCACzBA,oBAA0B,iDAC1BA,kBAAwB,kDACxBA,2BACE,6EAEFA,2BACE,4DAKS4D,EAAgB,IAAIjG,EAC/B,MACA,WACAgG,qBC9BWxE,EAAqB,YAcrB0E,IAAsB7D,OAChC8D,GAAU,YACX9D,0BAAiB,iBACjBA,qBAAY,YACZA,yBAAgB,YAChBA,0BAAiB,UACjBA,8BAAqB,WACrBA,0BAAiB,WACjBA,4BAAmB,YACnBA,8BAAoB,UACpBA,wBAAe,WACfA,0BAAiB,WACjBA,cAAW,UACXA,uBAAe,qBC2BflI,sBAAIiM,kDAAJ,WAEE,OADAhL,KAAKiL,kBACEjL,KAAKkL,qCAGd,SAAmCb,GACjCrK,KAAKiL,kBACLjL,KAAKkL,gCAAkCb,mCAGzCtL,sBAAIiM,wBAAJ,WAEE,OADAhL,KAAKiL,kBACEjL,KAAKmL,uCAGdpM,sBAAIiM,2BAAJ,WAEE,OADAhL,KAAKiL,kBACEjL,KAAKoL,0CAGdJ,mBAAA,WAAA,WACE,OAAO,IAAI1K,QAAQ,SAAAC,GACjBwD,EAAKkH,kBACL1K,MAECU,KAAK,WAGJ,OAFA8C,EAAKsH,UAAUpD,SAASqD,UAAUvH,EAAKoH,OAEhC7K,QAAQwH,IACb/D,EAAKoE,UAAUoD,eAAevD,IAAI,SAAAM,GAAY,OAAAA,EAASb,cAG1DxG,KAAK,WACJ8C,EAAKyH,YAAa,KAkBxBR,wBAAA,SACE/E,EACAsB,GAKA,oBALAA,KAEAvH,KAAKiL,kBAGGjL,KAAKmI,UAAUI,YAAYtC,GAAcwF,aAAa,CAC5DnF,WAAYiB,KAQRyD,4BAAR,WACE,GAAIhL,KAAKwL,WACP,MAAMX,EAAczG,qBAA6B,CAAE2G,QAAS/K,KAAKmL,YA1FrE,WACEnE,EACA0E,EACiBL,kBAAArL,eAAAqL,EAVXrL,iBAAa,EAKZA,cAAW,GAOlBA,KAAKmL,MAAQO,EAAOzF,KACpBjG,KAAKkL,gCACHQ,EAAOC,iCAAkC,EAC3C3L,KAAKoL,SXrCA/H,OAAWM,EWqC0BqD,GAC1ChH,KAAKmI,UAAY,IAAIE,EAAmBqD,EAAOzF,MAG/CjG,KAAKmI,UAAUQ,aACb,IAAIhD,EAAU,MAAO,WAAM,OAAA5B,kBAG7B,IAAwB,IAAAqD,EAAA9E,EAAAtC,KAAKqL,UAAUpD,SAAS2D,WAAW/D,wCAAU,CAAhE,IAAMV,UACTnH,KAAKmI,UAAUQ,aAAaxB,oHChDrB0E,EAAS,IAAI1B,EAAO,0BCgCjB2B,EACdC,GAEA,IAAMC,EAAwC,GAExCJ,EAAa,IAAIxD,IAGjB6D,EAA+B,CAInCC,YAAY,EACZC,cAgEF,SACEnF,EACAoF,gBAAAA,MAEA,CAAyB,iBAAdA,GAAwC,OAAdA,IAEnCA,EAAY,CAAEnG,KADDmG,IAIf,IAAMV,EAASU,OAEKzI,IAAhB+H,EAAOzF,OACTyF,EAAOzF,KAAOG,GAGRH,EAASyF,OAEjB,GAAoB,iBAATzF,IAAsBA,EAC/B,MAAM4E,EAAczG,sBAA8B,CAChD2G,QAASzF,OAAOW,KAIpB,GAAIR,EAASuG,EAAM/F,GACjB,MAAM4E,EAAczG,uBAA+B,CAAE2G,QAAS9E,IAG1DoG,EAAM,IAAIN,EACd/E,EACA0E,EACAO,GAKF,OAFAD,EAAK/F,GAAQoG,GA/FbA,MACAC,gBAkLF,SACEC,EACAC,EACAC,OAIIC,YAAU5B,EAAoByB,kBAAqBA,EACnDE,IACFC,GAAW,IAAID,GAEjB,IAAME,EAAkBD,EAAQE,MAAM,SAChCC,EAAkBL,EAAQI,MAAM,SACtC,GAAID,GAAmBE,EAAiB,CAChCC,EAAU,CACd,+BAA+BJ,qBAA0BF,QAgB3D,OAdIG,GACFG,EAAQzK,KACN,iBAAiBqK,uDAGjBC,GAAmBE,GACrBC,EAAQzK,KAAK,OAEXwK,GACFC,EAAQzK,KACN,iBAAiBmK,4DAGrBX,EAAOhC,KAAKiD,EAAQC,KAAK,MAG3BC,EACE,IAAIrH,EACC+G,aACH,WAAM,OAAGA,UAASF,yBArNtBhC,cACAyC,MA0NF,SAAeC,EAAiClG,GAC9C,GAAoB,OAAhBkG,GAA+C,mBAAhBA,EACjC,MAAMrC,EAAczG,8BAAsC,CACxD2G,QAAS9E,iBLtEfiH,EACAlG,GAEA,YAAuBmG,IAAAtI,WAAAA,eAAZgC,GACT,IAAIuG,EAAkC,KAClCpG,GAAWA,EAAQyD,QACrB2C,EAAiB9D,EAAkBtC,EAAQyD,QAG3C5D,EAASwG,eADS,OAAhBH,EACwB,KAEA,SACxBrG,EACA4D,OACA,aAAA5F,mBAAAA,IAAAkE,oBAEA,IAAMxE,EAAUwE,EACbf,IAAI,SAAAsF,GACH,GAAW,MAAPA,EACF,OAAO,KACF,GAAmB,iBAARA,EAChB,OAAOA,EACF,GAAmB,iBAARA,GAAmC,kBAARA,EAC3C,OAAOA,EAAIC,WACN,GAAID,aAAenJ,MACxB,OAAOmJ,EAAI/I,QAEX,IACE,OAAOiJ,KAAKC,UAAUH,GACtB,MAAOI,GACP,OAAO,QAIZ3F,OAAO,SAAAuF,GAAO,OAAAA,IACdP,KAAK,KACJtC,IAAU2C,MAAAA,EAAAA,EAAkBvG,EAASmC,WACvCkE,EAAY,CACVzC,MAAO7B,EAAS6B,GAAOkD,cACvBpJ,UACAwE,OACA5C,KAAMU,EAASZ,gBKgCvB2H,CAAkBV,EAAalG,IA9N/BgF,KAAM,KACN6B,YAAarB,EACbvE,SAAU,CACR+E,oBACA1B,UA4BJ,SAAmBrF,UACV+F,EAAK/F,IA5BV2F,aACAkC,aA6NJ,SAAsBzB,EAAkBpG,GACtC,GAAa,eAATA,EACF,OAAO,KAKT,OAFmBA,KAjMrB,SAASoG,EAAIpG,GAEX,IAAKR,EAASuG,EADd/F,EAAOA,GAAQG,GAEb,MAAMyE,EAAczG,gBAAwB,CAAE2G,QAAS9E,IAEzD,OAAO+F,EAAK/F,GA2Dd,SAAS+G,EACP7F,WAmBQ4G,EAjBFC,EAAgB7G,EAAUlB,KAChC,GAAI2F,EAAWlF,IAAIsH,GAKjB,OAJAnC,EAAOtC,MACL,sDAAsDyE,kBAGjD7G,EAAUhB,KAEZ8F,EAAkB+B,GACnB,KAGNpC,EAAWhF,IAAIoH,EAAe7G,cAG1BA,EAAUhB,OAEN4H,EAAmB,SACvBE,GAGA,gBAHAA,EAAsB5B,KAGwB,mBAAlC4B,EAAeD,GAGzB,MAAMnD,EAAczG,8BAAsC,CACxD2G,QAASiD,IAMb,OAAQC,EAAeD,WAIMrK,IAA3BwD,EAAUnB,cACZ3C,EAAW0K,EAAkB5G,EAAUnB,cAIxCiG,EAAkB+B,GAAiBD,EAInChC,EAAgBlM,UAAkBmO,GAIjC,eAAU,aAAAnJ,mBAAAA,IAAAkE,kBAER,OADmB/I,KAAKkO,YAAYC,KAAKnO,KAAMgO,GAC7BjO,MAChBC,KACAmH,EAAUrB,kBAAoBiD,EAAO,UAM7C,IAAsB,IAAA3B,EAAA9E,EAAAvD,OAAOqP,KAAKpC,kCAAO,CAApC,IAAMjB,UACRiB,EAAKjB,GAA0BsD,cAAclH,qGAGhD,iBAAOA,EAAUhB,KAEZ8F,EAAkB+B,GACnB,KAkEN,OAxNC/B,EAA2B,QAAIA,EAGhClN,OAAOuP,eAAerC,EAAW,OAAQ,CACvClF,IAyEF,WAEE,OAAOhI,OAAOqP,KAAKpC,GAAMhE,IAAI,SAAA/B,GAAQ,OAAA+F,EAAK/F,QApD5CoG,EAAS,IAAIN,EA6LNE,EC5RT,OAIEsC,kCAAA,WAIE,OAHkBvO,KAAKmI,UAAUoD,eAI9BvD,IAAI,SAAAM,GACH,GAmBR,SACEA,GAEMnB,EAAYmB,EAASkG,eAC3B,mBAAOrH,MAAAA,SAAAA,EAAWhB,MAvBRsI,CAAyBnG,GAAW,CAChCtD,EAAUsD,EAASmD,eACzB,OAAUzG,EAAQ0H,YAAW1H,EAAQwH,QAErC,OAAO,OAGVzE,OAAO,SAAA2G,GAAa,OAAAA,IACpB3B,KAAK,SAjBV,WAA6B5E,GAAAnI,eAAAmI,MCD7BwG,EACAlC,ECLWkC,aCQX,IAAM1C,EAAYH,EAA4Bd,GAE9CiB,EAAU4B,YAAiB5B,EAAU4B,oBAErC,IAAMb,EAAqBf,EAAiChE,SACzD+E,kBAuBH,OAtBCf,EAAiChE,SAAS+E,kBAM3C,SAEE7F,GAGA,cACEA,EAAUhB,MACS,gBAAnBgB,EAAUlB,MACS,kBAAnBkB,EAAUlB,KAKZ,OAAO+G,EAAkB7F,GAHvB,MAAMhD,MAAS8B,4DAMZgG,EDpCe2C,GEhBxB,SAASC,GAAiBC,GACxB,OAAO,IAAIxO,QAAQ,SAASC,EAASC,GACnCsO,EAAQC,UAAY,WAClBxO,EAAQuO,EAAQ/N,SAGlB+N,EAAQE,QAAU,WAChBxO,EAAOsO,EAAQlM,UAKrB,SAASqM,GAAqBvJ,EAAKyD,EAAQJ,GACzC,IAAI+F,EACA3P,EAAI,IAAImB,QAAQ,SAASC,EAASC,GAEpCqO,GADAC,EAAUpJ,EAAIyD,GAAQpJ,MAAM2F,EAAKqD,IACP9H,KAAKV,EAASC,KAI1C,OADArB,EAAE2P,QAAUA,EACL3P,EAWT,SAAS+P,GAAgBC,EAAYC,EAAYC,GAC/CA,EAAW3E,QAAQ,SAAS9G,GAC1B7E,OAAOuP,eAAea,EAAWtP,UAAW+D,EAAM,CAChDmD,IAAK,WACH,OAAO/G,KAAKoP,GAAYxL,IAE1BgD,IAAK,SAASyD,GACZrK,KAAKoP,GAAYxL,GAAQyG,OAMjC,SAASiF,GAAoBH,EAAYC,EAAYG,EAAaF,GAChEA,EAAW3E,QAAQ,SAAS9G,GACpBA,KAAQ2L,EAAY1P,YAC1BsP,EAAWtP,UAAU+D,GAAQ,WAC3B,OAAOqL,GAAqBjP,KAAKoP,GAAaxL,EAAMjE,eAK1D,SAAS6P,GAAaL,EAAYC,EAAYG,EAAaF,GACzDA,EAAW3E,QAAQ,SAAS9G,GACpBA,KAAQ2L,EAAY1P,YAC1BsP,EAAWtP,UAAU+D,GAAQ,WAC3B,OAAO5D,KAAKoP,GAAYxL,GAAM7D,MAAMC,KAAKoP,GAAazP,eAK5D,SAAS8P,GAA0BN,EAAYC,EAAYG,EAAaF,GACtEA,EAAW3E,QAAQ,SAAS9G,GACpBA,KAAQ2L,EAAY1P,YAC1BsP,EAAWtP,UAAU+D,GAAQ,WAC3B,OA3C8B8B,EA2CI1F,KAAKoP,IA1CvCjQ,EAAI8P,GAAqBvJ,EA0C2B9B,EAAMjE,YAzCrDsB,KAAK,SAASP,GACrB,GAAKA,EACL,OAAO,IAAIgP,GAAOhP,EAAOvB,EAAE2P,WAJ/B,IAAoCpJ,EAC9BvG,MA+CN,SAASwQ,GAAMC,GACb5P,KAAK6P,OAASD,EAuBhB,SAASF,GAAOI,EAAQhB,GACtB9O,KAAK+P,QAAUD,EACf9P,KAAKgQ,SAAWlB,EA+BlB,SAASmB,GAAYC,GACnBlQ,KAAKmQ,OAASD,EAuChB,SAASE,GAAYC,GACnBrQ,KAAKsQ,IAAMD,EACXrQ,KAAKuQ,SAAW,IAAIjQ,QAAQ,SAASC,EAASC,GAC5C6P,EAAeG,WAAa,WAC1BjQ,KAEF8P,EAAerB,QAAU,WACvBxO,EAAO6P,EAAezN,QAExByN,EAAeI,QAAU,WACvBjQ,EAAO6P,EAAezN,UAkB5B,SAAS8N,GAAUC,EAAIC,EAAYC,GACjC7Q,KAAK8Q,IAAMH,EACX3Q,KAAK4Q,WAAaA,EAClB5Q,KAAK6Q,YAAc,IAAIT,GAAYS,GAkBrC,SAASE,GAAGJ,GACV3Q,KAAK8Q,IAAMH,EHrMXlE,ECH+B,QDE/BkC,ECFqBA,GDKY1G,SAAS+E,kBACxC,IAAIrH,EACF,kBACA,SAAAwC,GAAa,OAAA,IAAIoG,EAAsBpG,gBAK3CwG,EAASrC,gBAAgBrG,WAAewG,GAExCkC,EAASrC,gBAAgB,UAAW,IG0CtC4C,GAAgBS,GAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFL,GAAoBK,GAAO,SAAUqB,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGFvB,GAA0BE,GAAO,SAAUqB,SAAU,CACnD,aACA,kBAQF9B,GAAgBQ,GAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFJ,GAAoBI,GAAQ,UAAWuB,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsBvG,QAAQ,SAASwG,GACvDA,KAAcD,UAAUpR,YAC9B6P,GAAO7P,UAAUqR,GAAc,WAC7B,IAAIpB,EAAS9P,KACT+I,EAAOpJ,UACX,OAAOW,QAAQC,UAAUU,KAAK,WAE5B,OADA6O,EAAOC,QAAQmB,GAAYnR,MAAM+P,EAAOC,QAAShH,GAC1C8F,GAAiBiB,EAAOE,UAAU/O,KAAK,SAASP,GACrD,GAAKA,EACL,OAAO,IAAIgP,GAAOhP,EAAOoP,EAAOE,kBAUxCC,GAAYpQ,UAAUsR,YAAc,WAClC,OAAO,IAAIxB,GAAM3P,KAAKmQ,OAAOgB,YAAYpR,MAAMC,KAAKmQ,OAAQxQ,aAG9DsQ,GAAYpQ,UAAU+P,MAAQ,WAC5B,OAAO,IAAID,GAAM3P,KAAKmQ,OAAOP,MAAM7P,MAAMC,KAAKmQ,OAAQxQ,aAGxDuP,GAAgBe,GAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFX,GAAoBW,GAAa,SAAUmB,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGF3B,GAA0BQ,GAAa,SAAUmB,eAAgB,CAC/D,aACA,kBAGF5B,GAAaS,GAAa,SAAUmB,eAAgB,CAClD,gBAkBFhB,GAAYvQ,UAAUwR,YAAc,WAClC,OAAO,IAAIpB,GAAYjQ,KAAKsQ,IAAIe,YAAYtR,MAAMC,KAAKsQ,IAAK3Q,aAG9DuP,GAAgBkB,GAAa,MAAO,CAClC,mBACA,SAGFZ,GAAaY,GAAa,MAAOkB,eAAgB,CAC/C,UASFZ,GAAU7Q,UAAU0R,kBAAoB,WACtC,OAAO,IAAItB,GAAYjQ,KAAK8Q,IAAIS,kBAAkBxR,MAAMC,KAAK8Q,IAAKnR,aAGpEuP,GAAgBwB,GAAW,MAAO,CAChC,OACA,UACA,qBAGFlB,GAAakB,GAAW,MAAOc,YAAa,CAC1C,oBACA,UAOFT,GAAGlR,UAAUgR,YAAc,WACzB,OAAO,IAAIT,GAAYpQ,KAAK8Q,IAAID,YAAY9Q,MAAMC,KAAK8Q,IAAKnR,aAG9DuP,GAAgB6B,GAAI,MAAO,CACzB,OACA,UACA,qBAGFvB,GAAauB,GAAI,MAAOS,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiB9G,QAAQ,SAAS+G,GAC/C,CAACxB,GAAaN,IAAOjF,QAAQ,SAAS6E,GAE9BkC,KAAYlC,EAAY1P,YAE9B0P,EAAY1P,UAAU4R,EAAStM,QAAQ,OAAQ,YAAc,WAC3D,IAAI4D,GAvPO2I,EAuPQ/R,UAtPhBT,MAAMW,UAAU8R,MAAM7R,KAAK4R,IAuP1B5N,EAAWiF,EAAKA,EAAKnJ,OAAS,GAC9BgS,EAAe5R,KAAKmQ,QAAUnQ,KAAK6P,OACnCf,EAAU8C,EAAaH,GAAU1R,MAAM6R,EAAc7I,EAAK4I,MAAM,GAAI,IACxE7C,EAAQC,UAAY,WAClBjL,EAASgL,EAAQ/N,eAOzB,CAAC4O,GAAOM,IAAavF,QAAQ,SAAS6E,GAChCA,EAAY1P,UAAUgS,SAC1BtC,EAAY1P,UAAUgS,OAAS,SAASC,EAAOC,GAC7C,IAAIlL,EAAW7G,KACXgS,EAAQ,GAEZ,OAAO,IAAI1R,QAAQ,SAASC,GAC1BsG,EAASoL,cAAcH,EAAO,SAAShC,GAChCA,GAILkC,EAAM3P,KAAKyN,EAAOpP,YAEJiD,IAAVoO,GAAuBC,EAAMpS,QAAUmS,EAI3CjC,EAAOoC,WAHL3R,EAAQyR,IANRzR,EAAQyR,eCzPLG,GAAqB,IAErBC,GAAkB,WAClBC,GAAwB,SAExBC,GACX,kDAEWC,GAA0B,KCEjCC,wCAEF,kDACFvL,oBAA4B,2CAC5BA,4BAAoC,mCACpCA,oBACE,6FACFA,iBAAyB,kDACzBA,iCACE,8EAaS4D,GAAgB,IAAIjG,EDtBV,gBACK,gBCwB1B4N,aAYcC,GAAc7P,GAC5B,OACEA,aAAiB8B,GACjB9B,EAAM0B,KAAKoO,oCCtCCC,GAAyB1L,GAAE2L,cACzC,OAAUN,gBAAkCM,4BAG9BC,GACdC,GAEA,MAAO,CACLC,MAAOD,EAASC,MAChBC,gBACAC,WA8DuCC,EA9DMJ,EAASG,UAgEjDE,OAAOD,EAAkB/N,QAAQ,IAAK,SA/D3CiO,aAAc3P,KAAKwF,gBAIDoK,GACpBC,EACAR,iGAEoC,SAAMA,EAASS,eAEnD,OAFMC,EAA8BvM,SAC9BwM,EAAYD,EAAa5Q,SACxBiI,GAAczG,wBAAiC,CACpDkP,cACAI,WAAYD,EAAUnP,KACtBqP,cAAeF,EAAUlP,QACzBqP,aAAcH,EAAUI,wBAIZC,GAAW7M,GAAE8M,WAC3B,OAAO,IAAIC,QAAQ,CACjBC,eAAgB,mBAChBC,OAAQ,mBACRC,iBAAkBJ,aAINK,GACdC,EACApN,GAAEqN,iBAEIC,EAAUT,GAAWO,GAE3B,OADAE,EAAQC,OAAO,gBAoCLnC,OApC6CiC,GAChDC,WAgBaE,GACpBC,iGAEe,SAAMA,YAErB,OAAqB,MAFf3T,EAASkG,UAEJ4M,QAAiB9S,EAAO8S,OAAS,OAEnCa,QAGF3T,iBClFO4T,GAAMC,GACpB,OAAO,IAAItU,QAAc,SAAAC,GACvBsU,WAAWtU,EAASqU,KCDjB,IAAME,GAAoB,oBACpBC,GAAc,YAMXC,KACd,IAGE,IAAMC,EAAe,IAAIC,WAAW,KAElCC,KAAKC,QAAYD,KAA0CE,UACtDC,gBAAgBL,GAGvBA,EAAa,GAAK,IAAcA,EAAa,GAAK,GAE5CM,WCrB4BC,GAEpC,OADYC,KAAKnQ,OAAOoQ,mBAAPpQ,SAAuBkQ,KAC7BrQ,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KD8B5BwQ,CAXGV,GAeJW,OAAO,EAAG,IAbzB,OAAOd,GAAkBe,KAAKN,GAAOA,EAAMR,GAC3C,SAEA,OAAOA,aEvBKe,GAAOzB,GACrB,OAAUA,EAAUtJ,YAAWsJ,EAAU0B,MCA3C,IAAMC,GAA2D,IAAI5N,aAMrD6N,GAAW5B,EAAsBkB,GACzClQ,EAAMyQ,GAAOzB,GAEnB6B,GAAuB7Q,EAAKkQ,GAsD9B,SAA4BlQ,EAAakQ,GACvC,IAAMY,EAAUC,KACZD,GACFA,EAAQE,YAAY,CAAEhR,MAAKkQ,QAE7Be,KA1DAC,CAAmBlR,EAAKkQ,GA0C1B,SAASW,GAAuB7Q,EAAakQ,WACrCiB,EAAYR,GAAmBjP,IAAI1B,GACzC,GAAKmR,MAIL,IAAuB,IAAAC,EAAAnU,EAAAkU,iCAAW,EAChC1S,WAASyR,sGAYb,IAAImB,GAA4C,KAEhD,SAASN,KAOP,OANKM,IAAoB,qBAAsBvB,QAC7CuB,GAAmB,IAAIC,iBAAiB,0BACvBC,UAAY,SAAA/V,GAC3BqV,GAAuBrV,EAAEiE,KAAKO,IAAKxE,EAAEiE,KAAKyQ,OAGvCmB,GAGT,SAASJ,KACyB,IAA5BN,GAAmBa,MAAcH,KACnCA,GAAiBI,QACjBJ,GAAmB,MCpFvB,ICcsC7P,GDdhCkQ,GAAgB,kCAChBC,GAAmB,EACnBC,GAAoB,+BAEtBC,GAAgC,KACpC,SAASC,KT+PF,IAAsB3K,EAAS4K,EAEhCtI,ESnPJ,OAbKoI,KT8PsB1K,ES7PSwK,GT6PAI,ES7PkB,SAAAC,GAO3C,IADCA,EAAUzG,YAEdyG,EAAU9F,kBAAkB0F,MTuPhCnI,GADA3P,EAAI8P,GAAqBqI,UAAW,OAAQ,CS9P3BP,GT8PkCvK,KACvCsC,WAGdA,EAAQyI,gBAAkB,SAASC,GAC7BJ,GACFA,EAAgB,IAAI1G,GAAU5B,EAAQ/N,OAAQyW,EAAM5G,WAAY9B,EAAQ+B,gBSpQ5EqG,GTyQK/X,EAAE8B,KAAK,SAAS0P,GACrB,OAAO,IAAII,GAAGJ,MS9PTuG,YAgBatQ,GACpByN,EACA3T,uGAGW,OADL2E,EAAMyQ,GAAOzB,MACF8C,aAGA,OAHXxG,EAAK1J,SACLwQ,EAAK9G,EAAGE,YAAYoG,GAAmB,iBACvC5F,EAAcoG,EAAGpG,YAAY4F,KACAlQ,IAAI1B,WACvC,OADMqS,EAAWzQ,YACXoK,EAAYsG,IAAIjX,EAAO2E,WAC7B,OADA4B,YACMwQ,EAAGlH,iBAMT,OANAtJ,SAEKyQ,GAAYA,EAASnC,MAAQ7U,EAAM6U,KACtCU,GAAW5B,EAAW3T,EAAM6U,QAGvB7U,iBAIakX,GAAOvD,mGAEhB,OADLhP,EAAMyQ,GAAOzB,MACF8C,aAEjB,OAFMxG,EAAK1J,aACLwQ,EAAK9G,EAAGE,YAAYoG,GAAmB,cACpC5F,YAAY4F,IAAmBxP,OAAOpC,WAC/C,OADA4B,YACMwQ,EAAGlH,wBAATtJ,2BASoB4Q,GACpBxD,EACAyD,yGAGW,OADLzS,EAAMyQ,GAAOzB,MACF8C,aAG+B,OAH1CxG,EAAK1J,SACLwQ,EAAK9G,EAAGE,YAAYoG,GAAmB,iBACvC/G,EAAQuH,EAAGpG,YAAY4F,KAC+BlQ,IAAI1B,kBAA1DqS,EAA0CzQ,cAG/BtD,KAFXoU,EAAWD,EAASJ,aAGlBxH,EAAMzI,OAAOpC,kBAAnB4B,sBAEA,SAAMiJ,EAAMyH,IAAII,EAAU1S,WAA1B4B,0BAEF,SAAMwQ,EAAGlH,iBAMT,OANAtJ,UAEI8Q,GAAcL,GAAYA,EAASnC,MAAQwC,EAASxC,KACtDU,GAAW5B,EAAW0D,EAASxC,QAG1BwC,iBEzEaC,GACpB3D,qGAI0B,SAAMwD,GAAOxD,EAAW,SAAA4D,GAC1CC,EAgCDC,GAhCqDF,GA2Bf,CAC3C1C,IAAKP,KACLoD,uBA5BMC,EAyCV,SACEhE,EACA6D,GAEA,CAAA,OAAIA,EAAkBE,mBAuBf,WACLF,EAAkBE,mBAEX,CACLF,oBACAI,oBAmCN,SACEjE,qGAM+B,SAAMkE,GAA0BlE,WAA3DmE,EAA2BpR,qCACxBoR,EAAMJ,4BAELzD,GAAM,aAEJ,OAFRvN,YAEcmR,GAA0BlE,kBAAxCmE,EAAQpR,iCAGNoR,EAAMJ,4BAKEJ,GAAqB3D,WAE/B,OALMpN,EAGFG,SAFF8Q,uBACAI,4BAIOA,MAGAJ,UAIX,SAAOM,QAjEkBC,CAAyBpE,IAGzC,CAAE6D,qBA9BT,IAAKQ,UAAUC,OAAQ,CAErB,IAAMC,EAA+BtY,QAAQE,OAC3CqK,GAAczG,uBAEhB,MAAO,CACL8T,oBACAI,oBAAqBM,GAKnBC,EAA+C,CACnDtD,IAAK2C,EAAkB3C,IACvB6C,qBACAU,iBAAkBrV,KAAKwF,OAEnBqP,EAkBV,SACEjE,EACA6D,mGAGsC,yCCpGtC7D,EACApN,OAAEsO,8GAkBe,OAhBXwD,EAAWpG,GAAyB0B,GAEpCE,EAAUT,GAAWO,GACrBlT,EAAO,CACXoU,MACAyD,YAAa3G,GACb0D,MAAO1B,EAAU0B,MACjBkD,WAAY7G,IAGRtD,EAAuB,CAC3B3F,OAAQ,OACRoL,UACApT,KAAMqM,KAAKC,UAAUtM,OAGAsT,GAAmB,WAAM,OAAAyE,MAAMH,EAAUjK,oBAA1DgE,EAAW1L,UACJ+R,MAC6CrG,EAASS,qBAOjE,OAPM6F,EAA4ChS,YACe,CAC/DmO,IAAK6D,EAAc7D,KAAOA,EAC1B6C,qBACA9D,aAAc8E,EAAc9E,aAC5B+E,UAAWxG,GAAiCuG,EAAcC,oBAItD,SAAMhG,GAAqB,sBAAuBP,WAAxD,MAAM1L,cDsEoCkS,CACxCjF,EACA6D,WAEF,OAJMqB,EAA8BtS,YAI7BL,GAAIyN,EAAWkF,kBAElB9G,gBAAgD,MAA5B+G,EAAEhV,WAAWkP,cAG7BkE,GAAOvD,wBAAbpN,sBAGA,SAAML,GAAIyN,EAAW,CACnBkB,IAAK2C,EAAkB3C,IACvB6C,+BAFFnR,0BAKF,MAAMuS,wBAxCsBC,CAC1BpF,EACAwE,GAEF,MAAO,CAAEX,kBAAmBW,EAAiBP,wBAnEpBoB,CACvBrF,EACA6D,GAGF,OADAI,EAAsBD,EAAiBC,oBAChCD,EAAiBH,mCAPpBA,EAAoB9Q,UAUJmO,MAAQR,kBAEMuD,WAAlC,UAASrR,oBAAmBG,oBAG9B,SAAO,CACL8Q,oBACAI,6BAsIJ,SAASC,GACPlE,GAEA,OAAOwD,GAAOxD,EAAW,SAAA4D,GACvB,IAAKA,EACH,MAAMpN,GAAczG,iCAEtB,OAAO+T,GAAqBF,KAIhC,SAASE,GAAqBK,GAC5B,YAWAN,EAXmCM,GAcfJ,oBAClBF,EAAkBY,iBAAmB3G,GAAqB1O,KAAKwF,MAdxD,CACLsM,IAAKiD,EAAMjD,IACX6C,sBAIGI,EAGT,IACEN,WE3LoByB,GACpB1S,EACAiR,OADE7D,cAAWuF,iIA2BI,OAxBXb,EAoCR,SACE1E,EACApN,GAAEsO,QAEF,OAAU5C,GAAyB0B,OAAckB,yBAxChCsE,CAA6BxF,EAAW6D,GAEnD3D,EAAUH,GAAmBC,EAAW6D,IAGxC4B,EAAiBF,EAAuBnO,aAAa,CACzDvE,UAAU,MAGVqN,EAAQC,OAAO,oBAAqBsF,EAAeC,yBAG/C5Y,EAAO,CACX6Y,aAAc,CACZf,WAAY7G,KAIVtD,EAAuB,CAC3B3F,OAAQ,OACRoL,UACApT,KAAMqM,KAAKC,UAAUtM,OAGAsT,GAAmB,WAAM,OAAAyE,MAAMH,EAAUjK,oBAA1DgE,EAAW1L,UACJ+R,MAC4CrG,EAASS,qBAIhE,OAJM6F,EAA2ChS,YACFyL,GAC7CuG,WAII,SAAM/F,GAAqB,sBAAuBP,WAAxD,MAAM1L,uBC9BY6S,GACpBC,EACAC,uBAAAA,iGAGc,SAAMtC,GAAOqC,EAAa7F,UAAW,SAAA4D,GACjD,IAAKmC,GAAkBnC,GACrB,MAAMpN,GAAczG,yBAGtB,IAgIsBiV,EAhIhBgB,EAAepC,EAASoB,UAC9B,GAAKc,QA+HiBd,EA/HgBgB,GAiI5BrH,eAKd,SAA4BqG,GAC1B,IAAMpQ,EAAMxF,KAAKwF,MACjB,OACEA,EAAMoQ,EAAUjG,cAChBiG,EAAUjG,aAAeiG,EAAUpG,UAAYhK,EAAMsJ,GARpD+H,CAAmBjB,GA/Hb,CAAA,OAAIgB,EAAarH,cAGtB,OADAuH,EA0BN,SACEL,EACAC,iGAMY,SAAMK,GAAuBN,EAAa7F,mBAAlDmE,EAAQvR,qCACLuR,EAAMa,UAAUrG,uBAEf2B,GAAM,aAEJ,OAFR1N,YAEcuT,GAAuBN,EAAa7F,0BAAlDmE,EAAQvR,sBAIV,YADMoS,EAAYb,EAAMa,WACVrG,iBAELiH,GAAiBC,EAAcC,OAE/Bd,QA/CUoB,CAA0BP,EAAcC,GAChDlC,EAGP,IAAKS,UAAUC,OACb,MAAM9N,GAAczG,sBAGhByU,GAmIVZ,EAnIgEA,EAqI1DyC,EAA2C,CAC/C1H,gBACA2H,YAAalX,KAAKwF,cAGfgP,IACHoB,UAAWqB,KAzIT,OADAH,EAsEN,SACEL,EACAhC,qGAGoB,gCAAMyB,GACtBO,EACAhC,WAMF,OARMmB,EAAYpS,SAIZ2T,SACD1C,IACHmB,iBAEIzS,GAAIsT,EAAa7F,UAAWuG,WAClC,OADA3T,YACOoS,iBAGL5G,gBAC6B,MAA5B+G,EAAEhV,WAAWkP,YAAkD,MAA5B8F,EAAEhV,WAAWkP,oBAI3CkE,GAAOsC,EAAa7F,0BAA1BpN,sBAMA,OAJM2T,SACD1C,IACHmB,UAAW,CAAErG,sBAETpM,GAAIsT,EAAa7F,UAAWuG,WAAlC3T,0BAEF,MAAMuS,wBApGWqB,CAAyBX,EAAcrB,GAC/CA,EAbP,OAAOZ,mBARLO,EAAQpR,SAyBImT,KACRA,uBAANtT,EAAAG,sBACAH,EAACuR,EAAMa,2BACX,iBA0CF,SAASmB,GACPnG,GAEA,OAAOwD,GAAOxD,EAAW,SAAA4D,GACvB,IAAKmC,GAAkBnC,GACrB,MAAMpN,GAAczG,yBAGtB,IAAMiW,EAAepC,EAASoB,UAC9B,YAmFiCA,EAnFDgB,GAqFtBrH,eACVqG,EAAUsB,YAAcxI,GAAqB1O,KAAKwF,aApF3CgP,IACHoB,UAAW,CAAErG,mBAIViF,IAsCX,SAASmC,GACPlC,GAEA,YACwBvU,IAAtBuU,OACAA,EAAkBE,4BCvJA0C,GACpBZ,EACAC,uBAAAA,uFAEA,SAQF,SACE9F,iGAEgC,SAAM2D,GAAqB3D,kBAAnDiE,EAAwBrR,iCAIxBqR,gBAANrR,yCAfI8T,CAAiCb,EAAa7F,mBAIlC,OAJlBpN,YAIwBgT,GAAiBC,EAAcC,WACvD,SADkBlT,SACD8L,qBCLGiI,GACpB3G,EACA6D,qGAUiB,OARXa,EAcR,SACE1E,EACApN,GAAEsO,QAEF,OAAU5C,GAAyB0B,OAAckB,EAlBhC0F,CAAkB5G,EAAW6D,GAExC3D,EAAUH,GAAmBC,EAAW6D,GACxCpJ,EAAuB,CAC3B3F,OAAQ,SACRoL,cAGqBE,GAAmB,WAAM,OAAAyE,MAAMH,EAAUjK,oBAA1DgE,EAAW7L,UACHkS,YACA9F,GAAqB,sBAAuBP,WAAxD,MAAM7L,wCCbMiU,GACdjU,EACAnD,OADEuQ,cAKF,gBTEAA,EACAvQ,GAIAsS,KAEA,IAAM/Q,EAAMyQ,GAAOzB,IAEf8G,EAAcnF,GAAmBjP,IAAI1B,MAEvC8V,EAAc,IAAIC,IAClBpF,GAAmBpP,IAAIvB,EAAK8V,IAE9BA,EAAYE,IAAIvX,GSlBhBwX,CAAYjH,EAAWvQ,GAEhB,eToBPuQ,EACAvQ,EAEMuB,EAFNvB,ESpB4BA,ETsBtBuB,EAAMyQ,GAHZzB,ESnBiBA,ITwBX8G,EAAcnF,GAAmBjP,IAAI1B,MAM3C8V,EAAY1T,OAAO3D,GACM,IAArBqX,EAAYtE,MACdb,GAAmBvO,OAAOpC,GAI5BiR,OUlBF,SAASiF,GAAqBC,GAC5B,OAAO3Q,GAAczG,mCAA4C,CAC/DoX,eRjBkC3U,GAmChB8H,GAhCX1G,SAAS+E,kBAChB,IAAIrH,EAHoB,gBAKtB,SAAAwC,GACE,IAAMkE,EAAMlE,EAAUI,YAAY,OAAOkD,eAKnCyO,EAAqC,CACzC7F,mBQ5BuBhI,WAC/B,IAAKA,IAAQA,EAAIrF,QACf,MAAMuU,GAAqB,qBAG7B,IAAKlP,EAAIpG,KACP,MAAMsV,GAAqB,gBAU7B,IAAsB,IAAAE,EAAAnZ,EAN2B,CAC/C,YACA,SACA,wCAGgC,CAA7B,IAAMoZ,UACT,IAAKrP,EAAIrF,QAAQ0U,GACf,MAAMH,GAAqBG,qGAI/B,MAAO,CACL3Q,QAASsB,EAAIpG,KACb2M,UAAWvG,EAAIrF,QAAQ4L,UACvBmB,OAAQ1H,EAAIrF,QAAQ+M,OACpBgC,MAAO1J,EAAIrF,QAAQ+O,ORDG4F,CAAiBtP,GAIjCuN,uBAH6BzR,EAAUI,YAAY,oBAerD,MAT+D,CAC7D8D,MACAuP,MAAO,WAAM,gBSlCrB1B,mGAEmD,SAAMlC,GACvDkC,EAAa7F,mBAWf,OAZMpN,EAA6CG,SAA3C8Q,8CASN+B,GAAiBC,IAJGjW,MAAMoF,QAAQzG,UAO7BsV,EAAkB3C,UToBJqG,CAAM1B,IACnBY,SAAU,SAACX,GACT,OAAAW,GAASZ,EAAcC,IACzB1S,OAAQ,WAAM,gBUnCtByS,mGAIc,SAAMrC,GAFZxD,EAAc6F,YAEgB,SAAAjC,GACpC,IAAIA,OAAYA,EAASG,mBAIzB,OAAOH,iBALHO,EAAQvR,UAQV,mBACEuR,EAAMJ,mBAAN,YAEF,MAAMvN,GAAczG,oDACXoU,EAAMJ,mBAAN,eACJM,UAAUC,OAAX,YACF,MAAM9N,GAAczG,6BAEpB,SAAM4W,GAA0B3G,EAAWmE,WAC3C,OADAvR,YACM2Q,GAAOvD,WAAbpN,yCVcgB4U,CAAmB3B,IACjCgB,WAAY,SAACpX,GACX,OAAAoX,GAAWhB,EAAcpW,iBAQnC+C,GAASyF,wDWzCPwP,GACAC,GCVSlO,WAMAmO,GAAuB,wBAUvBC,GAA2B,+BAE3BC,GACX,qCAGWC,EAAe,cCHtB3J,6BAC8B,yCAClCvL,oBAAkC,qCAClCA,kCACE,mDACFA,iCACE,kDACFA,gBAAuB,2BACvBA,gBAAuB,2BACvBA,oBAA2B,+BAC3BA,iBAAwB,4BACxBA,qBAA4B,sCAC5BA,qBACE,4EACFA,yBAAuB,wBACvBA,6BACE,8CACFA,8BACE,gDACFA,iCACE,oDACFA,kCACE,2EAaS4D,GAAgB,IAAIjG,EDjCV,cCmCrBuX,EACA3J,ICxDW4J,GAAgB,IAAIjS,EAAOgS,GACxCC,GAAcpT,SAAWJ,EAASgB,KHsBlC,IIrBIyS,OJmDFC,oBAAA,WAEE,OAAOtc,KAAKuc,eAAeC,KAAKC,MAAM,KAAK,IAG7CH,kBAAA,SAAKrW,GACEjG,KAAK0c,aAAgB1c,KAAK0c,YAAYC,MAG3C3c,KAAK0c,YAAYC,KAAK1W,IAGxBqW,qBAAA,SAAQM,EAAqBC,EAAeC,GACrC9c,KAAK0c,aAAgB1c,KAAK0c,YAAYK,SAG3C/c,KAAK0c,YAAYK,QAAQH,EAAaC,EAAOC,IAG/CR,8BAAA,SAAiBnW,GACf,OAAKnG,KAAK0c,aAAgB1c,KAAK0c,YAAYM,iBAGpChd,KAAK0c,YAAYM,iBAAiB7W,GAFhC,IAKXmW,8BAAA,SAAiBrW,GACf,OAAKjG,KAAK0c,aAAgB1c,KAAK0c,YAAYO,iBAGpCjd,KAAK0c,YAAYO,iBAAiBhX,GAFhC,IAKXqW,2BAAA,WAEE,OACEtc,KAAK0c,cACJ1c,KAAK0c,YAAYQ,YAAcld,KAAK0c,YAAYS,OAAOC,kBAI5Dd,mCAAA,WACE,OACGpD,OACA5Y,SACAN,KAAK0Y,WACL1Y,KAAK0Y,UAAU2E,cKuBb,cAAelI,MAAqB,MAAbmC,YLd1B8E,GAAczS,KAAK,mDACZ,IARPyS,GAAczS,KACZ,2GAEK,IAUX2S,2BAAA,SACEgB,EACAxZ,GAEK9D,KAAKud,qBAGO,IAAIvd,KAAKud,oBAAoB,SAAAC,GAC5C,IAAoB,QAAAvW,EAAAuW,EAAKC,aAAL5Y,WAAAA,IAAmB,CAAlC,IAAM2T,OAET1U,EAAS0U,MAKJkF,QAAQ,CAAEC,WAAY,CAACL,MAG3BhB,eAAP,WAIE,YAHoB3Y,IAAhBmY,KACFA,GAAc,IAAIQ,GAAIP,KAEjBD,QAtGT,YAAqB8B,GACnB,KADmB5d,YAAA4d,GAEjB,MAAM/S,GAAczG,oBAEtBpE,KAAK0c,YAAckB,EAAOlB,YAC1B1c,KAAKud,oBAAsBK,EAAOL,oBAClCvd,KAAKuc,eAAiBqB,EAAOC,SAC7B7d,KAAK0Y,UAAYkF,EAAOlF,UACxB1Y,KAAK8d,SAAWF,EAAOE,SACnB9d,KAAK0Y,WAAa1Y,KAAK0Y,UAAU2E,gBAGnCrd,KAAK+d,aAAeH,EAAOG,cAEzBH,EAAOI,aAAeJ,EAAOI,YAAYC,oBAC3Cje,KAAKie,kBAAoBL,EAAOI,YAAYC,4BMlDlCC,GAAaC,EAAeC,GAC1C,IAAMC,EAAWF,EAAMve,OAASwe,EAAMxe,OACtC,GAAIye,EAAW,GAAgB,EAAXA,EAClB,MAAMxT,GAAczG,sCAItB,IADA,IAAMka,EAAc,GACX7e,EAAI,EAAGA,EAAI0e,EAAMve,OAAQH,IAChC6e,EAAYjc,KAAK8b,EAAMI,OAAO9e,IAC1B2e,EAAMxe,OAASH,GACjB6e,EAAYjc,KAAK+b,EAAMG,OAAO9e,IAIlC,OAAO6e,EAAYvR,KAAK,IFT1B,IGNIyR,GCSQC,OJoCVC,sBAAA,WACE,IAAM3I,EACJ/V,KAAK2e,qBACL3e,KAAK2e,oBAAoB3X,SACzBhH,KAAK2e,oBAAoB3X,QAAQ+O,MACnC,IAAKA,EACH,MAAMlL,GAAczG,oBAEtB,OAAO2R,GAGT2I,0BAAA,WACE,IAAM9L,EACJ5S,KAAK2e,qBACL3e,KAAK2e,oBAAoB3X,SACzBhH,KAAK2e,oBAAoB3X,QAAQ4L,UACnC,IAAKA,EACH,MAAM/H,GAAczG,wBAEtB,OAAOwO,GAGT8L,uBAAA,WACE,IAAM3K,EACJ/T,KAAK2e,qBACL3e,KAAK2e,oBAAoB3X,SACzBhH,KAAK2e,oBAAoB3X,QAAQ+M,OACnC,IAAKA,EACH,MAAMlJ,GAAczG,qBAEtB,OAAO2P,GAGT2K,mCAAA,WACE,OAAO1e,KAAK4e,uBAAuB9b,OAAO,QAAS9C,KAAK6e,eAGnDH,eAAP,WAIE,YAHgC/a,IAA5B0Y,KACFA,GAA0B,IAAIqC,IAEzBrC,QAhFX,cAEErc,6BAAyB,EAGzBA,4BAAwB,EAGxBA,qBAAiB,EAEjBA,wBAAqB,EACrBA,iCAA8B,EAG9BA,oBACE,oEAGFA,4BAAyBke,GACvB,mCACA,mCAGFle,kBAAeke,GAAa,uBAAwB,uBAGpDle,eAAY,IAGZA,4BAAwB,EACxBA,8BAA0B,EAG1BA,sBAAmB,II9BTye,EAAAA,GAAAA,+BAEVA,yBACAA,uBAwBF,IAAMK,GAA8B,CAAC,YAAa,UAAW,OACvDC,GAAyB,IAAIC,OAAO,2BAiB1BC,KAGd,OAFiB3C,GAAI4C,cAAcpB,SACFqB,iBAE/B,IAAK,UACH,OAAOV,GAAgBW,QACzB,IAAK,SACH,OAAOX,GAAgBY,OACzB,QACE,OAAOZ,GAAgBa,SCpD7B,IAAMC,GAA4B,QAa5BC,GAAmC,CACvCC,gBAAgB,GAqBZC,GAAkB,uCAERC,GAAUnB,GACxB,IAyDAA,EAzDM9S,EAeR,WACE,IAAMqS,EAAezB,GAAI4C,cAAcnB,aACvC,IAAKA,EACH,OAEF,IAAM6B,EAAe7B,EAAa8B,QAAQ3D,IAC1C,IAAK0D,IA0IP,SAAqBE,GACnB,OAAO3M,OAAO2M,GAAUrc,KAAKwF,MA3IP8W,CAAYH,GAChC,OAGF,IAAMI,EAAoBjC,EAAa8B,QAAQ5D,IAC/C,IAAK+D,EACH,OAEF,IAEE,OAD6CxS,KAAKyS,MAAMD,GAExD,SACA,QAjCaE,GACf,OAAIxU,GACFyU,GAAczU,GACPpL,QAAQC,YAsDjBie,EAnDuBA,aFrCvB,IAAM4B,EAAmB1B,GAAgBQ,cAAcmB,qBAAqBvF,WAK5E,OAHAsF,EAAiBnf,KAAK,SAACqf,MAGhBF,EEsFAG,GACJtf,KAAK,SAAAoY,GACJ,IACMmH,EAAiB,2DADL9B,GAAgBQ,cAAcuB,iDAC6E/B,GAAgBQ,cAAcwB,YACrJ5R,EAAU,IAAI6R,QAAQH,EAAgB,CAC1CrX,OAAQ,OACRoL,QAAS,CAAEqM,cAAkBlB,OAAmBrG,GAEhDlY,KAAMqM,KAAKC,UAAU,CACnBoT,gBAAiBrC,EACjBsC,sBAAuBzH,EACvB0H,OAAQrC,GAAgBQ,cAAc8B,WACtCC,YAAapT,GACbqT,YAAa3B,OAIjB,OAAOrG,MAAMpK,GAAS7N,KAAK,SAAA6R,GACzB,GAAIA,EAASqG,GACX,OAAOrG,EAASS,OAGlB,MAAM1I,GAAczG,iCAGvBH,MAAM,WACLmY,GAAczS,KAAKwX,MA/EpBlgB,KAAKkf,IACLlf,KA6BL,SAAqByK,GACnB,IAAMqS,EAAezB,GAAI4C,cAAcnB,aACvC,IAAKrS,IAAWqS,EACd,OAGFA,EAAaqD,QAAQnF,GAA0BzO,KAAKC,UAAU/B,IAC9DqS,EAAaqD,QACXlF,GACA5W,OACE7B,KAAKwF,MAC8C,GAAjDyV,GAAgBQ,cAAcmC,iBAAwB,GAAK,OArC7D,eA0CN,IAAMF,GACJ,mDA0CF,SAAShB,GACPzU,GAEA,IAAKA,EACH,OAAOA,EAET,IAAM2Q,EAA0BqC,GAAgBQ,cAC1C7X,EAAUqE,EAAOrE,SAAW,GAqDlC,OAjDEgV,EAAwBoD,oBAHE9b,IAAxB0D,EAAQia,YAIwB,SAAhChc,OAAO+B,EAAQia,aAIwB9B,GAAgBC,eAEvDpY,EAAQka,iBACVlF,EAAwBmF,UAAYrO,OAAO9L,EAAQka,iBAKjDla,EAAQoa,uBACVpF,EAAwBqF,eAAiBra,EAAQoa,sBAM/Cpa,EAAQsa,wBACVtF,EAAwBwC,aAAexX,EAAQsa,4BAKIhe,IAAjD0D,EAAQua,uCACVvF,EAAwBwF,4BAA8B1O,OACpD9L,EAAQua,4CAM+Bje,IAAvC0D,EAAQya,6BACVzF,EAAwB0F,mBAAqB5O,OAC3C9L,EAAQya,6BAOZzF,EAAwB2F,sBAAwBC,GAC9C5F,EAAwB0F,oBAE1B1F,EAAwB6F,wBAA0BD,GAChD5F,EAAwBwF,6BAEnBnW,EAOT,SAASuW,GAAuBE,GAC9B,OAAOC,KAAKC,UAAYF,EC5M1B,IAEIG,GAFAC,cAIYC,KAKd,OAJAD,KAEAD,GAAwBA,IAuB1B,WACE,IAAMxE,EAAWxB,GAAI4C,cAAcpB,SACnC,OAAO,IAAIxd,QAAQ,SAAAC,GACjB,IACQkiB,EADJ3E,GAAoC,aAAxBA,EAAS4E,YACjBD,EAAU,WACc,aAAxB3E,EAAS4E,aACX5E,EAAS6E,oBAAoB,mBAAoBF,GACjDliB,MAGJud,EAAS8E,iBAAiB,mBAAoBH,IAE9CliB,MAzBGsiB,GACJ5hB,KAAK,WAAM,OHvBR6hB,EAAapE,GAAgBQ,cAAcmB,qBAAqBzE,SAE3D3a,KAAK,SAAC8hB,GACfvE,GAAMuE,IAEDD,MALDA,IGwBH7hB,KAAY0e,IACZ1e,KACO+hB,GACAA,IAyBZ,SAASA,KACPT,KCtDF,ICkEI1W,GDlEEoX,GAA2B,IAC3BC,GAA6B,KAE7BC,GAA0B,EAC1BC,GAA8B,IAChCC,GAAiBF,GA+BjBG,GAAsB,GAEtBC,IAA4B,EAiBhC,SAASC,GAAaC,GACpB5O,WAAW,WAeb,IAIQ6O,EAIAC,EArBJ,GAAuB,IAAnBN,GAKJ,OAAKC,GAAM1jB,QAYP8jB,EAASJ,GAAMM,OAAO,EAAGR,IAIzBO,EAAmBD,EAAO1b,IAAI,SAAA6b,GAAO,OACzCC,6BAA8BD,EAAItf,QAClCwf,cAAeze,OAAOue,EAAIG,mBAwB9B,SACElf,EACA4e,GAEA,OAiCF,SAA0B5e,GACxB,IAAMmf,EAAqBvF,GAAgBQ,cAAcgF,wBACzD,OAAOhL,MAAM+K,EAAoB,CAC/B9a,OAAQ,OACRhI,KAAMqM,KAAKC,UAAU3I,KArChBqf,CAAiBrf,GACrB7D,KAAK,SAAAmjB,GAIJ,OAHKA,EAAIjL,IACPiD,GAAczS,KAAK,oCAEdya,EAAI7Q,SAEZtS,KAAK,SAAAmjB,GAEJ,IAAMC,EAAgBlR,OAAOiR,EAAIE,uBAC7BC,EAAgBtB,GACfuB,MAAMH,KACTE,EAAgBnC,KAAKqC,IAAIJ,EAAeE,IAKpCG,EAA2CN,EAAIM,mBAEnDxlB,MAAMylB,QAAQD,IACc,EAA5BA,EAAmB9kB,QACsB,wBAAzC8kB,EAAmB,GAAGE,iBAEtBtB,KAAYI,EAAWJ,IACvBlH,GAAczS,KAAK,mCAGrB0Z,GAAiBF,GAEjBK,GAAae,KA3CjBM,CAXsC,CACpCC,gBAAiBxf,OAAO7B,KAAKwF,OAC7B8b,YAAa,CACXC,YAAa,EACbC,eAAgB,IAElBC,WAAYxG,GAAgBQ,cAAcsC,UAC1CmC,aAImBD,GAAQzf,MAAM,WAGjCqf,KAAYI,EAAWJ,IACvBD,KACAjH,GAAczS,KAAK,eAAe0Z,QAClCG,GAAaP,OArCJO,GAAaP,KAIrBQ,YA2FW0B,GAEdC,GAEA,OAAO,eAAC,aAAAvgB,mBAAAA,IAAAkE,mBAbV,SAAoB8a,GAClB,IAAKA,EAAIG,YAAcH,EAAItf,QACzB,MAAMsG,GAAczG,yBAGtBkf,KAAYA,IAAOO,IAUjBwB,CAAW,CACT9gB,QAFc6gB,eAAcrc,GAG5Bib,UAAWvgB,KAAKwF,SChGtB,SAASqc,GACPC,EACAC,IAGE3Z,GADGA,IACMsZ,GAAiBC,KAErBG,EAAUC,YAGHC,GAASC,GACvB,IAAMC,EAAkBjH,GAAgBQ,eAEnCyG,EAAgBC,wBAA0BF,EAAMG,SAIhDF,EAAgBG,uBAA0BJ,EAAMG,SAIhDvJ,GAAI4C,cAAc6G,0BAKnBL,EAAMG,QAAU5G,OAAyBR,GAAgBW,cF9EtDmD,GEmFLyD,GAAaN,GAKblD,KAA2BvhB,KACzB,WAAM,OAAA+kB,GAAaN,IACnB,WAAM,OAAAM,GAAaN,OAKzB,SAASM,GAAaN,GACpB,IAIMC,GL5GCnH,KK4GDmH,EAAkBjH,GAAgBQ,eAErBO,gBAChBkG,EAAgB3D,uBAKnBnN,WAAW,WAAM,OAAAyQ,GAAQI,MAA4B,GAmCvD,SAASN,GACPG,EACAC,GAEA,WAAIA,EAMN,SAAiCS,GACzBC,EAA6C,CACjDC,IAAKF,EAAeE,IACpBC,YAAaH,EAAeI,YAAc,EAC1CC,mBAAoB,IACpBC,uBAAwBN,EAAeO,qBACvCC,qBAAsBR,EAAeS,YACrCC,8BAA+BV,EAAeW,0BAC9CC,8BAA+BZ,EAAea,2BAE1CC,EAA6B,CACjCC,iBAAkBC,KAClBC,uBAAwBhB,GAE1B,OAAO1Y,KAAKC,UAAUsZ,IAGxB,SAAwBrB,GACtB,IAAMyB,EAA2B,CAC/BlhB,KAAMyf,EAAMzf,KACZmhB,QAAS1B,EAAMG,OACfY,qBAAsBf,EAAMgB,YAC5BW,YAAa3B,EAAM4B,YAGsB,IAAvCvoB,OAAOqP,KAAKsX,EAAM6B,UAAU3nB,SAC9BunB,EAAYI,SAAW7B,EAAM6B,UAEzBC,EAAmB9B,EAAM+B,gBACc,IAAzC1oB,OAAOqP,KAAKoZ,GAAkB5nB,SAChCunB,EAAYO,kBAAoBF,GAG5BT,EAA2B,CAC/BC,iBAAkBC,KAClBU,aAAcR,GAEhB,OAAO3Z,KAAKC,UAAUsZ,KA1CWxB,GA6CnC,SAAS0B,KACP,MAAO,CACLW,cAAelJ,GAAgBQ,cAAc8B,WAC7CH,gBL5MKrC,GK6MLqJ,aAAc,CACZ3G,YAAarT,GACbia,SAAUxL,GAAI4C,cAAc6I,SAC5BC,sBJnLA,kBADEtP,EAAY4D,GAAI4C,cAAcxG,WAE9BA,EAAUuP,cAAcC,iBImL1BC,iBAAkBlJ,KAClBmJ,qCJ5JJ,IACMC,EADY/L,GAAI4C,cAAcxG,UAC+B4P,WAGnE,OADED,GAAuBA,EAAoBE,eAE3C,IAAK,UACH,SACF,IAAK,KACH,SACF,IAAK,KACH,SACF,IAAK,KACH,SACF,QACE,UI8I2BC,IAE7BC,0BAA2B,OJxLvB/P,EKnCR,IAEMgQ,GAAa,CZEqB,MAEW,OAEL,QaY9C,QA0CEC,mBAAA,WACE,OAAI3oB,KAAK4oB,MACP,MAAM/d,GAAczG,uBAAuC,CACzDykB,UAAW7oB,KAAKiG,OAGpBjG,KAAK8oB,IAAInM,KAAK3c,KAAK+oB,gBACnB/oB,KAAK4oB,SAOPD,kBAAA,WACE,OAAI3oB,KAAK4oB,MACP,MAAM/d,GAAczG,uBAAuC,CACzDykB,UAAW7oB,KAAKiG,OAGpBjG,KAAK4oB,QACL5oB,KAAK8oB,IAAInM,KAAK3c,KAAKgpB,eACnBhpB,KAAK8oB,IAAI/L,QACP/c,KAAKipB,aACLjpB,KAAK+oB,eACL/oB,KAAKgpB,eAEPhpB,KAAKkpB,wBACLzD,GAASzlB,OAUX2oB,oBAAA,SACEQ,EACAC,EACApiB,GAKA,GAAImiB,GAAa,EACf,MAAMte,GAAczG,qCAA+C,CACjEykB,UAAW7oB,KAAKiG,OAGpB,GAAImjB,GAAY,EACd,MAAMve,GAAczG,oCAA6C,CAC/DykB,UAAW7oB,KAAKiG,OASpB,GALAjG,KAAKsnB,WAAalF,KAAKiH,MAAiB,IAAXD,GAC7BppB,KAAK0mB,YAActE,KAAKiH,MAAkB,IAAZF,GAC1BniB,GAAWA,EAAQsiB,aACrBtpB,KAAKwnB,sBAAwBxgB,EAAQsiB,aAEnCtiB,GAAWA,EAAQuiB,QACrB,IAAqB,QAAAtiB,EAAAlI,OAAOqP,KAAKpH,EAAQuiB,SAApB1kB,WAAAA,IAA8B,CAA9C,IAAM2kB,OACJhF,MAAMrR,OAAOnM,EAAQuiB,QAAQC,OAChCxpB,KAAKunB,SAASiC,GAAUrW,OAAOiP,KAAKiH,MAAMriB,EAAQuiB,QAAQC,MAIhE/D,GAASzlB,OAUX2oB,6BAAA,SAAgBc,EAAiBC,gBAAAA,UACA/lB,IAA3B3D,KAAKunB,SAASkC,GAChBzpB,KAAK2pB,UAAUF,EAASC,GAExB1pB,KAAK2pB,UAAUF,EAASzpB,KAAKunB,SAASkC,GAAWC,IAUrDf,uBAAA,SAAUc,EAAiBC,GACzB,GDhJ8BzjB,ECgJRwjB,EDhJsBZ,ECgJb7oB,KAAKiG,KD/IlB,IAAhBA,EAAKrG,QAboB,IAaJqG,EAAKrG,UAI3BipB,GACCA,EAAUe,WZhB0B,UYiBR,EAA5BlB,GAAWmB,QAAQ5jB,KACpBA,EAAK2jB,WAnBmB,KC8JvB,MAAM/e,GAAczG,oCAA6C,CAC/D0lB,iBAAkBL,QDpJQxjB,EAAc4iB,ECiJ1C7oB,KAAKunB,SAASkC,ID/HwBM,EC+HeL,GD9HnDM,EAAyB5H,KAAKiH,MAAMU,IACrBA,GACnB3N,GAAczS,KACZ,6DAA6DqgB,OAG1DA,ICqIPrB,uBAAA,SAAUc,GACR,OAAOzpB,KAAKunB,SAASkC,IAAY,GAQnCd,0BAAA,SAAasB,EAAcvpB,GACzB,INrGuCuF,EAUCvF,EM2FlCwpB,INpGY,KADqBjkB,EMqGQgkB,GNpGxCrqB,QAjDuB,GAiDPqG,EAAKrG,WAGAkf,GAA4BqL,KAAK,SAAAC,GAC7D,OAAAnkB,EAAK2jB,WAAWQ,QAEiBnkB,EAAK2G,MAAMmS,KM+FtCsL,EN3FgB,KADkB3pB,EM4FSA,GN3FtCd,QAAgBc,EAAMd,QA1DF,IMsJ/B,GAAIsqB,GAAeG,EACjBrqB,KAAKwnB,iBAAiByC,GAAQvpB,MADhC,CAKA,IAAKwpB,EACH,MAAMrf,GAAczG,gCAAyC,CAC3DkmB,cAAeL,IAGnB,IAAKI,EACH,MAAMxf,GAAczG,iCAA0C,CAC5DmmB,eAAgB7pB,MAStBioB,0BAAA,SAAasB,GACX,OAAOjqB,KAAKwnB,iBAAiByC,IAG/BtB,6BAAA,SAAgBsB,QACsBtmB,IAAhC3D,KAAKwnB,iBAAiByC,WAGnBjqB,KAAKwnB,iBAAiByC,IAG/BtB,2BAAA,WACE,YAAY3oB,KAAKwnB,mBAGXmB,0BAAR,SAAqBQ,GACnBnpB,KAAK0mB,YAAcyC,GAGbR,yBAAR,SAAoBS,GAClBppB,KAAKsnB,WAAa8B,GAOZT,mCAAR,WACE,IAAM6B,EAAqBxqB,KAAK8oB,IAAI7L,iBAAiBjd,KAAKipB,cACpDwB,EAAmBD,GAAsBA,EAAmB,GAC9DC,IACFzqB,KAAKsnB,WAAalF,KAAKiH,MAAkC,IAA5BoB,EAAiBrB,UAC9CppB,KAAK0mB,YAActE,KAAKiH,MACoC,KAAzDoB,EAAiBtB,UAAYnpB,KAAK8oB,IAAI4B,oBAWtC/B,kBAAP,SACEgC,EACAC,EACAC,GAEA,IAIMnF,EAJAoF,EAAQxO,GAAI4C,cAAc6I,SAC3B+C,IAGCpF,EAAQ,IAAIiD,Gb9PoB,Oa8PemC,GAAO,GACtDC,EAAe3I,KAAKiH,MAA0C,IAApC/M,GAAI4C,cAAcwL,iBAClDhF,EAAMsF,aAAaD,GAGfJ,GAAqBA,EAAkB,KACzCjF,EAAMuF,YAAY7I,KAAKiH,MAAsC,IAAhCsB,EAAkB,GAAGvB,WAClD1D,EAAMiE,UACJ,iBACAvH,KAAKiH,MAA4C,IAAtCsB,EAAkB,GAAGO,iBAElCxF,EAAMiE,UACJ,2BACAvH,KAAKiH,MAAsD,IAAhDsB,EAAkB,GAAGQ,2BAElCzF,EAAMiE,UACJ,eACAvH,KAAKiH,MAA0C,IAApCsB,EAAkB,GAAGS,gBAMhCR,KACIS,EAAaT,EAAaU,KAC9B,SAAAC,GAAe,MAJC,gBAIDA,EAAYtlB,SAEXolB,EAAWlC,WAC3BzD,EAAMiE,UbxR0B,Ma0R9BvH,KAAKiH,MAA6B,IAAvBgC,EAAWlC,aAGpBqC,EAAuBZ,EAAaU,KACxC,SAAAC,GAAe,MAZY,2BAYZA,EAAYtlB,SAEDulB,EAAqBrC,WAC/CzD,EAAMiE,Ub/RqC,OaiSzCvH,KAAKiH,MAAuC,IAAjCmC,EAAqBrC,YAIhC0B,GACFnF,EAAMiE,UbpSgC,OasSpCvH,KAAKiH,MAAwB,IAAlBwB,KAKjBpF,GAASC,KAGJiD,yBAAP,SAA6B/L,GAE3B6I,GADc,IAAIkD,GAAM/L,GAAa,EAAOA,SAhR9C,YACW3W,EACA4f,EACT4F,gBADS5F,MADA7lB,UAAAiG,EACAjG,YAAA6lB,EApBH7lB,aAGAA,sBAA8C,GACtDA,cAA8C,GACtCA,SAAMsc,GAAI4C,cACVlf,cAAWoiB,KAAKiH,MAAsB,IAAhBjH,KAAKC,UAiB5BriB,KAAK6lB,SACR7lB,KAAK+oB,eAAoB2C,uBAA2B1rB,KAAK2rB,aAAY3rB,KAAKiG,KAC1EjG,KAAKgpB,cAAmB4C,sBAA0B5rB,KAAK2rB,aAAY3rB,KAAKiG,KACxEjG,KAAKipB,aACHwC,GACGzP,OAAwBhc,KAAK2rB,aAAY3rB,KAAKiG,KAE/CwlB,GAGFzrB,KAAKkpB,kCC/BG2C,GAA0BrT,GACxC,IHsGgCyN,EAa1B6F,EAZAnG,EGvGAoG,EAAmBvT,EACpBuT,QAAuDpoB,IAAnCooB,EAAiBC,gBAGpC9O,EAAaZ,GAAI4C,cAAcwL,gBAC/BhE,EAActE,KAAKiH,MACqB,KAA3C0C,EAAiB5C,UAAYjM,IAE1B0J,EAA4BmF,EAAiBC,cAC/C5J,KAAKiH,MAC6D,KAA/D0C,EAAiBC,cAAgBD,EAAiB5C,iBAErDxlB,EACEmjB,EAA4B1E,KAAKiH,MACyB,KAA7D0C,EAAiBE,YAAcF,EAAiB5C,YAI7ClD,EAAiC,CACrCE,IAFU4F,EAAiB9lB,MAAQ8lB,EAAiB9lB,KAAKwW,MAAM,KAAK,GAGpE+J,qBAAsBuF,EAAiBG,aACvCxF,cACAE,4BACAE,6BH+E8Bb,EG5EdA,GH6EZN,EAAkBjH,GAAgBQ,eAEnB0G,yBAMfuG,EAAoBlG,EAAeE,IAInC2F,EAAiBnG,EAAgBjE,eAAejF,MAAM,KAAK,GAC3D2P,EAAgBzG,EAAgB/G,uBAAuBnC,MAAM,KAAK,GAEtE0P,IAAsBL,GACtBK,IAAsBC,GAMrBzG,EAAgBlG,gBAChBkG,EAAgBzD,yBAKnBrN,WAAW,WAAM,OAAAyQ,GAAQW,MAA8C,KI9JzE,IAAMoG,GAAmB,aAETC,KTQP9N,KSDP3J,WAcF,WACE,IAAMiU,EAAMxM,GAAI4C,cACVyL,EAAoB7B,EAAI9L,iBAC5B,cAEI4N,EAAe9B,EAAI9L,iBAAiB,SAG1C,CAAA,IAGMuP,EAHFzD,EAAI7K,mBAGFsO,EAAiB1X,WAAW,WAC9B8T,GAAM6D,eAAe7B,EAAmBC,GACxC2B,OAAY5oB,GACX0oB,IACHvD,EAAI7K,kBAAkB,SAAC1I,GACjBgX,IACFE,aAAaF,GACb5D,GAAM6D,eAAe7B,EAAmBC,EAAcrV,OAI1DoT,GAAM6D,eAAe7B,EAAmBC,KApCP,GACnC/V,WAIF,WAGE,IAFA,IAAMiU,EAAMxM,GAAI4C,cACVwN,EAAY5D,EAAI9L,iBAAiB,gBAChB2P,IAAA9nB,WAAAA,IAAW,CAChCgnB,SAEF/C,EAAI8D,cAAc,WAAYf,KAVW,GACzChX,WAsCF,WAIE,IAHA,IAAMiU,EAAMxM,GAAI4C,cAEV2N,EAAW/D,EAAI9L,iBAAiB,eAChB8P,IAAAjoB,WAAAA,IAAU,CAC9BkoB,SAGFjE,EAAI8D,cAAc,UAAWG,KA9Ca,IAiD5C,SAASA,GAAsBhQ,GACvBH,EAAcG,EAAQ9W,KAG1B2W,EAAYoQ,UAAU,EAAGhR,GAAqBpc,UAC9Coc,IAIF2M,GAAMoE,sBAAsBnQ,GCjE9B,QAmBEqQ,mBAAA,SAAMhnB,GACJ,OAAO,IAAI0iB,GAAM1iB,IAGnBlH,sBAAIkuB,2CAGJ,WACE,OAAOvO,GAAgBQ,cAAc0G,4BAJvC,SAA2Bvb,GACzBqU,GAAgBQ,cAAc0G,uBAAyBvb,mCAMzDtL,sBAAIkuB,0CAGJ,WACE,OAAOvO,GAAgBQ,cAAc4G,2BAJvC,SAA0Bzb,GACxBqU,GAAgBQ,cAAc4G,sBAAwBzb,uCA9BxD,YAAqBgC,GAAArM,SAAAqM,EACfiQ,GAAI4C,cAAc6G,yBZ0HjB,IAAIzlB,QAAQ,SAACC,EAASC,GAC3B,IACE,IAAI0sB,GAAoB,EAClBC,EACJ,0DACIC,EAAUxP,OAAOtG,UAAU+V,KAAKF,GACtCC,EAAQre,UAAY,WAClBqe,EAAQrsB,OAAO+V,QAEVoW,GACHtP,OAAOtG,UAAUgW,eAAeH,GAElC5sB,GAAQ,IAEV6sB,EAAQ7V,gBAAkB,WACxB2V,GAAW,GAGbE,EAAQpe,QAAU,iBAChBxO,aAAO4sB,EAAQxqB,4BAAO2B,UAAW,KAEnC,MAAO3B,GACPpC,EAAOoC,MY9IJ3B,KAAK,SAAAssB,GACAA,IN+BPhK,KACHC,GAAaN,IACbK,IAAmB,GM/BXf,KAA2BvhB,KACzBqrB,GACAA,OAILroB,MAAM,SAAArB,GACLwZ,GAAczS,KAAK,0CAA0C/G,KCVvE,IAEoCiE,GACZ,SAAhB2mB,GACJnhB,EACAohB,GAEA,GAPuB,cAOnBphB,EAAIpG,KACN,MAAM4E,GAAczG,yBAEtB,GAAsB,oBAAXwZ,OACT,MAAM/S,GAAczG,oBAKtB,OlBmHF2X,GkBtHW6B,OACTc,GAAgBQ,cAAcP,oBAAsBtS,EACpDqS,GAAgBQ,cAAcmB,qBAAuBoN,EAC9C,IAAIR,GAAsB5gB,IAdDxF,GAuChB8H,GArBe1G,SAAS+E,kBACxC,IAAIrH,EACF,cACA,SAAAwC,GAGE,IAAMkE,EAAMlE,EAAUI,YAAY,OAAOkD,eAEnCgiB,EAAgBtlB,EACnBI,YAAY,iBACZkD,eAEH,OAAO+hB,GAAcnhB,EAAKohB,eAMhC5mB,GAASyF,wDC/CXqC,EAASrC,mCAA+B"}