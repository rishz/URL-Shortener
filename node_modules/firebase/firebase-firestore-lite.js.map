{"version":3,"file":"firebase-firestore-lite.js","sources":["../util/src/crypt.ts","../util/src/defaults.ts","../util/src/environment.ts","../util/src/errors.ts","../util/src/obj.ts","../util/src/compat.ts","../logger/src/logger.ts","../firestore/dist/lite/index.browser.esm2017.js","../util/src/emulator.ts","../component/src/component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromCookie","document","match","cookie","e","decoded","console","error","base64Decode","JSON","parse","getDefaults","process","env","defaultsJsonString","getDefaultsFromEnvVariable","info","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","FirebaseError","constructor","code","message","customData","super","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","value","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","d","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","y","n","map","v","g","stringify","E","I","A","R","P","V","$","D","F","x","S","q","O","C","L","U","toString","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","r","o","h","l","getAuthHeaderValueForFirstParty","K","Y","H","appCheck","J","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","static","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","indexOf","split","filter","et","nt","test","isValidIdentifier","isKeyField","rt","path","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","st","it","isDocumentKey","ot","ut","ct","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","T","async","body","status","statusText","ok","json","yt","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","gt","_t","vt","every","bt","hasOwnProperty","call","Et","It","binaryString","Symbol","iterator","next","done","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","Tt","RegExp","At","exec","substr","Number","seconds","getTime","nanos","Rt","Pt","fromBase64String","fromUint8Array","Vt","nanoseconds","fromMillis","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","$t","mapValue","fields","__type__","stringValue","Nt","__previous_value__","Dt","__local_write_time__","timestampValue","Ft","xt","St","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","qt","find","Ot","kt","sort","Ct","Lt","Mt","Ut","jt","Bt","assign","Qt","position","inclusive","zt","Wt","Gt","field","op","createKeyFieldInFilter","Ht","te","ee","ne","re","Jt","Xt","matches","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","Kt","filters","reduce","concat","Yt","fromName","Zt","some","nullValue","se","dir","ie","oe","timestamp","toMicroseconds","toTimestamp","ue","root","ae","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","ce","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","he","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","le","add","delete","unionWith","iter","fe","covers","de","getFieldsMap","setAll","applyChanges","clone","we","documentType","version","readTime","createTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","me","orderBy","startAt","endAt","pe","ye","explicitOrderBy","limitType","ge","_e","ve","be","keyField","Ee","Ie","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","De","transform","Fe","updateTime","exists","isNone","xe","Se","precondition","fieldTransforms","getFieldMask","qe","fieldMask","Oe","ke","Ce","asc","desc","Le","in","Me","and","or","Ue","je","Be","Qe","ze","fromTimestamp","We","Ge","Ke","cn","Ye","He","Je","tn","structuredQuery","parent","from","collectionId","allDescendants","on","where","sn","direction","en","before","nn","rn","fieldPath","unaryFilter","fieldFilter","compositeFilter","un","fieldPaths","an","hn","M","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","ln","authCredentials","appCheckCredentials","connection","all","catch","terminate","fn","writes","update","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","Ze","dn","documents","found","newFoundDocument","missing","newNoDocument","Xe","pn","yn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","vn","_getProvider","isInitialized","initialize","instanceIdentifier","bn","getImmediate","identifier","En","mockUserToken","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","In","Tn","An","_data","query","Rn","datastore","userDataWriter","run","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","mn","_query","entries","convertValue","Pn","converter","_key","firestore","_path","id","$n","withConverter","Vn","Nn","Dn","Fn","arguments","N","xn","Sn","Te","qn","_byteString","On","_internalPath","kn","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","toMutation","jn","Bn","Qn","hr","methodName","contains","zn","Wn","Gn","merge","mergeFields","sr","ur","lr","Kn","_toFieldTransform","Yn","Hn","Jn","rr","Xn","Zn","tr","ar","er","f","nr","ir","fromDate","getPrototypeOf","cr","search","fr","_firestore","_userDataWriter","_document","_converter","ref","dr","fromFirestore","pr","wr","_docs","docs","mr","yr","gr","_r","Er","vr","_apply","_field","_op","_value","_parse","Lr","Cr","kr","br","_create","_queryConstraints","_getOperator","_getQueryConstraints","Ir","Ur","Tr","Ar","_direction","Mr","Rr","Pr","_limit","_limitType","Vr","$r","Nr","_docOrFields","_inclusive","Or","Dr","Fr","xr","Sr","qr","jr","toFirestore","Br","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Qr","zr","wn","reverse","Wr","none","Gr","Kr","Yr","Hr","Jr","Xr","Zr","ts","es","ns","rs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ss","commit","is","os","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","us","maxAttempts","cs","asyncQueue","updateFunction","deferred","enqueueAndForget","as","hs","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","ls","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","createAndSchedule","verifyOperationInProgress","splice","fs","_transaction","lookup","ds","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","getProvider","apply"],"mappings":"mJAiBA,MAAMA,EAAoB,SAAUC,GAElC,MAAMC,EAAgB,GACtB,IAAIC,EAAI,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACnC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACNJ,EAAIC,KAAOG,EACFA,EAAI,MACbJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEL,QAAZ,MAAJA,IACDF,EAAI,EAAIH,EAAII,QACyB,QAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAGpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAEtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,KAG1B,OAAOJ,GA6DIM,EAAiB,CAI5BC,eAAgB,KAKhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBACE,iEAKEC,mBACF,OAAOC,KAAKF,kBAAoB,OAM9BG,2BACF,OAAOD,KAAKF,kBAAoB,OAUlCI,mBAAoC,mBAATC,KAW3BC,gBAAgBC,EAA8BC,GAC5C,IAAKC,MAAMC,QAAQH,GACjB,MAAMI,MAAM,iDAGdT,KAAKU,QAEL,MAAMC,EAAgBL,EAClBN,KAAKJ,sBACLI,KAAKN,eAEHkB,EAAS,GAEf,IAAK,IAAIvB,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,GAAK,EAAG,CACxC,MAAMwB,EAAQR,EAAMhB,GACdyB,EAAYzB,EAAI,EAAIgB,EAAMf,OAC1ByB,EAAQD,EAAYT,EAAMhB,EAAI,GAAK,EACnC2B,EAAY3B,EAAI,EAAIgB,EAAMf,OAC1B2B,EAAQD,EAAYX,EAAMhB,EAAI,GAAK,EAEnC6B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EACnD,IAAIK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EAEVD,IACHK,EAAW,GAENP,IACHM,EAAW,KAIfR,EAAOU,KACLX,EAAcO,GACdP,EAAcQ,GACdR,EAAcS,GACdT,EAAcU,IAIlB,OAAOT,EAAOW,KAAK,KAWrBC,aAAanB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBmB,KAAKpB,GAEPL,KAAKI,gBAAgBnB,EAAkBoB,GAAQC,IAWxDoB,aAAarB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBH,KAAKE,GA3LQ,SAAUsB,GAElC,MAAMxC,EAAgB,GACtB,IAAIyC,EAAM,EACRrC,EAAI,EACN,KAAOqC,EAAMD,EAAMrC,QAAQ,CACzB,MAAMuC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACP1C,EAAII,KAAOuC,OAAOC,aAAaF,QAC1B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC/B,MAAMG,EAAKL,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,QAC9C,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE/B,MAGMI,IACI,EAALJ,IAAW,IAAa,GAJlBF,EAAMC,OAImB,IAAa,GAHtCD,EAAMC,OAGuC,EAAW,GAFxDD,EAAMC,MAGf,MACFzC,EAAII,KAAOuC,OAAOC,aAAa,OAAUE,GAAK,KAC9C9C,EAAII,KAAOuC,OAAOC,aAAa,OAAc,KAAJE,QACpC,CACL,MAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cACT,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,IAI9C,OAAO/C,EAAIoC,KAAK,IA+JPY,CAAkBnC,KAAKoC,wBAAwB/B,EAAOC,KAkB/D8B,wBAAwB/B,EAAeC,GACrCN,KAAKU,QAEL,MAAM2B,EAAgB/B,EAClBN,KAAKH,sBACLG,KAAKL,eAEHiB,EAAmB,GAEzB,IAAK,IAAIvB,EAAI,EAAGA,EAAIgB,EAAMf,QAAU,CAClC,MAAMuB,EAAQwB,EAAchC,EAAMiC,OAAOjD,MAGnC0B,EADY1B,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,IACzDA,EAEF,MACM4B,EADY5B,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,KACzDA,EAEF,MACMkD,EADYlD,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,GAG3D,KAFEA,EAEW,MAATwB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACrD,MAAM9B,QAGR,MAAMS,EAAYL,GAAS,EAAME,GAAS,EAG1C,GAFAH,EAAOU,KAAKJ,GAEE,KAAVD,EAAc,CAChB,MAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAGnD,GAFAL,EAAOU,KAAKH,GAEE,KAAVoB,EAAc,CAChB,MAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,KAKlB,OAAOR,GAQTF,QACE,IAAKV,KAAKN,eAAgB,CACxBM,KAAKN,eAAiB,GACtBM,KAAKL,eAAiB,GACtBK,KAAKJ,sBAAwB,GAC7BI,KAAKH,sBAAwB,GAG7B,IAAK,IAAIR,EAAI,EAAGA,EAAIW,KAAKD,aAAaT,OAAQD,IAC5CW,KAAKN,eAAeL,GAAKW,KAAKD,aAAauC,OAAOjD,GAClDW,KAAKL,eAAeK,KAAKN,eAAeL,IAAMA,EAC9CW,KAAKJ,sBAAsBP,GAAKW,KAAKC,qBAAqBqC,OAAOjD,GACjEW,KAAKH,sBAAsBG,KAAKJ,sBAAsBP,IAAMA,EAGxDA,GAAKW,KAAKF,kBAAkBR,SAC9BU,KAAKL,eAAeK,KAAKC,qBAAqBqC,OAAOjD,IAAMA,EAC3DW,KAAKH,sBAAsBG,KAAKD,aAAauC,OAAOjD,IAAMA,MAmBvDmD,EAAgC,SAAUtD,GAErD,OAX0B,SAAUA,GACpC,MAAMuD,EAAYxD,EAAkBC,GACpC,OAAOO,EAAOW,gBAAgBqC,GAAW,GASlCC,CAAaxD,GAAKyD,QAAQ,MAAO,KC3S1C,MAAMC,EAAwB,ICsJd,WACd,GAAoB,oBAATC,KACT,OAAOA,KAET,GAAsB,oBAAXC,OACT,OAAOA,OAET,GAAsB,oBAAXC,OACT,OAAOA,OAET,MAAM,IAAItC,MAAM,mCD/JhBuC,GAAYC,sBAiBRC,EAAwB,KAC5B,GAAwB,oBAAbC,SACT,OAEF,IAAIC,EACJ,IACEA,EAAQD,SAASE,OAAOD,MAAM,iCAC9B,MAAOE,GAGP,OAEF,MAAMC,EAAUH,GDyRU,SAAUlE,GACpC,IACE,OAAOO,EAAOiC,aAAaxC,GAAK,GAChC,MAAOoE,GACPE,QAAQC,MAAM,wBAAyBH,GAEzC,OAAO,KC/RkBI,CAAaN,EAAM,IAC5C,OAAOG,GAAWI,KAAKC,MAAML,IASzBM,EAAc,KAClB,IACE,OACEjB,KAnC6B,MACjC,GAAuB,oBAAZkB,cAAkD,IAAhBA,QAAQC,IACnD,OAEF,MAAMC,EAAqBF,QAAQC,IAAId,sBACvC,OAAIe,EACKL,KAAKC,MAAMI,QADpB,GA+BIC,IACAf,IAEF,MAAOI,GAQP,YADAE,QAAQU,KAAK,+CAA+CZ,OAqBnDa,EACXC,IAEA,MAAMC,EAb8B,CACpCD,IACuB,IAAAE,EAAAC,EAAA,OAA4B,QAA5BA,EAAe,QAAfD,EAAAT,WAAe,IAAAS,OAAA,EAAAA,EAAAE,qBAAa,IAAAD,OAAA,EAAAA,EAAGH,IAWzCK,CAAuBL,GACpC,IAAKC,EACH,OAEF,MAAMK,EAAiBL,EAAKM,YAAY,KACxC,GAAID,GAAkB,GAAKA,EAAiB,IAAML,EAAK/E,OACrD,MAAM,IAAImB,MAAM,gBAAgB4D,yCAGlC,MAAMO,EAAOC,SAASR,EAAKS,UAAUJ,EAAiB,GAAI,IAC1D,MAAgB,MAAZL,EAAK,GAEA,CAACA,EAAKS,UAAU,EAAGJ,EAAiB,GAAIE,GAExC,CAACP,EAAKS,UAAU,EAAGJ,GAAiBE,IErEzC,MAAOG,UAAsBtE,MAIjCuE,YAEWC,EACTC,EAEOC,GAEPC,MAAMF,GALGlF,KAAIiF,KAAJA,EAGFjF,KAAUmF,WAAVA,EAPAnF,KAAIqF,KAdI,gBA2BfC,OAAOC,eAAevF,KAAM+E,EAAcS,WAItC/E,MAAMgF,mBACRhF,MAAMgF,kBAAkBzF,KAAM0F,EAAaF,UAAUG,SAK9C,MAAAD,EAIXV,YACmBY,EACAC,EACAC,GAFA9F,KAAO4F,QAAPA,EACA5F,KAAW6F,YAAXA,EACA7F,KAAM8F,OAANA,EAGnBH,OACEV,KACGc,GAEH,MAAMZ,EAAcY,EAAK,IAAoB,GACvCC,EAAW,GAAGhG,KAAK4F,WAAWX,IAC9BgB,EAAWjG,KAAK8F,OAAOb,GAEvBC,EAAUe,EAUpB,SAAyBA,EAAkBF,GACzC,OAAOE,EAAStD,QAAQuD,GAAS,CAACC,EAAGC,KACnC,MAAMC,EAAQN,EAAKK,GACnB,OAAgB,MAATC,EAAgBvE,OAAOuE,GAAS,IAAID,SAbhBE,CAAgBL,EAAUd,GAAc,QAE7DoB,EAAc,GAAGvG,KAAK6F,gBAAgBX,MAAYc,MAIxD,OAFc,IAAIjB,EAAciB,EAAUO,EAAapB,IAa3D,MAAMe,EAAU,gBC3EA,SAAAM,EAAUC,EAAWC,GACnC,GAAID,IAAMC,EACR,OAAO,EAGT,MAAMC,EAAQrB,OAAOsB,KAAKH,GACpBI,EAAQvB,OAAOsB,KAAKF,GAC1B,IAAK,MAAMI,KAAKH,EAAO,CACrB,IAAKE,EAAME,SAASD,GAClB,OAAO,EAGT,MAAME,EAASP,EAA8BK,GACvCG,EAASP,EAA8BI,GAC7C,GAAII,EAASF,IAAUE,EAASD,IAC9B,IAAKT,EAAUQ,EAAOC,GACpB,OAAO,OAEJ,GAAID,IAAUC,EACnB,OAAO,EAIX,IAAK,MAAMH,KAAKD,EACd,IAAKF,EAAMI,SAASD,GAClB,OAAO,EAGX,OAAO,EAGT,SAASI,EAASC,GAChB,OAAiB,OAAVA,GAAmC,iBAAVA,ECrE5B,SAAUC,EACdxB,GAEA,OAAIA,GAAYA,EAA+ByB,UACrCzB,EAA+ByB,UAEhCzB,MC2BC0B,GAAZ,SAAYA,GACVA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SANF,CAAYA,IAAAA,EAOX,KAED,MAAMC,EAA2D,CAC/DC,MAASF,EAASG,MAClBC,QAAWJ,EAASK,QACpBzD,KAAQoD,EAASM,KACjBC,KAAQP,EAASQ,KACjBrE,MAAS6D,EAASS,MAClBC,OAAUV,EAASW,QAMfC,EAA4BZ,EAASM,KAmBrCO,EAAgB,CACpB,CAACb,EAASG,OAAQ,MAClB,CAACH,EAASK,SAAU,MACpB,CAACL,EAASM,MAAO,OACjB,CAACN,EAASQ,MAAO,OACjB,CAACR,EAASS,OAAQ,SAQdK,EAAgC,CAACC,EAAUC,KAAYC,KAC3D,GAAID,EAAUD,EAASG,SACrB,OAEF,MAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAAST,EAAcG,GAC7B,IAAIM,EAMF,MAAM,IAAInI,MACR,8DAA8D6H,MANhE9E,QAAQoF,GACN,IAAIH,OAASJ,EAAShD,WACnBkD,ICxFT,MAAMM,EACF7D,YAAY8D,GACR9I,KAAK+I,IAAMD,EAEfE,kBACI,OAAO,MAAQhJ,KAAK+I,IAKjBE,QACH,OAAOjJ,KAAKgJ,kBAAoB,OAAShJ,KAAK+I,IAAM,iBAExDG,QAAQJ,GACJ,OAAOA,EAAEC,MAAQ/I,KAAK+I,KAICF,EAAEM,gBAAkB,IAAIN,EAAE,MAGzDA,EAAEO,mBAAqB,IAAIP,EAAE,0BAA2BA,EAAEQ,YAAc,IAAIR,EAAE,mBAC9EA,EAAES,UAAY,IAAIT,EAAE,aAkBpB,IAAIU,EAAI,SAkBR,MAAMC,EAAI,IDuCG,MAOXxE,YAAmBK,GAAArF,KAAIqF,KAAJA,EAUXrF,KAASyJ,UAAGvB,EAsBZlI,KAAW0J,YAAetB,EAc1BpI,KAAe2J,gBAAsB,KAlCzCnB,eACF,OAAOxI,KAAKyJ,UAGVjB,aAASoB,GACX,KAAMA,KAAOtC,GACX,MAAM,IAAIuC,UAAU,kBAAkBD,+BAExC5J,KAAKyJ,UAAYG,EAInBE,YAAYF,GACV5J,KAAKyJ,UAA2B,iBAARG,EAAmBrC,EAAkBqC,GAAOA,EAQlEG,iBACF,OAAO/J,KAAK0J,YAEVK,eAAWH,GACb,GAAmB,mBAARA,EACT,MAAM,IAAIC,UAAU,qDAEtB7J,KAAK0J,YAAcE,EAOjBI,qBACF,OAAOhK,KAAK2J,gBAEVK,mBAAeJ,GACjB5J,KAAK2J,gBAAkBC,EAOzBpC,SAASe,GACPvI,KAAK2J,iBAAmB3J,KAAK2J,gBAAgB3J,KAAMsH,EAASG,SAAUc,GACtEvI,KAAK0J,YAAY1J,KAAMsH,EAASG,SAAUc,GAE5C0B,OAAO1B,GACLvI,KAAK2J,iBACH3J,KAAK2J,gBAAgB3J,KAAMsH,EAASK,WAAYY,GAClDvI,KAAK0J,YAAY1J,KAAMsH,EAASK,WAAYY,GAE9CrE,QAAQqE,GACNvI,KAAK2J,iBAAmB3J,KAAK2J,gBAAgB3J,KAAMsH,EAASM,QAASW,GACrEvI,KAAK0J,YAAY1J,KAAMsH,EAASM,QAASW,GAE3CV,QAAQU,GACNvI,KAAK2J,iBAAmB3J,KAAK2J,gBAAgB3J,KAAMsH,EAASQ,QAASS,GACrEvI,KAAK0J,YAAY1J,KAAMsH,EAASQ,QAASS,GAE3C9E,SAAS8E,GACPvI,KAAK2J,iBAAmB3J,KAAK2J,gBAAgB3J,KAAMsH,EAASS,SAAUQ,GACtEvI,KAAK0J,YAAY1J,KAAMsH,EAASS,SAAUQ,KC3H9B,uBAcZ,SAASnJ,EAAE0J,GACXU,EAAEM,YAAYhB,GAGlB,SAASoB,EAAEpB,KAAMxF,GACb,GAAIkG,EAAEhB,UAAYvG,EAAEwF,MAAO,CACvB,MAAM0C,EAAI7G,EAAE8G,IAAIC,GAChBb,EAAEhC,MAAM,cAAc+B,OAAOT,OAAQqB,IAI7C,SAASG,EAAExB,KAAMxF,GACb,GAAIkG,EAAEhB,UAAYvG,EAAE8F,MAAO,CACvB,MAAMoC,EAAI7G,EAAE8G,IAAIC,GAChBb,EAAE/F,MAAM,cAAc8F,OAAOT,OAAQqB,IAMzC,SAAShE,EAAE2C,KAAMxF,GACjB,GAAIkG,EAAEhB,UAAYvG,EAAE6F,KAAM,CACtB,MAAMqC,EAAI7G,EAAE8G,IAAIC,GAChBb,EAAE3B,KAAK,cAAc0B,OAAOT,OAAQqB,IAMxC,SAASE,EAAEvB,GACX,GAAI,iBAAmBA,EAAG,OAAOA,EACjC,IACI,OAAOxF,EAAIwF,EAAGnF,KAAK4G,UAAUjH,GAC/B,MAAOA,GAEL,OAAOwF,EAmBX,IAAIxF,EA0BJ,SAASoD,EAAEoC,EAAI,oBAGf,MAAMxF,EAAI,cAAciG,iCAAmCT,EAI3D,MAAMwB,EAAEhH,GAAI,IAAI7C,MAAM6C,GAQtB,SAASkH,EAAE1B,EAAGxF,GACdwF,GAAKpC,IAML,SAAS+D,EAAE3B,EAEfxF,GACI,OAAOwF,EAkBP,MAAgB4B,EAAI,YAAaC,EAAI,UAAWC,EAAI,mBAAoBC,EAAI,oBAAqBC,EAAI,YAAmCC,EAAI,oBAAqBC,EAAI,kBAAmBC,EAAI,qBAAsBC,EAAI,sBAAuBC,EAAI,UAAWC,EAAI,eAAgBtE,EAAI,gBAAiBuE,EAAI,WAAYC,EAAI,cAE1Q,MAAMC,UAAUhM,EAE/DyF,YAIA8D,EAIAxF,GACI8B,MAAM0D,EAAGxF,GAAItD,KAAKiF,KAAO6D,EAAG9I,KAAKkF,QAAU5B,EAI3CtD,KAAKwL,SAAW,IAAM,GAAGxL,KAAKqF,eAAerF,KAAKiF,UAAUjF,KAAKkF,WAmBrE,MAAMuG,EACNzG,cACIhF,KAAK0L,QAAU,IAAIC,SAAO,CAAG7C,EAAGxF,KAC5BtD,KAAK4L,QAAU9C,EAAG9I,KAAK6L,OAASvI,MAoBxC,MAAMwI,EACN9G,YAAY8D,EAAGxF,GACXtD,KAAK+L,KAAOzI,EAAGtD,KAAKgM,KAAO,QAAShM,KAAKiM,QAAU,IAAIC,IAAKlM,KAAKiM,QAAQE,IAAI,gBAAiB,UAAUrD,MAO5G,MAAMsD,EACNC,WACI,OAAOV,QAAQC,QAAQ,MAE3BU,mBACAC,MAAMzD,EAAGxF,GAELwF,EAAE0D,kBAAgB,IAAQlJ,EAAEuF,EAAEM,mBAElCsD,aAMA,MAAMC,EACN1H,YAAY8D,GACR9I,KAAK2M,MAAQ7D,EAMb9I,KAAK4M,eAAiB,KAE1BP,WACI,OAAOV,QAAQC,QAAQ5L,KAAK2M,OAEhCL,mBACAC,MAAMzD,EAAGxF,GACLtD,KAAK4M,eAAiBtJ,EAEtBwF,EAAE0D,kBAAgB,IAAQlJ,EAAEtD,KAAK2M,MAAMZ,QAE3CU,WACIzM,KAAK4M,eAAiB,MAIe,MAAMC,GAC/C7H,YAAY8D,GACR9I,KAAK8M,KAAO,KAAMhE,EAAEiE,QAAQjE,IACxB9I,KAAK8M,KAAOhE,KAGpBuD,WACI,OAAOrM,KAAK8M,KAAO9M,KAAK8M,KAAKT,WAAWW,MAAMlE,GAAKA,GAAK0B,EAAE,iBAAmB1B,EAAEmE,aAC/E,IAAInB,EAAEhD,EAAEmE,YAAa,IAAIpE,EAAE7I,KAAK8M,KAAKI,YAAc,OAASvB,QAAQC,QAAQ,MAEhFU,mBACAC,MAAMzD,EAAGxF,IACTmJ,aASA,MAAMU,GACNnI,YAAY8D,EAAGxF,EAAG6G,EAAGiD,GACjBpN,KAAK8I,EAAIA,EAAG9I,KAAKX,EAAIiE,EAAGtD,KAAKqN,EAAIlD,EAAGnK,KAAKiC,EAAImL,EAAGpN,KAAKgM,KAAO,aAAchM,KAAK+L,KAAOlD,EAAEQ,YACxFrJ,KAAKsN,EAAI,IAAIpB,IAE8FqB,IAC3G,OAAOvN,KAAKiC,EAAIjC,KAAKiC,KAErBuI,IAAI,iBAAmBxK,KAAK8I,GAAK,OAAS9I,KAAK8I,IAAM9I,KAAK8I,EAAEgE,OAAS9M,KAAK8I,EAAEgE,KAAKU,kCACjFxN,KAAK8I,EAAEgE,KAAKU,gCAAgC,KAE5CvB,cACAjM,KAAKsN,EAAEnB,IAAI,kBAAmBnM,KAAKX,GAEnC,MAAMyJ,EAAI9I,KAAKuN,IACf,OAAOzE,GAAK9I,KAAKsN,EAAEnB,IAAI,gBAAiBrD,GAAI9I,KAAKqN,GAAKrN,KAAKsN,EAAEnB,IAAI,iCAAkCnM,KAAKqN,GACxGrN,KAAKsN,GAQT,MAAMG,GACNzI,YAAY8D,EAAGxF,EAAG6G,EAAGiD,GACjBpN,KAAK8I,EAAIA,EAAG9I,KAAKX,EAAIiE,EAAGtD,KAAKqN,EAAIlD,EAAGnK,KAAKiC,EAAImL,EAEjDf,WACI,OAAOV,QAAQC,QAAQ,IAAIuB,GAAEnN,KAAK8I,EAAG9I,KAAKX,EAAGW,KAAKqN,EAAGrN,KAAKiC,IAE9DsK,MAAMzD,EAAGxF,GAELwF,EAAE0D,kBAAgB,IAAQlJ,EAAEuF,EAAEQ,eAElCoD,YACAH,oBAGJ,MAAMoB,GACF1I,YAAY8D,GACR9I,KAAKqG,MAAQyC,EAAG9I,KAAKgM,KAAO,WAAYhM,KAAKiM,QAAU,IAAIC,IAAKpD,GAAKA,EAAExJ,OAAS,GAAKU,KAAKiM,QAAQE,IAAI,sBAAuBnM,KAAKqG,QAIzF,MAAMsH,GACnD3I,YAAY8D,GACR9I,KAAKwJ,EAAIV,EAAG9I,KAAK4N,SAAW,KAAM9E,EAAEiE,QAAQjE,IACxC9I,KAAK4N,SAAW9E,KAGxBuD,WACI,OAAOrM,KAAK4N,SAAW5N,KAAK4N,SAASvB,WAAWW,MAAMlE,GAAKA,GAAK0B,EAAE,iBAAmB1B,EAAE6D,OACvF,IAAIe,GAAE5E,EAAE6D,QAAU,OAAShB,QAAQC,QAAQ,MAE/CU,mBACAC,MAAMzD,EAAGxF,IACTmJ,aAuBJ,MAAMoB,GAkBF7I,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,EAAGgO,EAAGpL,GAC7BjC,KAAK+N,WAAajF,EAAG9I,KAAKgO,MAAQ1K,EAAGtD,KAAKiO,eAAiB9D,EAAGnK,KAAKqE,KAAO+I,EAAGpN,KAAKkO,IAAMJ,EACxF9N,KAAKmO,iBAAmB9O,EAAGW,KAAKoO,sBAAwBf,EAAGrN,KAAKqO,gBAAkBpM,GAS1F,MAAMqM,GACFtJ,YAAY8D,EAAGxF,GACXtD,KAAKuO,UAAYzF,EAAG9I,KAAKwO,SAAWlL,GAAK,YAE7CmL,eACI,OAAO,IAAIH,GAAE,GAAI,IAEjBI,wBACA,MAAO,cAAgB1O,KAAKwO,SAEhCtF,QAAQJ,GACJ,OAAOA,aAAawF,IAAKxF,EAAEyF,YAAcvO,KAAKuO,WAAazF,EAAE0F,WAAaxO,KAAKwO,UAOvF,MAAMG,GACF3J,YAAY8D,EAAGxF,EAAG6G,QACd,IAAW7G,EAAIA,EAAI,EAAIA,EAAIwF,EAAExJ,QAAUoH,SAAK,IAAWyD,EAAIA,EAAIrB,EAAExJ,OAASgE,EAAI6G,EAAIrB,EAAExJ,OAASgE,GAAKoD,IAClG1G,KAAK4O,SAAW9F,EAAG9I,KAAK6O,OAASvL,EAAGtD,KAAK8O,IAAM3E,EAE/C7K,aACA,OAAOU,KAAK8O,IAEhB5F,QAAQJ,GACJ,OAAO,IAAM6F,GAAEI,WAAW/O,KAAM8I,GAEpCkG,MAAMlG,GACF,MAAMxF,EAAItD,KAAK4O,SAASK,MAAMjP,KAAK6O,OAAQ7O,KAAKkP,SAChD,OAAOpG,aAAa6F,GAAI7F,EAAEqG,SAASrG,IAC/BxF,EAAEhC,KAAKwH,MACLxF,EAAEhC,KAAKwH,GAAI9I,KAAKoP,UAAU9L,GAE0B4L,QAC1D,OAAOlP,KAAK6O,OAAS7O,KAAKV,OAE9B+P,SAASvG,GACL,OAAOA,OAAI,IAAWA,EAAI,EAAIA,EAAG9I,KAAKoP,UAAUpP,KAAK4O,SAAU5O,KAAK6O,OAAS/F,EAAG9I,KAAKV,OAASwJ,GAElGwG,UACI,OAAOtP,KAAKoP,UAAUpP,KAAK4O,SAAU5O,KAAK6O,OAAQ7O,KAAKV,OAAS,GAEpEiQ,eACI,OAAOvP,KAAK4O,SAAS5O,KAAK6O,QAE9BW,cACI,OAAOxP,KAAKyP,IAAIzP,KAAKV,OAAS,GAElCmQ,IAAI3G,GACA,OAAO9I,KAAK4O,SAAS5O,KAAK6O,OAAS/F,GAEvC4G,UACI,OAAO,IAAM1P,KAAKV,OAEtBqQ,WAAW7G,GACP,GAAIA,EAAExJ,OAASU,KAAKV,OAAQ,OAAO,EACnC,IAAK,IAAIgE,EAAI,EAAGA,EAAItD,KAAKV,OAAQgE,IAAK,GAAItD,KAAKyP,IAAInM,KAAOwF,EAAE2G,IAAInM,GAAI,OAAO,EAC3E,OAAO,EAEXsM,oBAAoB9G,GAChB,GAAI9I,KAAKV,OAAS,IAAMwJ,EAAExJ,OAAQ,OAAO,EACzC,IAAK,IAAIgE,EAAI,EAAGA,EAAItD,KAAKV,OAAQgE,IAAK,GAAItD,KAAKyP,IAAInM,KAAOwF,EAAE2G,IAAInM,GAAI,OAAO,EAC3E,OAAO,EAEX6L,QAAQrG,GACJ,IAAK,IAAIxF,EAAItD,KAAK6O,OAAQ1E,EAAInK,KAAKkP,QAAS5L,EAAI6G,EAAG7G,IAAKwF,EAAE9I,KAAK4O,SAAStL,IAE5EuM,UACI,OAAO7P,KAAK4O,SAASK,MAAMjP,KAAK6O,OAAQ7O,KAAKkP,SAEjDT,kBAAkB3F,EAAGxF,GACjB,MAAM6G,EAAI2F,KAAKC,IAAIjH,EAAExJ,OAAQgE,EAAEhE,QAC/B,IAAK,IAAI8N,EAAI,EAAGA,EAAIjD,EAAGiD,IAAK,CACxB,MAAMjD,EAAIrB,EAAE2G,IAAIrC,GAAIU,EAAIxK,EAAEmM,IAAIrC,GAC9B,GAAIjD,EAAI2D,EAAG,OAAQ,EACnB,GAAI3D,EAAI2D,EAAG,OAAO,EAEtB,OAAOhF,EAAExJ,OAASgE,EAAEhE,QAAU,EAAIwJ,EAAExJ,OAASgE,EAAEhE,OAAS,EAAI,GAShE,MAAM0Q,WAAWrB,GACjBS,UAAUtG,EAAGxF,EAAG6G,GACZ,OAAO,IAAI6F,GAAGlH,EAAGxF,EAAG6G,GAExB8F,kBAII,OAAOjQ,KAAK6P,UAAUtO,KAAK,KAE/BiK,WACI,OAAOxL,KAAKiQ,kBAMTxB,qBAAqB3F,GAIxB,MAAMxF,EAAI,GACV,IAAK,MAAM6G,KAAKrB,EAAG,CACf,GAAIqB,EAAE+F,QAAQ,OAAS,EAAG,MAAM,IAAI3E,EAAEX,EAAG,oBAAoBT,0CAEjD7G,EAAEhC,QAAQ6I,EAAEgG,MAAM,KAAKC,QAAQtH,GAAKA,EAAExJ,OAAS,KAE/D,OAAO,IAAI0Q,GAAG1M,GAElBmL,mBACI,OAAO,IAAIuB,GAAG,KAItB,MAAMK,GAAK,2BAKP,MAAMC,WAAW3B,GACjBS,UAAUtG,EAAGxF,EAAG6G,GACZ,OAAO,IAAImG,GAAGxH,EAAGxF,EAAG6G,GAKjBsE,yBAAyB3F,GAC5B,OAAOuH,GAAGE,KAAKzH,GAEnBmH,kBACI,OAAOjQ,KAAK6P,UAAUzF,KAAKtB,IAAMA,EAAIA,EAAEnG,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAC5E2N,GAAGE,kBAAkB1H,KAAOA,EAAI,IAAMA,EAAI,KAAMA,KAAKvH,KAAK,KAE9DiK,WACI,OAAOxL,KAAKiQ,kBAITQ,aACH,OAAO,IAAMzQ,KAAKV,QAAU,aAAeU,KAAKyP,IAAI,GAIjDhB,kBACH,OAAO,IAAI6B,GAAG,CAAE,aAWb7B,wBAAwB3F,GAC3B,MAAMxF,EAAI,GACV,IAAI6G,EAAI,GAAIiD,EAAI,EAChB,MAAMU,EAAI,KACN,GAAI,IAAM3D,EAAE7K,OAAQ,MAAM,IAAIiM,EAAEX,EAAG,uBAAuB9B,8EAC1DxF,EAAEhC,KAAK6I,GAAIA,EAAI,IAEnB,IAAI9K,GAAI,EACR,KAAM+N,EAAItE,EAAExJ,QAAU,CAClB,MAAMgE,EAAIwF,EAAEsE,GACZ,GAAI,OAAS9J,EAAG,CACZ,GAAI8J,EAAI,IAAMtE,EAAExJ,OAAQ,MAAM,IAAIiM,EAAEX,EAAG,uCAAyC9B,GAChF,MAAMxF,EAAIwF,EAAEsE,EAAI,GAChB,GAAI,OAAS9J,GAAK,MAAQA,GAAK,MAAQA,EAAG,MAAM,IAAIiI,EAAEX,EAAG,qCAAuC9B,GAChGqB,GAAK7G,EAAG8J,GAAK,MACV,MAAQ9J,GAAKjE,GAAKA,EAAG+N,KAAO,MAAQ9J,GAAKjE,GAAK8K,GAAK7G,EAAG8J,MAAQU,IAAKV,KAE9E,GAAIU,IAAKzO,EAAG,MAAM,IAAIkM,EAAEX,EAAG,2BAA6B9B,GACxD,OAAO,IAAIwH,GAAGhN,GAElBmL,mBACI,OAAO,IAAI6B,GAAG,KAsBlB,MAAMI,GACN1L,YAAY8D,GACR9I,KAAK2Q,KAAO7H,EAEhB2F,gBAAgB3F,GACZ,OAAO,IAAI4H,GAAGV,GAAGY,WAAW9H,IAEhC2F,gBAAgB3F,GACZ,OAAO,IAAI4H,GAAGV,GAAGY,WAAW9H,GAAGuG,SAAS,IAE5CZ,eACI,OAAO,IAAIiC,GAAGV,GAAGa,aAEjBC,sBACA,OAAO9Q,KAAK2Q,KAAKrB,UAAUE,cAE0CuB,gBAAgBjI,GACrF,OAAO9I,KAAK2Q,KAAKrR,QAAU,GAAKU,KAAK2Q,KAAKlB,IAAIzP,KAAK2Q,KAAKrR,OAAS,KAAOwJ,EAEkBkI,qBAC1F,OAAOhR,KAAK2Q,KAAKlB,IAAIzP,KAAK2Q,KAAKrR,OAAS,GAEyB2R,oBACjE,OAAOjR,KAAK2Q,KAAKrB,UAErBpG,QAAQJ,GACJ,OAAO,OAASA,GAAK,IAAMkH,GAAGjB,WAAW/O,KAAK2Q,KAAM7H,EAAE6H,MAE1DnF,WACI,OAAOxL,KAAK2Q,KAAKnF,WAErBiD,kBAAkB3F,EAAGxF,GACjB,OAAO0M,GAAGjB,WAAWjG,EAAE6H,KAAMrN,EAAEqN,MAEnClC,qBAAqB3F,GACjB,OAAOA,EAAExJ,OAAS,GAAK,EAOpBmP,oBAAoB3F,GACvB,OAAO,IAAI4H,GAAG,IAAIV,GAAGlH,EAAEmG,WAmB3B,SAASiC,GAAGpI,EAAGxF,EAAG6G,GAClB,IAAKA,EAAG,MAAM,IAAIoB,EAAEX,EAAG,YAAY9B,sCAAsCxF,MAW7E,SAAS6N,GAAGrI,GACR,IAAK4H,GAAGU,cAActI,GAAI,MAAM,IAAIyC,EAAEX,EAAG,6FAA6F9B,SAASA,EAAExJ,WAMjJ,SAAS+R,GAAGvI,GACZ,GAAI4H,GAAGU,cAActI,GAAI,MAAM,IAAIyC,EAAEX,EAAG,gGAAgG9B,SAASA,EAAExJ,WAQvJ,SAASgS,GAAGxI,GACR,QAAI,IAAWA,EAAG,MAAO,YACzB,GAAI,OAASA,EAAG,MAAO,OACvB,GAAI,iBAAmBA,EAAG,OAAOA,EAAExJ,OAAS,KAAOwJ,EAAI,GAAGA,EAAEhE,UAAU,EAAG,UACzEnB,KAAK4G,UAAUzB,GACf,GAAI,iBAAmBA,GAAK,kBAAoBA,EAAG,MAAO,GAAKA,EAC/D,GAAI,iBAAmBA,EAAG,CACtB,GAAIA,aAAavI,MAAO,MAAO,WAC/B,CACI,MAAM+C,EAEN,SAASwF,GACL,OAAIA,EAAE9D,YAAoB8D,EAAE9D,YAAYK,KACjC,KAFX,CAWPyD,GACO,OAAOxF,EAAI,YAAYA,WAAa,aAG5C,MAAO,mBAAqBwF,EAAI,aAAepC,IAGnD,SAAS6K,GAAGzI,EAEZxF,GACI,GAAI,cAAewF,IAGnBA,EAAIA,EAAEzB,aAAcyB,aAAaxF,GAAI,CACjC,GAAIA,EAAE+B,OAASyD,EAAE9D,YAAYK,KAAM,MAAM,IAAIkG,EAAEX,EAAG,uGAClD,CACI,MAAMT,EAAImH,GAAGxI,GACb,MAAM,IAAIyC,EAAEX,EAAG,kBAAkBtH,EAAE+B,sBAAsB8E,MAGjE,OAAOrB,EAGX,SAAS0I,GAAG1I,EAAGxF,GACX,GAAIA,GAAK,EAAG,MAAM,IAAIiI,EAAEX,EAAG,YAAY9B,+CAA+CxF,MAqBtF,SAASmO,GAAG3I,GACZ,OAAO,MAAQA,EAG6B,SAAS4I,GAAG5I,GAGxD,OAAO,IAAMA,GAAK,EAAIA,IAAK,EAAA,EAuB/B,MAAM6I,GAAK,CACPC,kBAAmB,WACnBC,OAAQ,SACRC,SAAU,WACVC,oBAAqB,uBAkCzB,IAAIC,GAAIC,GASR,SAASC,GAAGpJ,GACR,QAAI,IAAWA,EAAG,OAAOwB,EAAE,YAAa,4BAA6BK,EAOjE,OAAQ7B,GACV,KAAK,IAEH,MAhrBM,KAkrBR,KAAK,IAEH,OAAOoC,EAKD,KAAK,IAEX,OAAOF,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOK,EAID,KAAK,IAEX,OAAOC,EAET,KAAK,IAEH,OAAOH,EAET,KAAK,IAEH,OAAOP,EAET,KAAK,IAEH,OAAOC,EAKD,KAAK,IAEX,OAAO7D,EAET,KAAK,IAEH,OAAOwE,EAET,KAAK,IAEH,OAAOT,EAET,QACE,OAAO/B,GAAK,KAAOA,EAAI,IA3uBjB,KA2uB2BA,GAAK,KAAOA,EAAI,IAAMoC,EAAIpC,GAAK,KAAOA,EAAI,IAAMuC,EAAIV,IAuBxFsH,GAAKD,KAAOA,GAAK,KAAKC,GAAGE,GAAK,GAAK,KAAMF,GAAGA,GAAGG,UAAY,GAAK,YACrEH,GAAGA,GAAGI,QAAU,GAAK,UAAWJ,GAAGA,GAAGK,iBAAmB,GAAK,mBAC9DL,GAAGA,GAAGM,kBAAoB,GAAK,oBAAqBN,GAAGA,GAAGO,UAAY,GAAK,YAC3EP,GAAGA,GAAGQ,eAAiB,GAAK,iBAAkBR,GAAGA,GAAGS,kBAAoB,GAAK,oBAC7ET,GAAGA,GAAG9I,gBAAkB,IAAM,kBAAmB8I,GAAGA,GAAGU,mBAAqB,GAAK,qBACjFV,GAAGA,GAAGW,oBAAsB,GAAK,sBAAuBX,GAAGA,GAAGY,QAAU,IAAM,UAC9EZ,GAAGA,GAAGa,aAAe,IAAM,eAAgBb,GAAGA,GAAGc,cAAgB,IAAM,gBACvEd,GAAGA,GAAGe,SAAW,IAAM,WAAYf,GAAGA,GAAGgB,YAAc,IAAM,cAAehB,GAAGA,GAAGiB,UAAY,IAAM,YAEpG,MAAMC,WAKN,MACInO,YAAY8D,GACR9I,KAAKoT,aAAetK,EAAG9I,KAAK+N,WAAajF,EAAEiF,WAC3C,MAAMzK,EAAIwF,EAAEoF,IAAM,QAAU,OAC5BlO,KAAKZ,EAAIkE,EAAI,MAAQwF,EAAEzE,KAAMrE,KAAKsK,EAAI,YAActK,KAAK+N,WAAWQ,UAAY,cAAgBvO,KAAK+N,WAAWS,SAAW,aAE3HnE,QAGA,OAAO,EAEXI,EAAE3B,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACV,MAAMzO,EAAIW,KAAKqT,EAAEvK,EAAGxF,GACpB4G,EAAE,iBAAkB,YAAa7K,EAAG8K,GACpC,MAAMkD,EAAI,GACV,OAAOrN,KAAK0K,EAAE2C,EAAGD,EAAGU,GAAI9N,KAAK2K,EAAE7B,EAAGzJ,EAAGgO,EAAGlD,GAAG6C,MAAMlE,IAAMoB,EAAE,iBAAkB,aAAcpB,GACzFA,KAAMxF,IACF,MAAM6C,EAAE,iBAAkB,GAAG2C,wBAAyBxF,EAAG,QAASjE,EAAG,WAAY8K,GACjF7G,KAGRsH,EAAE9B,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,GAGb,OAAOW,KAAKyK,EAAE3B,EAAGxF,EAAG6G,EAAGiD,EAAGU,GAKvBpD,EAAE5B,EAAGxF,EAAG6G,GACXrB,EAAE,qBAAuB,eAAiBS,EAK1CT,EAAE,gBAAkB,aAAc9I,KAAKoT,aAAapF,QAAUlF,EAAE,oBAAsB9I,KAAKoT,aAAapF,OACxG1K,GAAKA,EAAE2I,QAAQkD,SAAS,CAAC7L,EAAG6G,IAAMrB,EAAEqB,GAAK7G,IAAK6G,GAAKA,EAAE8B,QAAQkD,UAAU7L,EAAG6G,IAAMrB,EAAEqB,GAAK7G,IAE3F+P,EAAEvK,EAAGxF,GACD,MAAM6G,EAAIwH,GAAG7I,GACb,MAAO,GAAG9I,KAAKZ,QAAQkE,KAAK6G,MAOhCnF,YAAY8D,EAAGxF,GACX8B,MAAM0D,GAAI9I,KAAK6K,EAAIvH,EAEvBwH,EAAEhC,EAAGxF,GACD,MAAM,IAAI7C,MAAM,oCAEpB6S,QAAQxK,EAAGxF,EAAG6G,EAAGiD,GACb,IAAIU,EACJ,MAAMzO,EAAIsE,KAAK4G,UAAU6C,GACzB,IAAIC,EACJ,IACIA,QAAUrN,KAAK6K,EAAEvH,EAAG,CAChBsF,OAAQ,OACRqD,QAAS9B,EACToJ,KAAMlU,IAEZ,MAAOyJ,GACL,MAAMxF,EAAIwF,EACV,MAAM,IAAIyC,EAAE2G,GAAG5O,EAAEkQ,QAAS,8BAAgClQ,EAAEmQ,YAEhE,IAAKpG,EAAEqG,GAAI,CACP,IAAI5K,QAAUuE,EAAEsG,OAChBpT,MAAMC,QAAQsI,KAAOA,EAAIA,EAAE,IAC3B,MAAMxF,EAAI,QAAUwK,EAAI,MAAQhF,OAAI,EAASA,EAAErF,aAAU,IAAWqK,OAAI,EAASA,EAAE5I,QACnF,MAAM,IAAIqG,EAAE2G,GAAG7E,EAAEmG,QAAS,8BAA8B,MAAQlQ,EAAIA,EAAI+J,EAAEoG,cAE9E,OAAOpG,EAAEsG,QA0CjB,SAASC,GAAG9K,GAER,MAAMxF,EAEN,oBAAsBT,OAASA,KAAKgR,QAAUhR,KAAKiR,UAAW3J,EAAI,IAAI4J,WAAWjL,GACjF,GAAIxF,GAAK,mBAAqBA,EAAE0Q,gBAAiB1Q,EAAE0Q,gBAAgB7J,QAEnE,IAAK,IAAI7G,EAAI,EAAGA,EAAIwF,EAAGxF,IAAK6G,EAAE7G,GAAKwM,KAAKmE,MAAM,IAAMnE,KAAKoE,UACzD,OAAO/J,EAkBP,MAAMgK,GACN1F,WAEI,MAAM3F,EAAI,iEAAkExF,EAAIwM,KAAKmE,MAAM,IAAMnL,EAAExJ,QAAUwJ,EAAExJ,OAEvG,IAAI6K,EAAI,GAChB,KAAMA,EAAE7K,OAAS,IAAM,CACnB,MAAM8N,EAAIwG,GAAG,IACb,IAAK,IAAI9F,EAAI,EAAGA,EAAIV,EAAE9N,SAAUwO,EAGhC3D,EAAE7K,OAAS,IAAM8N,EAAEU,GAAKxK,IAAM6G,GAAKrB,EAAExG,OAAO8K,EAAEU,GAAKhF,EAAExJ,SAEzD,OAAO6K,GAIf,SAASiK,GAAGtL,EAAGxF,GACX,OAAOwF,EAAIxF,GAAK,EAAIwF,EAAIxF,EAAI,EAAI,EAGa,SAAS+Q,GAAGvL,EAAGxF,EAAG6G,GAC/D,OAAOrB,EAAExJ,SAAWgE,EAAEhE,QAAUwJ,EAAEwL,OAAO,CAACxL,EAAGsE,IAAMjD,EAAErB,EAAGxF,EAAE8J,MAkB1D,SAASmH,GAAGzL,GACZ,IAAIxF,EAAI,EACR,IAAK,MAAM6G,KAAKrB,EAAGxD,OAAOE,UAAUgP,eAAeC,KAAK3L,EAAGqB,IAAM7G,IACjE,OAAOA,EAGX,SAASoR,GAAG5L,EAAGxF,GACX,IAAK,MAAM6G,KAAKrB,EAAGxD,OAAOE,UAAUgP,eAAeC,KAAK3L,EAAGqB,IAAM7G,EAAE6G,EAAGrB,EAAEqB,IA4B5E,MAAMwK,GACF3P,YAAY8D,GACR9I,KAAK4U,aAAe9L,EAExB2F,wBAAwB3F,GACpB,MAAMxF,EAAInD,KAAK2I,GACf,OAAO,IAAI6L,GAAGrR,GAElBmL,sBAAsB3F,GAGlB,MAAMxF,EAIN,SAASwF,GACL,IAAIxF,EAAI,GACR,IAAK,IAAI6G,EAAI,EAAGA,EAAIrB,EAAExJ,SAAU6K,EAAG7G,GAAKxB,OAAOC,aAAa+G,EAAEqB,IAC9D,OAAO7G,EAHX,CAOHwF,GACG,OAAO,IAAI6L,GAAGrR,GAElB,CAACuR,OAAOC,YACJ,IAAIhM,EAAI,EACR,MAAO,CACHiM,KAAM,IAAMjM,EAAI9I,KAAK4U,aAAatV,OAAS,CACvC+G,MAAOrG,KAAK4U,aAAapV,WAAWsJ,KACpCkM,MAAM,GACN,CACA3O,WAAO,EACP2O,MAAM,IAIlBC,WACI,OAAOnM,EAAI9I,KAAK4U,aAAcnT,KAAKqH,GAEnC,IAAIA,EAERoM,eACI,OAAO,SAASpM,GACZ,MAAMxF,EAAI,IAAIyQ,WAAWjL,EAAExJ,QAC3B,IAAK,IAAI6K,EAAI,EAAGA,EAAIrB,EAAExJ,OAAQ6K,IAAK7G,EAAE6G,GAAKrB,EAAEtJ,WAAW2K,GACvD,OAAO7G,EAHJ,CAsBNtD,KAAK4U,cAEVO,sBACI,OAAO,EAAInV,KAAK4U,aAAatV,OAEjC8V,UAAUtM,GACN,OAAOsL,GAAGpU,KAAK4U,aAAc9L,EAAE8L,cAEnC1L,QAAQJ,GACJ,OAAO9I,KAAK4U,eAAiB9L,EAAE8L,cAIvCD,GAAGU,kBAAoB,IAAIV,GAAG,IAE9B,MAAMW,GAAK,IAAIC,OAAO,iDAKlB,SAASC,GAAG1M,GAIZ,GAAI0B,IAAI1B,GAAI,iBAAmBA,EAAG,CAI9B,IAAIxF,EAAI,EACR,MAAM6G,EAAImL,GAAGG,KAAK3M,GAClB,GAAI0B,IAAIL,GAAIA,EAAE,GAAI,CAEd,IAAIrB,EAAIqB,EAAE,GACVrB,GAAKA,EAAI,aAAa4M,OAAO,EAAG,GAAIpS,EAAIqS,OAAO7M,GAG3C,MAAMsE,EAAI,IAAI1E,KAAKI,GAC3B,MAAO,CACH8M,QAAS9F,KAAKmE,MAAM7G,EAAEyI,UAAY,KAClCC,MAAOxS,GAGf,MAAO,CACHsS,QAASG,GAAGjN,EAAE8M,SACdE,MAAOC,GAAGjN,EAAEgN,QAOhB,SAASC,GAAGjN,GAEZ,MAAO,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAI6M,OAAO7M,GAAK,EAGH,SAASkN,GAAGlN,GAC9E,MAAO,iBAAmBA,EAAI6L,GAAGsB,iBAAiBnN,GAAK6L,GAAGuB,eAAepN,GAkC7E,MAAMqN,GAYFnR,YAIA8D,EAIAxF,GACI,GAAItD,KAAK4V,QAAU9M,EAAG9I,KAAKoW,YAAc9S,EAAGA,EAAI,EAAG,MAAM,IAAIiI,EAAEX,EAAG,uCAAyCtH,GAC3G,GAAIA,GAAK,IAAK,MAAM,IAAIiI,EAAEX,EAAG,uCAAyCtH,GACtE,GAAIwF,GAAK,YAAa,MAAM,IAAIyC,EAAEX,EAAG,mCAAqC9B,GAElE,GAAIA,GAAK,aAAc,MAAM,IAAIyC,EAAEX,EAAG,mCAAqC9B,GAMhF2F,aACH,OAAO0H,GAAGE,WAAW3N,KAAKD,OAQvBgG,gBAAgB3F,GACnB,OAAOqN,GAAGE,WAAWvN,EAAE+M,WASpBpH,kBAAkB3F,GACrB,MAAMxF,EAAIwM,KAAKmE,MAAMnL,EAAI,KAAMqB,EAAI2F,KAAKmE,MAAM,KAAOnL,EAAI,IAAMxF,IAC/D,OAAO,IAAI6S,GAAG7S,EAAG6G,GASdmM,SACH,OAAO,IAAI5N,KAAK1I,KAAKuW,YAQlBA,WACH,OAAO,IAAMvW,KAAK4V,QAAU5V,KAAKoW,YAAc,IAEnDI,WAAW1N,GACP,OAAO9I,KAAK4V,UAAY9M,EAAE8M,QAAUxB,GAAGpU,KAAKoW,YAAatN,EAAEsN,aAAehC,GAAGpU,KAAK4V,QAAS9M,EAAE8M,SAO1F1M,QAAQJ,GACX,OAAOA,EAAE8M,UAAY5V,KAAK4V,SAAW9M,EAAEsN,cAAgBpW,KAAKoW,YAEA5K,WAC5D,MAAO,qBAAuBxL,KAAK4V,QAAU,iBAAmB5V,KAAKoW,YAAc,IAEbK,SACtE,MAAO,CACHb,QAAS5V,KAAK4V,QACdQ,YAAapW,KAAKoW,aAMnBM,UAQH,MAAM5N,EAAI9I,KAAK4V,UAAW,YAGlB,OAAO9T,OAAOgH,GAAG6N,SAAS,GAAI,KAAO,IAAM7U,OAAO9B,KAAKoW,aAAaO,SAAS,EAAG,MAqC5F,SAASC,GAAG9N,GACZ,IAAIxF,EAAG6G,EACP,MAAO,sBAAwB,QAAUA,IAAM,QAAU7G,EAAI,MAAQwF,OAAI,EAASA,EAAE+N,gBAAa,IAAWvT,OAAI,EAASA,EAAEwT,SAAW,IAAIC,gBAAa,IAAW5M,OAAI,EAASA,EAAE6M,aAQjL,SAASC,GAAGnO,GACZ,MAAMxF,EAAIwF,EAAE+N,SAASC,OAAOI,mBAC5B,OAAON,GAAGtT,GAAK2T,GAAG3T,GAAKA,EAKvB,SAAS6T,GAAGrO,GACZ,MAAMxF,EAAIkS,GAAG1M,EAAE+N,SAASC,OAAOM,qBAAqBC,gBACpD,OAAO,IAAIlB,GAAG7S,EAAEsS,QAAStS,EAAEwS,OAkB3B,MAAMwB,GAAK,CACXR,OAAQ,CACJC,SAAU,CACNC,YAAa,aAMzB,SAASO,GAAGzO,GACR,MAAO,cAAeA,EAAI,EAA8B,iBAAkBA,EAAI,EAAiC,iBAAkBA,GAAK,gBAAiBA,EAAI,EAAgC,mBAAoBA,EAAI,EAAmC,gBAAiBA,EAAI,EAAgC,eAAgBA,EAAI,EAA8B,mBAAoBA,EAAI,EAA6B,kBAAmBA,EAAI,EAAkC,eAAgBA,EAAI,EAA+B,aAAcA,EAAI8N,GAAG9N,GAAK,EAExhB,SAASA,GACL,MAAO,eAAiBA,EAAE+N,UAAY,IAAIC,QAAU,IAAIC,UAAY,IAAIC,YAD5E,CAgCClO,GAAK,iBAA4C,GAAiCpC,IAGV,SAAS8Q,GAAG1O,EAAGxF,GACxF,GAAIwF,IAAMxF,EAAG,OAAO,EACpB,MAAM6G,EAAIoN,GAAGzO,GACb,GAAIqB,IAAMoN,GAAGjU,GAAI,OAAO,EACxB,OAAQ6G,GACN,KAAK,EACL,KAAK,iBACH,OAAO,EAET,KAAK,EACH,OAAOrB,EAAE2O,eAAiBnU,EAAEmU,aAE9B,KAAK,EACH,OAAON,GAAGrO,GAAGI,QAAQiO,GAAG7T,IAE1B,KAAK,EACH,OAAO,SAASwF,EAAGxF,GACf,GAAI,iBAAmBwF,EAAEuO,gBAAkB,iBAAmB/T,EAAE+T,gBAAkBvO,EAAEuO,eAAe/X,SAAWgE,EAAE+T,eAAe/X,OAE/H,OAAOwJ,EAAEuO,iBAAmB/T,EAAE+T,eAC9B,MAAMlN,EAAIqL,GAAG1M,EAAEuO,gBAAiBjK,EAAIoI,GAAGlS,EAAE+T,gBACzC,OAAOlN,EAAEyL,UAAYxI,EAAEwI,SAAWzL,EAAE2L,QAAU1I,EAAE0I,MAL7C,CAMLhN,EAAGxF,GAEP,KAAK,EACH,OAAOwF,EAAEkO,cAAgB1T,EAAE0T,YAE7B,KAAK,EACH,OAAO,SAASlO,EAAGxF,GACf,OAAO0S,GAAGlN,EAAE4O,YAAYxO,QAAQ8M,GAAG1S,EAAEoU,aADlC,CAEL5O,EAAGxF,GAEP,KAAK,EACH,OAAOwF,EAAE6O,iBAAmBrU,EAAEqU,eAEhC,KAAK,EACH,OAAO,SAAS7O,EAAGxF,GACf,OAAOyS,GAAGjN,EAAE8O,cAAcC,YAAc9B,GAAGzS,EAAEsU,cAAcC,WAAa9B,GAAGjN,EAAE8O,cAAcE,aAAe/B,GAAGzS,EAAEsU,cAAcE,WAD1H,CAELhP,EAAGxF,GAEP,KAAK,EACH,OAAO,SAASwF,EAAGxF,GACf,GAAI,iBAAkBwF,GAAK,iBAAkBxF,EAAG,OAAOyS,GAAGjN,EAAEiP,gBAAkBhC,GAAGzS,EAAEyU,cACnF,GAAI,gBAAiBjP,GAAK,gBAAiBxF,EAAG,CAC1C,MAAM6G,EAAI4L,GAAGjN,EAAEkP,aAAc5K,EAAI2I,GAAGzS,EAAE0U,aACtC,OAAO7N,IAAMiD,EAAIsE,GAAGvH,KAAOuH,GAAGtE,GAAK6K,MAAM9N,IAAM8N,MAAM7K,GAEzD,OAAO,EANJ,CAOLtE,EAAGxF,GAEP,KAAK,EACH,OAAO+Q,GAAGvL,EAAEoP,WAAWC,QAAU,GAAI7U,EAAE4U,WAAWC,QAAU,GAAIX,IAElE,KAAK,GACH,OAAO,SAAS1O,EAAGxF,GACf,MAAM6G,EAAIrB,EAAE+N,SAASC,QAAU,GAAI1J,EAAI9J,EAAEuT,SAASC,QAAU,GAC5D,GAAIvC,GAAGpK,KAAOoK,GAAGnH,GAAI,OAAO,EAC5B,IAAK,MAAMtE,KAAKqB,EAAG,GAAIA,EAAEqK,eAAe1L,UAAO,IAAWsE,EAAEtE,KAAO0O,GAAGrN,EAAErB,GAAIsE,EAAEtE,KAAM,OAAO,EAC3F,OAAO,EAJJ,CAMgEA,EAAGxF,GAE5E,QACE,OAAOoD,KAIf,SAAS0R,GAAGtP,EAAGxF,GACX,YAAO,KAAYwF,EAAEqP,QAAU,IAAIE,MAAMvP,GAAK0O,GAAG1O,EAAGxF,KAGxD,SAASgV,GAAGxP,EAAGxF,GACX,GAAIwF,IAAMxF,EAAG,OAAO,EACpB,MAAM6G,EAAIoN,GAAGzO,GAAIsE,EAAImK,GAAGjU,GACxB,GAAI6G,IAAMiD,EAAG,OAAOgH,GAAGjK,EAAGiD,GAC1B,OAAQjD,GACN,KAAK,EACL,KAAK,iBACH,OAAO,EAET,KAAK,EACH,OAAOiK,GAAGtL,EAAE2O,aAAcnU,EAAEmU,cAE9B,KAAK,EACH,OAAO,SAAS3O,EAAGxF,GACf,MAAM6G,EAAI4L,GAAGjN,EAAEiP,cAAgBjP,EAAEkP,aAAc5K,EAAI2I,GAAGzS,EAAEyU,cAAgBzU,EAAE0U,aAC1E,OAAO7N,EAAIiD,GAAK,EAAIjD,EAAIiD,EAAI,EAAIjD,IAAMiD,EAAI,EAE1C6K,MAAM9N,GAAK8N,MAAM7K,GAAK,GAAK,EAAI,EAJ5B,CAKLtE,EAAGxF,GAEP,KAAK,EACH,OAAOiV,GAAGzP,EAAEuO,eAAgB/T,EAAE+T,gBAEhC,KAAK,EACH,OAAOkB,GAAGpB,GAAGrO,GAAIqO,GAAG7T,IAEtB,KAAK,EACH,OAAO8Q,GAAGtL,EAAEkO,YAAa1T,EAAE0T,aAE7B,KAAK,EACH,OAAO,SAASlO,EAAGxF,GACf,MAAM6G,EAAI6L,GAAGlN,GAAIsE,EAAI4I,GAAG1S,GACxB,OAAO6G,EAAEiL,UAAUhI,GAFhB,CAGLtE,EAAE4O,WAAYpU,EAAEoU,YAEpB,KAAK,EACH,OAAO,SAAS5O,EAAGxF,GACf,MAAM6G,EAAIrB,EAAEqH,MAAM,KAAM/C,EAAI9J,EAAE6M,MAAM,KACpC,IAAK,IAAIrH,EAAI,EAAGA,EAAIqB,EAAE7K,QAAUwJ,EAAIsE,EAAE9N,OAAQwJ,IAAK,CAC/C,MAAMxF,EAAI8Q,GAAGjK,EAAErB,GAAIsE,EAAEtE,IACrB,GAAI,IAAMxF,EAAG,OAAOA,EAExB,OAAO8Q,GAAGjK,EAAE7K,OAAQ8N,EAAE9N,QANnB,CAOLwJ,EAAE6O,eAAgBrU,EAAEqU,gBAExB,KAAK,EACH,OAAO,SAAS7O,EAAGxF,GACf,MAAM6G,EAAIiK,GAAG2B,GAAGjN,EAAE+O,UAAW9B,GAAGzS,EAAEuU,WAClC,OAAI,IAAM1N,EAAUA,EACbiK,GAAG2B,GAAGjN,EAAEgP,WAAY/B,GAAGzS,EAAEwU,YAH7B,CAILhP,EAAE8O,cAAetU,EAAEsU,eAEvB,KAAK,EACH,OAAO,SAAS9O,EAAGxF,GACf,MAAM6G,EAAIrB,EAAEqP,QAAU,GAAI/K,EAAI9J,EAAE6U,QAAU,GAC1C,IAAK,IAAIrP,EAAI,EAAGA,EAAIqB,EAAE7K,QAAUwJ,EAAIsE,EAAE9N,SAAUwJ,EAAG,CAC/C,MAAMxF,EAAIgV,GAAGnO,EAAErB,GAAIsE,EAAEtE,IACrB,GAAIxF,EAAG,OAAOA,EAElB,OAAO8Q,GAAGjK,EAAE7K,OAAQ8N,EAAE9N,QANnB,CAOLwJ,EAAEoP,WAAY5U,EAAE4U,YAEpB,KAAK,GACH,OAAO,SAASpP,EAAGxF,GACf,GAAIwF,IAAMwO,IAAMhU,IAAMgU,GAAI,OAAO,EACjC,GAAIxO,IAAMwO,GAAI,OAAO,EACrB,GAAIhU,IAAMgU,GAAI,OAAQ,EACtB,MAAMnN,EAAIrB,EAAEgO,QAAU,GAAI1J,EAAI9H,OAAOsB,KAAKuD,GAAI2D,EAAIxK,EAAEwT,QAAU,GAAIzX,EAAIiG,OAAOsB,KAAKkH,GAKlFV,EAAEoL,OAAQnZ,EAAEmZ,OACZ,IAAK,IAAI1P,EAAI,EAAGA,EAAIsE,EAAE9N,QAAUwJ,EAAIzJ,EAAEC,SAAUwJ,EAAG,CAC/C,MAAMxF,EAAI8Q,GAAGhH,EAAEtE,GAAIzJ,EAAEyJ,IACrB,GAAI,IAAMxF,EAAG,OAAOA,EACpB,MAAM+J,EAAIiL,GAAGnO,EAAEiD,EAAEtE,IAAKgF,EAAEzO,EAAEyJ,KAC1B,GAAI,IAAMuE,EAAG,OAAOA,EAExB,OAAO+G,GAAGhH,EAAE9N,OAAQD,EAAEC,QAhBnB,CAkB8DwJ,EAAE+N,SAAUvT,EAAEuT,UAErF,QACE,MAAMnQ,KAId,SAAS6R,GAAGzP,EAAGxF,GACX,GAAI,iBAAmBwF,GAAK,iBAAmBxF,GAAKwF,EAAExJ,SAAWgE,EAAEhE,OAAQ,OAAO8U,GAAGtL,EAAGxF,GACxF,MAAM6G,EAAIqL,GAAG1M,GAAIsE,EAAIoI,GAAGlS,GAAIwK,EAAIsG,GAAGjK,EAAEyL,QAASxI,EAAEwI,SAChD,OAAO,IAAM9H,EAAIA,EAAIsG,GAAGjK,EAAE2L,MAAO1I,EAAE0I,OAGvC,SAAS2C,GAAG3P,EAAGxF,GACX,MAAO,CACHqU,eAAgB,YAAY7O,EAAEyF,uBAAuBzF,EAAE0F,sBAAsBlL,EAAEqN,KAAKV,qBAI3C,SAASyI,GAAG5P,GACzD,QAASA,GAAK,eAAgBA,EAGa,SAAS6P,GAAG7P,GACvD,QAASA,GAAK,cAAeA,EAGM,SAAS8P,GAAG9P,GAC/C,QAASA,GAAK,gBAAiBA,GAAKmP,MAAMtC,OAAO7M,EAAEkP,cAGT,SAASa,GAAG/P,GACtD,QAASA,GAAK,aAAcA,EAGQ,SAASgQ,GAAGhQ,GAChD,GAAIA,EAAE8O,cAAe,MAAO,CACxBA,cAAetS,OAAOyT,OAAO,GAAIjQ,EAAE8O,gBAEvC,GAAI9O,EAAEuO,gBAAkB,iBAAmBvO,EAAEuO,eAAgB,MAAO,CAChEA,eAAgB/R,OAAOyT,OAAO,GAAIjQ,EAAEuO,iBAExC,GAAIvO,EAAE+N,SAAU,CACZ,MAAMvT,EAAI,CACNuT,SAAU,CACNC,OAAQ,KAGhB,OAAOpC,GAAG5L,EAAE+N,SAASC,QAAS,CAAChO,EAAGqB,IAAM7G,EAAEuT,SAASC,OAAOhO,GAAKgQ,GAAG3O,KAAM7G,EAE5E,GAAIwF,EAAEoP,WAAY,CACd,MAAM5U,EAAI,CACN4U,WAAY,CACRC,OAAQ,KAGhB,IAAK,IAAIhO,EAAI,EAAGA,GAAKrB,EAAEoP,WAAWC,QAAU,IAAI7Y,SAAU6K,EAAG7G,EAAE4U,WAAWC,OAAOhO,GAAK2O,GAAGhQ,EAAEoP,WAAWC,OAAOhO,IAC7G,OAAO7G,EAEX,OAAOgC,OAAOyT,OAAO,GAAIjQ,GAG7B,MAAMkQ,GACFhU,YAAY8D,EAAGxF,GACXtD,KAAKiZ,SAAWnQ,EAAG9I,KAAKkZ,UAAY5V,GAI5C,SAAS6V,GAAGrQ,EAAGxF,GACX,GAAI,OAASwF,EAAG,OAAO,OAASxF,EAChC,GAAI,OAASA,EAAG,OAAO,EACvB,GAAIwF,EAAEoQ,YAAc5V,EAAE4V,WAAapQ,EAAEmQ,SAAS3Z,SAAWgE,EAAE2V,SAAS3Z,OAAQ,OAAO,EACnF,IAAK,IAAI6K,EAAI,EAAGA,EAAIrB,EAAEmQ,SAAS3Z,OAAQ6K,IACnC,IAAKqN,GAAG1O,EAAEmQ,SAAS9O,GAAI7G,EAAE2V,SAAS9O,IAAK,OAAO,EAElD,OAAO,EAkBP,MAAMiP,IAEV,MAAMC,WAAWD,GACbpU,YAAY8D,EAAGxF,EAAG6G,GACd/E,QAASpF,KAAKsZ,MAAQxQ,EAAG9I,KAAKuZ,GAAKjW,EAAGtD,KAAKqG,MAAQ8D,EAIhDsE,cAAc3F,EAAGxF,EAAG6G,GACvB,OAAOrB,EAAE2H,aAAe,OAA2BnN,GAAK,WAAmCA,EAAItD,KAAKwZ,uBAAuB1Q,EAAGxF,EAAG6G,GAAK,IAAIsP,GAAG3Q,EAAGxF,EAAG6G,GAAK,mBAAmD7G,EAAI,IAAIoW,GAAG5Q,EAAGqB,GAAK,OAA2B7G,EAAI,IAAIqW,GAAG7Q,EAAGqB,GAAK,WAAmC7G,EAAI,IAAIsW,GAAG9Q,EAAGqB,GAAK,uBAA2D7G,EAAI,IAAIuW,GAAG/Q,EAAGqB,GAAK,IAAIkP,GAAGvQ,EAAGxF,EAAG6G,GAEjasE,8BAA8B3F,EAAGxF,EAAG6G,GAChC,MAAO,OAA2B7G,EAAI,IAAIwW,GAAGhR,EAAGqB,GAAK,IAAI4P,GAAGjR,EAAGqB,GAEnE6P,QAAQlR,GACJ,MAAMxF,EAAIwF,EAAE/C,KAAKuT,MAAMtZ,KAAKsZ,OAEpB,MAAO,OAAkCtZ,KAAKuZ,GAAK,OAASjW,GAAKtD,KAAKia,kBAAkB3B,GAAGhV,EAAGtD,KAAKqG,QAAU,OAAS/C,GAAKiU,GAAGvX,KAAKqG,SAAWkR,GAAGjU,IAAMtD,KAAKia,kBAAkB3B,GAAGhV,EAAGtD,KAAKqG,QAGrM4T,kBAAkBnR,GACd,OAAQ9I,KAAKuZ,IACX,IAAK,IACH,OAAOzQ,EAAI,EAEb,IAAK,KACH,OAAOA,GAAK,EAEd,IAAK,KACH,OAAO,IAAMA,EAEf,IAAK,KACH,OAAO,IAAMA,EAEf,IAAK,IACH,OAAOA,EAAI,EAEb,IAAK,KACH,OAAOA,GAAK,EAEd,QACE,OAAOpC,KAGfwT,eACI,MAAO,CAAE,IAA+B,KAAyC,IAAkC,KAA4C,KAAgC,UAAiChK,QAAQlQ,KAAKuZ,KAAO,EAExPY,sBACI,MAAO,CAAEna,MAEboa,aACI,MAAO,CAAEpa,MAEbqa,0BACI,OAAOra,KAAKka,eAAiBla,KAAKsZ,MAAQ,MAIlD,MAAMgB,WAAWlB,GACbpU,YAAY8D,EAAGxF,GACX8B,QAASpF,KAAKua,QAAUzR,EAAG9I,KAAKuZ,GAAKjW,EAAGtD,KAAK+K,EAAI,KAI9C0D,cAAc3F,EAAGxF,GACpB,OAAO,IAAIgX,GAAGxR,EAAGxF,GAErB0W,QAAQlR,GACJ,MAAO,QAAsC9I,KAAKuZ,QAAK,IAAWvZ,KAAKua,QAAQlC,MAAM/U,IAAMA,EAAE0W,QAAQlR,UAAO,IAAW9I,KAAKua,QAAQlC,MAAM/U,GAAKA,EAAE0W,QAAQlR,KAE7JqR,sBACI,OAAO,OAASna,KAAK+K,IAAM/K,KAAK+K,EAAI/K,KAAKua,QAAQC,QAAM,CAAG1R,EAAGxF,IAAMwF,EAAE2R,OAAOnX,EAAE6W,wBAAyB,KACvGna,KAAK+K,EAGTqP,aACI,OAAO9U,OAAOyT,OAAO,GAAI/Y,KAAKua,SAElCF,0BACI,MAAMvR,EAAI9I,KAAKgL,GAAGlC,GAAKA,EAAEoR,iBACzB,OAAO,OAASpR,EAAIA,EAAEwQ,MAAQ,KAKlCtO,EAAElC,GACE,IAAK,MAAMxF,KAAKtD,KAAKma,sBAAuB,GAAIrR,EAAExF,GAAI,OAAOA,EAC7D,OAAO,MAIf,SAASoX,GAAG5R,EAAGxF,GACX,OAAOwF,aAAauQ,GAAK,SAASvQ,EAAGxF,GACjC,OAAOA,aAAa+V,IAAMvQ,EAAEyQ,KAAOjW,EAAEiW,IAAMzQ,EAAEwQ,MAAMpQ,QAAQ5F,EAAEgW,QAAU9B,GAAG1O,EAAEzC,MAAO/C,EAAE+C,OADhE,CAEvByC,EAAGxF,GAAKwF,aAAawR,GAAK,SAASxR,EAAGxF,GACpC,OAAIA,aAAagX,IAAMxR,EAAEyQ,KAAOjW,EAAEiW,IAAMzQ,EAAEyR,QAAQjb,SAAWgE,EAAEiX,QAAQjb,QAC5DwJ,EAAEyR,QAAQC,QAAQ,CAAC1R,EAAGqB,EAAGiD,IAAMtE,GAAK4R,GAAGvQ,EAAG7G,EAAEiX,QAAQnN,MAAM,GAF7C,CAMiCtE,EAAGxF,QAAUoD,IAG9E,MAAM+S,WAAWJ,GACbrU,YAAY8D,EAAGxF,EAAG6G,GACd/E,MAAM0D,EAAGxF,EAAG6G,GAAInK,KAAKoG,IAAMsK,GAAGiK,SAASxQ,EAAEwN,gBAE7CqC,QAAQlR,GACJ,MAAMxF,EAAIoN,GAAG3B,WAAWjG,EAAE1C,IAAKpG,KAAKoG,KACpC,OAAOpG,KAAKia,kBAAkB3W,IAIoB,MAAMwW,WAAWT,GACvErU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,KAAyBxF,GAAItD,KAAK4G,KAAOgU,GAAG,KAAyBtX,GAElF0W,QAAQlR,GACJ,OAAO9I,KAAK4G,KAAKiU,MAAMvX,GAAKA,EAAE4F,QAAQJ,EAAE1C,QAIsB,MAAM2T,WAAWV,GACnFrU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,SAAiCxF,GAAItD,KAAK4G,KAAOgU,GAAG,SAAiCtX,GAElG0W,QAAQlR,GACJ,OAAQ9I,KAAK4G,KAAKiU,MAAMvX,GAAKA,EAAE4F,QAAQJ,EAAE1C,QAIjD,SAASwU,GAAG9R,EAAGxF,GACX,IAAI6G,EACJ,QAAS,QAAUA,EAAI7G,EAAE4U,kBAAe,IAAW/N,OAAI,EAASA,EAAEgO,SAAW,IAAI/N,KAAKtB,GAAK4H,GAAGiK,SAAS7R,EAAE6O,kBAGhD,MAAM+B,WAAWL,GAC1ErU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,iBAAiDxF,GAE9D0W,QAAQlR,GACJ,MAAMxF,EAAIwF,EAAE/C,KAAKuT,MAAMtZ,KAAKsZ,OAC5B,OAAOZ,GAAGpV,IAAM8U,GAAG9U,EAAE4U,WAAYlY,KAAKqG,QAIG,MAAMsT,WAAWN,GAC9DrU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,KAAyBxF,GAEtC0W,QAAQlR,GACJ,MAAMxF,EAAIwF,EAAE/C,KAAKuT,MAAMtZ,KAAKsZ,OAC5B,OAAO,OAAShW,GAAK8U,GAAGpY,KAAKqG,MAAM6R,WAAY5U,IAIF,MAAMsW,WAAWP,GAClErU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,SAAiCxF,GAE9C0W,QAAQlR,GACJ,GAAIsP,GAAGpY,KAAKqG,MAAM6R,WAAY,CAC1B4C,UAAW,eACX,OAAO,EACX,MAAMxX,EAAIwF,EAAE/C,KAAKuT,MAAMtZ,KAAKsZ,OAC5B,OAAO,OAAShW,IAAM8U,GAAGpY,KAAKqG,MAAM6R,WAAY5U,IAIS,MAAMuW,WAAWR,GAC9ErU,YAAY8D,EAAGxF,GACX8B,MAAM0D,EAAG,qBAAyDxF,GAEtE0W,QAAQlR,GACJ,MAAMxF,EAAIwF,EAAE/C,KAAKuT,MAAMtZ,KAAKsZ,OAC5B,SAAUZ,GAAGpV,KAAOA,EAAE4U,WAAWC,SAAW7U,EAAE4U,WAAWC,OAAO0C,MAAM/R,GAAKsP,GAAGpY,KAAKqG,MAAM6R,WAAYpP,MAsBzG,MAAMiS,GACN/V,YAAY8D,EAAGxF,EAAI,OACftD,KAAKsZ,MAAQxQ,EAAG9I,KAAKgb,IAAM1X,GAInC,SAAS2X,GAAGnS,EAAGxF,GACX,OAAOwF,EAAEkS,MAAQ1X,EAAE0X,KAAOlS,EAAEwQ,MAAMpQ,QAAQ5F,EAAEgW,OAsB5C,MAAM4B,GACNlW,YAAY8D,GACR9I,KAAKmb,UAAYrS,EAErB2F,qBAAqB3F,GACjB,OAAO,IAAIoS,GAAGpS,GAElB2F,aACI,OAAO,IAAIyM,GAAG,IAAI/E,GAAG,EAAG,IAE5B1H,aACI,OAAO,IAAIyM,GAAG,IAAI/E,GAAG,aAAc,YAEvCf,UAAUtM,GACN,OAAO9I,KAAKmb,UAAU3E,WAAW1N,EAAEqS,WAEvCjS,QAAQJ,GACJ,OAAO9I,KAAKmb,UAAUjS,QAAQJ,EAAEqS,WAE4CC,iBAE5E,OAAO,IAAMpb,KAAKmb,UAAUvF,QAAU5V,KAAKmb,UAAU/E,YAAc,IAEvE5K,WACI,MAAO,mBAAqBxL,KAAKmb,UAAU3P,WAAa,IAE5D6P,cACI,OAAOrb,KAAKmb,WAsBpB,MAAMG,GACFtW,YAAY8D,EAAGxF,GACXtD,KAAK+O,WAAajG,EAAG9I,KAAKub,KAAOjY,GAAKkY,GAAGC,MAG7CC,OAAO5S,EAAGxF,GACN,OAAO,IAAIgY,GAAGtb,KAAK+O,WAAY/O,KAAKub,KAAKG,OAAO5S,EAAGxF,EAAGtD,KAAK+O,YAAY4M,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,OAG5GC,OAAO/S,GACH,OAAO,IAAIwS,GAAGtb,KAAK+O,WAAY/O,KAAKub,KAAKM,OAAO/S,EAAG9I,KAAK+O,YAAY4M,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,OAGzGnM,IAAI3G,GACA,IAAIxF,EAAItD,KAAKub,KACb,MAAOjY,EAAEoM,WAAa,CAClB,MAAMvF,EAAInK,KAAK+O,WAAWjG,EAAGxF,EAAE8C,KAC/B,GAAI,IAAM+D,EAAG,OAAO7G,EAAE+C,MACtB8D,EAAI,EAAI7G,EAAIA,EAAEwY,KAAO3R,EAAI,IAAM7G,EAAIA,EAAEyY,OAEzC,OAAO,KAIX7L,QAAQpH,GAEJ,IAAIxF,EAAI,EAAG6G,EAAInK,KAAKub,KACpB,MAAOpR,EAAEuF,WAAa,CAClB,MAAMtC,EAAIpN,KAAK+O,WAAWjG,EAAGqB,EAAE/D,KAC/B,GAAI,IAAMgH,EAAG,OAAO9J,EAAI6G,EAAE2R,KAAKE,KAC/B5O,EAAI,EAAIjD,EAAIA,EAAE2R,MAEdxY,GAAK6G,EAAE2R,KAAKE,KAAO,EAAG7R,EAAIA,EAAE4R,OAGxB,OAAQ,EAEpBrM,UACI,OAAO1P,KAAKub,KAAK7L,UAGjBsM,WACA,OAAOhc,KAAKub,KAAKS,KAGrBC,SACI,OAAOjc,KAAKub,KAAKU,SAGrBC,SACI,OAAOlc,KAAKub,KAAKW,SAMrBC,iBAAiBrT,GACb,OAAO9I,KAAKub,KAAKY,iBAAiBrT,GAEtCqG,QAAQrG,GACJ9I,KAAKmc,kBAAgB,CAAG7Y,EAAG6G,KAAOrB,EAAExF,EAAG6G,IAAI,KAE/CqB,WACI,MAAM1C,EAAI,GACV,OAAO9I,KAAKmc,kBAAkB,CAAC7Y,EAAG6G,KAAOrB,EAAExH,KAAK,GAAGgC,KAAK6G,MAAM,KAAO,IAAIrB,EAAEvH,KAAK,SAOpF6a,iBAAiBtT,GACb,OAAO9I,KAAKub,KAAKa,iBAAiBtT,GAGtCuT,cACI,OAAO,IAAIC,GAAGtc,KAAKub,KAAM,KAAMvb,KAAK+O,YAAY,GAEpDwN,gBAAgBzT,GACZ,OAAO,IAAIwT,GAAGtc,KAAKub,KAAMzS,EAAG9I,KAAK+O,YAAY,GAEjDyN,qBACI,OAAO,IAAIF,GAAGtc,KAAKub,KAAM,KAAMvb,KAAK+O,YAAY,GAEpD0N,uBAAuB3T,GACnB,OAAO,IAAIwT,GAAGtc,KAAKub,KAAMzS,EAAG9I,KAAK+O,YAAY,IAMrD,MAAMuN,GACFtX,YAAY8D,EAAGxF,EAAG6G,EAAGiD,GACjBpN,KAAK0c,UAAYtP,EAAGpN,KAAK2c,UAAY,GACrC,IAAI7O,EAAI,EACR,MAAOhF,EAAE4G,WAAa,GAAI5B,EAAIxK,EAAI6G,EAAErB,EAAE1C,IAAK9C,GAAK,EAEhDA,GAAK8J,IAAMU,IAAM,GAAIA,EAAI,EAEzBhF,EAAI9I,KAAK0c,UAAY5T,EAAEgT,KAAOhT,EAAEiT,UAAY,CACxC,GAAI,IAAMjO,EAAG,CAGT9N,KAAK2c,UAAUrb,KAAKwH,GACpB,MAIJ9I,KAAK2c,UAAUrb,KAAKwH,GAAIA,EAAI9I,KAAK0c,UAAY5T,EAAEiT,MAAQjT,EAAEgT,MAGjEc,UACI,IAAI9T,EAAI9I,KAAK2c,UAAUE,MACvB,MAAMvZ,EAAI,CACN8C,IAAK0C,EAAE1C,IACPC,MAAOyC,EAAEzC,OAEb,GAAIrG,KAAK0c,UAAW,IAAK5T,EAAIA,EAAEgT,MAAOhT,EAAE4G,WAAa1P,KAAK2c,UAAUrb,KAAKwH,GAAIA,EAAIA,EAAEiT,WAAY,IAAKjT,EAAIA,EAAEiT,OAAQjT,EAAE4G,WAAa1P,KAAK2c,UAAUrb,KAAKwH,GACrJA,EAAIA,EAAEgT,KACN,OAAOxY,EAEXwZ,UACI,OAAO9c,KAAK2c,UAAUrd,OAAS,EAEnCyd,OACI,GAAI,IAAM/c,KAAK2c,UAAUrd,OAAQ,OAAO,KACxC,MAAMwJ,EAAI9I,KAAK2c,UAAU3c,KAAK2c,UAAUrd,OAAS,GACjD,MAAO,CACH8G,IAAK0C,EAAE1C,IACPC,MAAOyC,EAAEzC,QAOrB,MAAMmV,GACFxW,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACpB9N,KAAKoG,IAAM0C,EAAG9I,KAAKqG,MAAQ/C,EAAGtD,KAAKgd,MAAQ,MAAQ7S,EAAIA,EAAIqR,GAAGyB,IAAKjd,KAAK8b,KAAO,MAAQ1O,EAAIA,EAAIoO,GAAGC,MAClGzb,KAAK+b,MAAQ,MAAQjO,EAAIA,EAAI0N,GAAGC,MAAOzb,KAAKgc,KAAOhc,KAAK8b,KAAKE,KAAO,EAAIhc,KAAK+b,MAAMC,KAGvFL,KAAK7S,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACb,OAAO,IAAI0N,GAAG,MAAQ1S,EAAIA,EAAI9I,KAAKoG,IAAK,MAAQ9C,EAAIA,EAAItD,KAAKqG,MAAO,MAAQ8D,EAAIA,EAAInK,KAAKgd,MAAO,MAAQ5P,EAAIA,EAAIpN,KAAK8b,KAAM,MAAQhO,EAAIA,EAAI9N,KAAK+b,OAEpJrM,UACI,OAAO,EAMXyM,iBAAiBrT,GACb,OAAO9I,KAAK8b,KAAKK,iBAAiBrT,IAAMA,EAAE9I,KAAKoG,IAAKpG,KAAKqG,QAAUrG,KAAK+b,MAAMI,iBAAiBrT,GAMnGsT,iBAAiBtT,GACb,OAAO9I,KAAK+b,MAAMK,iBAAiBtT,IAAMA,EAAE9I,KAAKoG,IAAKpG,KAAKqG,QAAUrG,KAAK8b,KAAKM,iBAAiBtT,GAGnGiH,MACI,OAAO/P,KAAK8b,KAAKpM,UAAY1P,KAAOA,KAAK8b,KAAK/L,MAGlDkM,SACI,OAAOjc,KAAK+P,MAAM3J,IAGtB8V,SACI,OAAOlc,KAAK+b,MAAMrM,UAAY1P,KAAKoG,IAAMpG,KAAK+b,MAAMG,SAGxDR,OAAO5S,EAAGxF,EAAG6G,GACT,IAAIiD,EAAIpN,KACR,MAAM8N,EAAI3D,EAAErB,EAAGsE,EAAEhH,KACjB,OAAOgH,EAAIU,EAAI,EAAIV,EAAEuO,KAAK,KAAM,KAAM,KAAMvO,EAAE0O,KAAKJ,OAAO5S,EAAGxF,EAAG6G,GAAI,MAAQ,IAAM2D,EAAIV,EAAEuO,KAAK,KAAMrY,EAAG,KAAM,KAAM,MAAQ8J,EAAEuO,KAAK,KAAM,KAAM,KAAM,KAAMvO,EAAE2O,MAAML,OAAO5S,EAAGxF,EAAG6G,IAC9KiD,EAAE8P,QAENC,YACI,GAAInd,KAAK8b,KAAKpM,UAAW,OAAO8L,GAAGC,MACnC,IAAI3S,EAAI9I,KACR,OAAO8I,EAAEgT,KAAKsB,SAAWtU,EAAEgT,KAAKA,KAAKsB,UAAYtU,EAAIA,EAAEuU,eAAgBvU,EAAIA,EAAE6S,KAAK,KAAM,KAAM,KAAM7S,EAAEgT,KAAKqB,YAAa,MACxHrU,EAAEoU,QAGNrB,OAAO/S,EAAGxF,GACN,IAAI6G,EAAGiD,EAAIpN,KACX,GAAIsD,EAAEwF,EAAGsE,EAAEhH,KAAO,EAAGgH,EAAE0O,KAAKpM,WAAatC,EAAE0O,KAAKsB,SAAWhQ,EAAE0O,KAAKA,KAAKsB,UAAYhQ,EAAIA,EAAEiQ,eACzFjQ,EAAIA,EAAEuO,KAAK,KAAM,KAAM,KAAMvO,EAAE0O,KAAKD,OAAO/S,EAAGxF,GAAI,UAAY,CAC1D,GAAI8J,EAAE0O,KAAKsB,UAAYhQ,EAAIA,EAAEkQ,eAAgBlQ,EAAE2O,MAAMrM,WAAatC,EAAE2O,MAAMqB,SAAWhQ,EAAE2O,MAAMD,KAAKsB,UAAYhQ,EAAIA,EAAEmQ,gBACpH,IAAMja,EAAEwF,EAAGsE,EAAEhH,KAAM,CACf,GAAIgH,EAAE2O,MAAMrM,UAAW,OAAO8L,GAAGC,MACjCtR,EAAIiD,EAAE2O,MAAMhM,MAAO3C,EAAIA,EAAEuO,KAAKxR,EAAE/D,IAAK+D,EAAE9D,MAAO,KAAM,KAAM+G,EAAE2O,MAAMoB,aAEtE/P,EAAIA,EAAEuO,KAAK,KAAM,KAAM,KAAM,KAAMvO,EAAE2O,MAAMF,OAAO/S,EAAGxF,IAEzD,OAAO8J,EAAE8P,QAEbE,QACI,OAAOpd,KAAKgd,MAGhBE,QACI,IAAIpU,EAAI9I,KACR,OAAO8I,EAAEiT,MAAMqB,UAAYtU,EAAEgT,KAAKsB,UAAYtU,EAAIA,EAAE0U,cAAe1U,EAAEgT,KAAKsB,SAAWtU,EAAEgT,KAAKA,KAAKsB,UAAYtU,EAAIA,EAAEwU,eACnHxU,EAAEgT,KAAKsB,SAAWtU,EAAEiT,MAAMqB,UAAYtU,EAAIA,EAAE2U,aAAc3U,EAE9DuU,cACI,IAAIvU,EAAI9I,KAAKyd,YACb,OAAO3U,EAAEiT,MAAMD,KAAKsB,UAAYtU,EAAIA,EAAE6S,KAAK,KAAM,KAAM,KAAM,KAAM7S,EAAEiT,MAAMuB,eAC3ExU,EAAIA,EAAE0U,aAAc1U,EAAIA,EAAE2U,aAAc3U,EAE5CyU,eACI,IAAIzU,EAAI9I,KAAKyd,YACb,OAAO3U,EAAEgT,KAAKA,KAAKsB,UAAYtU,EAAIA,EAAEwU,cAAexU,EAAIA,EAAE2U,aAAc3U,EAE5E0U,aACI,MAAM1U,EAAI9I,KAAK2b,KAAK,KAAM,KAAMH,GAAGyB,IAAK,KAAMjd,KAAK+b,MAAMD,MACzD,OAAO9b,KAAK+b,MAAMJ,KAAK,KAAM,KAAM3b,KAAKgd,MAAOlU,EAAG,MAEtDwU,cACI,MAAMxU,EAAI9I,KAAK2b,KAAK,KAAM,KAAMH,GAAGyB,IAAKjd,KAAK8b,KAAKC,MAAO,MACzD,OAAO/b,KAAK8b,KAAKH,KAAK,KAAM,KAAM3b,KAAKgd,MAAO,KAAMlU,GAExD2U,YACI,MAAM3U,EAAI9I,KAAK8b,KAAKH,KAAK,KAAM,MAAO3b,KAAK8b,KAAKkB,MAAO,KAAM,MAAO1Z,EAAItD,KAAK+b,MAAMJ,KAAK,KAAM,MAAO3b,KAAK+b,MAAMiB,MAAO,KAAM,MAC7H,OAAOhd,KAAK2b,KAAK,KAAM,MAAO3b,KAAKgd,MAAOlU,EAAGxF,GAGjDoa,gBACI,MAAM5U,EAAI9I,KAAK2d,QACf,OAAO7N,KAAK8N,IAAI,EAAG9U,IAAM9I,KAAKgc,KAAO,EAIzC2B,QACI,GAAI3d,KAAKod,SAAWpd,KAAK8b,KAAKsB,QAAS,MAAM1W,IAC7C,GAAI1G,KAAK+b,MAAMqB,QAAS,MAAM1W,IAC9B,MAAMoC,EAAI9I,KAAK8b,KAAK6B,QACpB,GAAI7U,IAAM9I,KAAK+b,MAAM4B,QAAS,MAAMjX,IACpC,OAAOoC,GAAK9I,KAAKod,QAAU,EAAI,IAOvC5B,GAAGC,MAAQ,KAAMD,GAAGyB,KAAM,EAAIzB,GAAGI,OAAQ,EAGzCJ,GAAGC,MAAQ,IAEX,MACIzW,cACIhF,KAAKgc,KAAO,EAEZ5V,UACA,MAAMM,IAENL,YACA,MAAMK,IAENsW,YACA,MAAMtW,IAENoV,WACA,MAAMpV,IAENqV,YACA,MAAMrV,IAGViV,KAAK7S,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACb,OAAO9N,KAGX0b,OAAO5S,EAAGxF,EAAG6G,GACT,OAAO,IAAIqR,GAAG1S,EAAGxF,GAGrBuY,OAAO/S,EAAGxF,GACN,OAAOtD,KAEX0P,UACI,OAAO,EAEXyM,iBAAiBrT,GACb,OAAO,EAEXsT,iBAAiBtT,GACb,OAAO,EAEXmT,SACI,OAAO,KAEXC,SACI,OAAO,KAEXkB,QACI,OAAO,EAGXM,gBACI,OAAO,EAEXC,QACI,OAAO,IA2Bf,MAAME,GACF7Y,YAAY8D,GACR9I,KAAK+O,WAAajG,EAAG9I,KAAK+F,KAAO,IAAIuV,GAAGtb,KAAK+O,YAEjD+O,IAAIhV,GACA,OAAO,OAAS9I,KAAK+F,KAAK0J,IAAI3G,GAElCiV,QACI,OAAO/d,KAAK+F,KAAKkW,SAErB+B,OACI,OAAOhe,KAAK+F,KAAKmW,SAEjBF,WACA,OAAOhc,KAAK+F,KAAKiW,KAErB9L,QAAQpH,GACJ,OAAO9I,KAAK+F,KAAKmK,QAAQpH,GAEgCqG,QAAQrG,GACjE9I,KAAK+F,KAAKoW,kBAAkB,CAAC7Y,EAAG6G,KAAOrB,EAAExF,IAAI,KAE6B2a,eAAenV,EAAGxF,GAC5F,MAAM6G,EAAInK,KAAK+F,KAAKwW,gBAAgBzT,EAAE,IACtC,KAAMqB,EAAE2S,WAAa,CACjB,MAAM1P,EAAIjD,EAAEyS,UACZ,GAAI5c,KAAK+O,WAAW3B,EAAEhH,IAAK0C,EAAE,KAAO,EAAG,OACvCxF,EAAE8J,EAAEhH,MAKL8X,aAAapV,EAAGxF,GACnB,IAAI6G,EACJ,IAAKA,OAAI,IAAW7G,EAAItD,KAAK+F,KAAKwW,gBAAgBjZ,GAAKtD,KAAK+F,KAAKsW,cAAelS,EAAE2S,WAC9E,IAAKhU,EAAEqB,EAAEyS,UAAUxW,KAAM,OAGkC+X,kBAAkBrV,GACjF,MAAMxF,EAAItD,KAAK+F,KAAKwW,gBAAgBzT,GACpC,OAAOxF,EAAEwZ,UAAYxZ,EAAEsZ,UAAUxW,IAAM,KAE3CiW,cACI,OAAO,IAAI+B,GAAGpe,KAAK+F,KAAKsW,eAE5BE,gBAAgBzT,GACZ,OAAO,IAAIsV,GAAGpe,KAAK+F,KAAKwW,gBAAgBzT,IAEJuV,IAAIvV,GACxC,OAAO9I,KAAK2b,KAAK3b,KAAK+F,KAAK8V,OAAO/S,GAAG4S,OAAO5S,GAAG,IAEtBwV,OAAOxV,GAChC,OAAO9I,KAAK8d,IAAIhV,GAAK9I,KAAK2b,KAAK3b,KAAK+F,KAAK8V,OAAO/S,IAAM9I,KAE1D0P,UACI,OAAO1P,KAAK+F,KAAK2J,UAErB6O,UAAUzV,GACN,IAAIxF,EAAItD,KAEA,OAAOsD,EAAE0Y,KAAOlT,EAAEkT,OAAS1Y,EAAIwF,EAAGA,EAAI9I,MAAO8I,EAAEqG,SAASrG,IAC5DxF,EAAIA,EAAE+a,IAAIvV,MACTxF,EAET4F,QAAQJ,GACJ,KAAMA,aAAa+U,IAAK,OAAO,EAC/B,GAAI7d,KAAKgc,OAASlT,EAAEkT,KAAM,OAAO,EACjC,MAAM1Y,EAAItD,KAAK+F,KAAKsW,cAAelS,EAAIrB,EAAE/C,KAAKsW,cAC9C,KAAM/Y,EAAEwZ,WAAa,CACjB,MAAMhU,EAAIxF,EAAEsZ,UAAUxW,IAAKgH,EAAIjD,EAAEyS,UAAUxW,IAC3C,GAAI,IAAMpG,KAAK+O,WAAWjG,EAAGsE,GAAI,OAAO,EAE5C,OAAO,EAEXyC,UACI,MAAM/G,EAAI,GACV,OAAO9I,KAAKmP,SAAS7L,IACjBwF,EAAExH,KAAKgC,MACNwF,EAET0C,WACI,MAAM1C,EAAI,GACV,OAAO9I,KAAKmP,SAAS7L,GAAKwF,EAAExH,KAAKgC,KAAM,aAAewF,EAAE0C,WAAa,IAEzEmQ,KAAK7S,GACD,MAAMxF,EAAI,IAAIua,GAAG7d,KAAK+O,YACtB,OAAOzL,EAAEyC,KAAO+C,EAAGxF,GAI3B,MAAM8a,GACFpZ,YAAY8D,GACR9I,KAAKwe,KAAO1V,EAEhB8T,UACI,OAAO5c,KAAKwe,KAAK5B,UAAUxW,IAE/B0W,UACI,OAAO9c,KAAKwe,KAAK1B,WA6BrB,MAAM2B,GACNzZ,YAAY8D,GACR9I,KAAK8W,OAAShO,EAGdA,EAAE0P,KAAKlI,GAAGvB,YAEdN,eACI,OAAO,IAAIgQ,GAAG,IAKXF,UAAUzV,GACb,IAAIxF,EAAI,IAAIua,GAAGvN,GAAGvB,YAClB,IAAK,MAAMjG,KAAK9I,KAAK8W,OAAQxT,EAAIA,EAAE+a,IAAIvV,GACvC,IAAK,MAAMqB,KAAKrB,EAAGxF,EAAIA,EAAE+a,IAAIlU,GAC7B,OAAO,IAAIsU,GAAGnb,EAAEuM,WAOb6O,OAAO5V,GACV,IAAK,MAAMxF,KAAKtD,KAAK8W,OAAQ,GAAIxT,EAAEqM,WAAW7G,GAAI,OAAO,EACzD,OAAO,EAEXI,QAAQJ,GACJ,OAAOuL,GAAGrU,KAAK8W,OAAQhO,EAAEgO,QAAM,CAAIhO,EAAGxF,IAAMwF,EAAEI,QAAQ5F,MAuB1D,MAAMqb,GACN3Z,YAAY8D,GACR9I,KAAKqG,MAAQyC,EAEjB2F,eACI,OAAO,IAAIkQ,GAAG,CACV9H,SAAU,KAQXyC,MAAMxQ,GACT,GAAIA,EAAE4G,UAAW,OAAO1P,KAAKqG,MAC7B,CACI,IAAI/C,EAAItD,KAAKqG,MACb,IAAK,IAAI8D,EAAI,EAAGA,EAAIrB,EAAExJ,OAAS,IAAK6K,EAAG,GAAI7G,GAAKA,EAAEuT,SAASC,QAAU,IAAIhO,EAAE2G,IAAItF,KAC9E0O,GAAGvV,GAAI,OAAO,KACf,OAAOA,GAAKA,EAAEuT,SAASC,QAAU,IAAIhO,EAAE0G,eAAgBlM,GAAK,MAQ7D6I,IAAIrD,EAAGxF,GACVtD,KAAK4e,aAAa9V,EAAEwG,WAAWxG,EAAE0G,eAAiBsJ,GAAGxV,GAMlDub,OAAO/V,GACV,IAAIxF,EAAIgN,GAAGO,YAAa1G,EAAI,GAAIiD,EAAI,GACpCtE,EAAEqG,SAAO,CAAGrG,EAAGgF,KACX,IAAKxK,EAAEsM,oBAAoB9B,GAAI,CAE3B,MAAMhF,EAAI9I,KAAK4e,aAAatb,GAC5BtD,KAAK8e,aAAahW,EAAGqB,EAAGiD,GAAIjD,EAAI,GAAIiD,EAAI,GAAI9J,EAAIwK,EAAEwB,UAEtDxG,EAAIqB,EAAE2D,EAAE0B,eAAiBsJ,GAAGhQ,GAAKsE,EAAE9L,KAAKwM,EAAE0B,kBAE9C,MAAM1B,EAAI9N,KAAK4e,aAAatb,GAC5BtD,KAAK8e,aAAahR,EAAG3D,EAAGiD,GAOrBkR,OAAOxV,GACV,MAAMxF,EAAItD,KAAKsZ,MAAMxQ,EAAEwG,WACvBuJ,GAAGvV,IAAMA,EAAEuT,SAASC,eAAiBxT,EAAEuT,SAASC,OAAOhO,EAAE0G,eAE7DtG,QAAQJ,GACJ,OAAO0O,GAAGxX,KAAKqG,MAAOyC,EAAEzC,OAKrBuY,aAAa9V,GAChB,IAAIxF,EAAItD,KAAKqG,MACb/C,EAAEuT,SAASC,SAAWxT,EAAEuT,SAAW,CAC/BC,OAAQ,KAEZ,IAAK,IAAI3M,EAAI,EAAGA,EAAIrB,EAAExJ,SAAU6K,EAAG,CAC/B,IAAIiD,EAAI9J,EAAEuT,SAASC,OAAOhO,EAAE2G,IAAItF,IAChC0O,GAAGzL,IAAMA,EAAEyJ,SAASC,SAAW1J,EAAI,CAC/ByJ,SAAU,CACNC,OAAQ,KAEbxT,EAAEuT,SAASC,OAAOhO,EAAE2G,IAAItF,IAAMiD,GAAI9J,EAAI8J,EAE7C,OAAO9J,EAAEuT,SAASC,OAKfgI,aAAahW,EAAGxF,EAAG6G,GACtBuK,GAAGpR,GAAI,CAACA,EAAG6G,IAAMrB,EAAExF,GAAK6G,IACxB,IAAK,MAAM7G,KAAK6G,SAAUrB,EAAExF,GAEhCyb,QACI,OAAO,IAAIJ,GAAG7F,GAAG9Y,KAAKqG,SA6B1B,MAAM2Y,GACNha,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,EAAGgO,GAC1BrN,KAAKoG,IAAM0C,EAAG9I,KAAKif,aAAe3b,EAAGtD,KAAKkf,QAAU/U,EAAGnK,KAAKmf,SAAW/R,EAAGpN,KAAKof,WAAatR,EAC5F9N,KAAK+F,KAAO1G,EAAGW,KAAKqf,cAAgBhS,EAKjCoB,0BAA0B3F,GAC7B,OAAO,IAAIkW,GAAGlW,EAAG,EACHoS,GAAGnL,MACFmL,GAAGnL,MACDmL,GAAGnL,MAAO4O,GAAGW,QAAS,GAKpC7Q,wBAAwB3F,EAAGxF,EAAG6G,EAAGiD,GACpC,OAAO,IAAI4R,GAAGlW,EAAG,EACHxF,EACC4X,GAAGnL,MACD5F,EAAGiD,EAAG,GAEuDqB,qBAAqB3F,EAAGxF,GACtG,OAAO,IAAI0b,GAAGlW,EAAG,EACHxF,EACC4X,GAAGnL,MACDmL,GAAGnL,MAAO4O,GAAGW,QAAS,GAMpC7Q,0BAA0B3F,EAAGxF,GAChC,OAAO,IAAI0b,GAAGlW,EAAG,EACHxF,EACC4X,GAAGnL,MACDmL,GAAGnL,MAAO4O,GAAGW,QAAS,GAKpCC,uBAAuBzW,EAAGxF,GAM7B,OAAQtD,KAAKof,WAAWlW,QAAQgS,GAAGnL,QAAU,IAAqC/P,KAAKif,cAAgB,IAAiCjf,KAAKif,eAAiBjf,KAAKof,WAAatW,GAChL9I,KAAKkf,QAAUpW,EAAG9I,KAAKif,aAAe,EAAsCjf,KAAK+F,KAAOzC,EACxFtD,KAAKqf,cAAgB,EAA+Brf,KAKjDwf,oBAAoB1W,GACvB,OAAO9I,KAAKkf,QAAUpW,EAAG9I,KAAKif,aAAe,EAC7Cjf,KAAK+F,KAAO4Y,GAAGW,QAAStf,KAAKqf,cAAgB,EAA+Brf,KAMzEyf,yBAAyB3W,GAC5B,OAAO9I,KAAKkf,QAAUpW,EAAG9I,KAAKif,aAAe,EAC7Cjf,KAAK+F,KAAO4Y,GAAGW,QAAStf,KAAKqf,cAAgB,EAC7Crf,KAEJ0f,2BACI,OAAO1f,KAAKqf,cAAgB,EAAgDrf,KAEhF2f,uBACI,OAAO3f,KAAKqf,cAAgB,EAA4Crf,KAAKkf,QAAUhE,GAAGnL,MAC1F/P,KAEJ4f,YAAY9W,GACR,OAAO9I,KAAKmf,SAAWrW,EAAG9I,KAE1B6f,wBACA,OAAO,IAA8C7f,KAAKqf,cAE1DS,4BACA,OAAO,IAAkD9f,KAAKqf,cAE9DU,uBACA,OAAO/f,KAAK6f,mBAAqB7f,KAAK8f,sBAE1CE,kBACI,OAAO,IAAiChgB,KAAKif,aAEjDgB,kBACI,OAAO,IAAwCjgB,KAAKif,aAExDiB,eACI,OAAO,IAAqClgB,KAAKif,aAErDkB,oBACI,OAAO,IAA0CngB,KAAKif,aAE1D/V,QAAQJ,GACJ,OAAOA,aAAakW,IAAMhf,KAAKoG,IAAI8C,QAAQJ,EAAE1C,MAAQpG,KAAKkf,QAAQhW,QAAQJ,EAAEoW,UAAYlf,KAAKif,eAAiBnW,EAAEmW,cAAgBjf,KAAKqf,gBAAkBvW,EAAEuW,eAAiBrf,KAAK+F,KAAKmD,QAAQJ,EAAE/C,MAElMqa,cACI,OAAO,IAAIpB,GAAGhf,KAAKoG,IAAKpG,KAAKif,aAAcjf,KAAKkf,QAASlf,KAAKmf,SAAUnf,KAAKof,WAAYpf,KAAK+F,KAAKgZ,QAAS/e,KAAKqf,eAErH7T,WACI,MAAO,YAAYxL,KAAKoG,QAAQpG,KAAKkf,YAAYvb,KAAK4G,UAAUvK,KAAK+F,KAAKM,wBAAwBrG,KAAKof,gCAAgCpf,KAAKif,mCAAmCjf,KAAKqf,mBAqB5L,MAAMgB,GACFrb,YAAY8D,EAAGxF,EAAI,KAAM6G,EAAI,GAAIiD,EAAI,GAAIU,EAAI,KAAMzO,EAAI,KAAMgO,EAAI,MAC7DrN,KAAK2Q,KAAO7H,EAAG9I,KAAK8Q,gBAAkBxN,EAAGtD,KAAKsgB,QAAUnW,EAAGnK,KAAKua,QAAUnN,EAAGpN,KAAKkP,MAAQpB,EAC1F9N,KAAKugB,QAAUlhB,EAAGW,KAAKwgB,MAAQnT,EAAGrN,KAAKkL,EAAI,MAW/C,SAASuV,GAAG3X,EAAGxF,EAAI,KAAM6G,EAAI,GAAIiD,EAAI,GAAIU,EAAI,KAAMzO,EAAI,KAAMgO,EAAI,MACjE,OAAO,IAAIgT,GAAGvX,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,EAAGgO,GA0BpC,MAAMqT,GAKF1b,YAAY8D,EAAGxF,EAAI,KAAM6G,EAAI,GAAIiD,EAAI,GAAIU,EAAI,KAAMzO,EAAI,IAA4BgO,EAAI,KAAMpL,EAAI,MAC7FjC,KAAK2Q,KAAO7H,EAAG9I,KAAK8Q,gBAAkBxN,EAAGtD,KAAK2gB,gBAAkBxW,EAAGnK,KAAKua,QAAUnN,EAClFpN,KAAKkP,MAAQpB,EAAG9N,KAAK4gB,UAAYvhB,EAAGW,KAAKugB,QAAUlT,EAAGrN,KAAKwgB,MAAQve,EAAGjC,KAAKmL,EAAI,KAE/EnL,KAAKoL,EAAI,KAAMpL,KAAKugB,QAASvgB,KAAKwgB,OAIkC,SAASK,GAAG/X,GACpF,OAAOA,EAAE6X,gBAAgBrhB,OAAS,EAAIwJ,EAAE6X,gBAAgB,GAAGrH,MAAQ,KAGvE,SAASwH,GAAGhY,GACR,IAAK,MAAMxF,KAAKwF,EAAEyR,QAAS,CACvB,MAAMzR,EAAIxF,EAAE+W,0BACZ,GAAI,OAASvR,EAAG,OAAOA,EAE3B,OAAO,KAWX,SAASiY,GAAGjY,GACR,OAAO,OAASA,EAAEgI,gBAOlB,SAASkQ,GAAGlY,GACZ,MAAMxF,EAAImH,EAAE3B,GACZ,GAAI,OAASxF,EAAE6H,EAAG,CACd7H,EAAE6H,EAAI,GACN,MAAMrC,EAAIgY,GAAGxd,GAAI6G,EAAI0W,GAAGvd,GACxB,GAAI,OAASwF,GAAK,OAASqB,EAI3BrB,EAAE2H,cAAgBnN,EAAE6H,EAAE7J,KAAK,IAAIyZ,GAAGjS,IAAKxF,EAAE6H,EAAE7J,KAAK,IAAIyZ,GAAGzK,GAAG2Q,WAAY,YAAwC,CAC1G,IAAInY,GAAI,EACR,IAAK,MAAMqB,KAAK7G,EAAEqd,gBAAiBrd,EAAE6H,EAAE7J,KAAK6I,GAAIA,EAAEmP,MAAM7I,eAAiB3H,GAAI,GAC7E,IAAKA,EAAG,CAGJ,MAAMA,EAAIxF,EAAEqd,gBAAgBrhB,OAAS,EAAIgE,EAAEqd,gBAAgBrd,EAAEqd,gBAAgBrhB,OAAS,GAAG0b,IAAM,MAC/F1X,EAAE6H,EAAE7J,KAAK,IAAIyZ,GAAGzK,GAAG2Q,WAAYnY,MAI3C,OAAOxF,EAAE6H,EAKT,SAAS+V,GAAGpY,GACZ,MAAMxF,EAAImH,EAAE3B,GACZ,IAAKxF,EAAE8H,EAAG,GAAI,MAA8B9H,EAAEsd,UAAWtd,EAAE8H,EAAIqV,GAAGnd,EAAEqN,KAAMrN,EAAEwN,gBAAiBkQ,GAAG1d,GAAIA,EAAEiX,QAASjX,EAAE4L,MAAO5L,EAAEid,QAASjd,EAAEkd,WAAa,CAE9I,MAAM1X,EAAI,GACV,IAAK,MAAMqB,KAAK6W,GAAG1d,GAAI,CACnB,MAAMA,EAAI,SAAsC6G,EAAE6Q,IAAM,MAAkC,OAC1FlS,EAAExH,KAAK,IAAIyZ,GAAG5Q,EAAEmP,MAAOhW,IAGnB,MAAM6G,EAAI7G,EAAEkd,MAAQ,IAAIxH,GAAG1V,EAAEkd,MAAMvH,SAAU3V,EAAEkd,MAAMtH,WAAa,KAAM9L,EAAI9J,EAAEid,QAAU,IAAIvH,GAAG1V,EAAEid,QAAQtH,SAAU3V,EAAEid,QAAQrH,WAAa,KAElJ5V,EAAE8H,EAAIqV,GAAGnd,EAAEqN,KAAMrN,EAAEwN,gBAAiBhI,EAAGxF,EAAEiX,QAASjX,EAAE4L,MAAO/E,EAAGiD,GAElE,OAAO9J,EAAE8H,EAGb,SAAS+V,GAAGrY,EAAGxF,GACXA,EAAE+W,0BAA2ByG,GAAGhY,GAChC,MAAMqB,EAAIrB,EAAEyR,QAAQE,OAAO,CAAEnX,IAC7B,OAAO,IAAIod,GAAG5X,EAAE6H,KAAM7H,EAAEgI,gBAAiBhI,EAAE6X,gBAAgB1R,QAAS9E,EAAGrB,EAAEoG,MAAOpG,EAAE8X,UAAW9X,EAAEyX,QAASzX,EAAE0X,OAuC9G,SAASY,GAAGtY,EAAGxF,GACX,OAAO,SAASwF,GACZ,MAAO,iBAAmBA,GAAK6M,OAAO0L,UAAUvY,KAAO4I,GAAG5I,IAAMA,GAAK6M,OAAO2L,kBAAoBxY,GAAK6M,OAAO4L,iBADzG,CAELje,GAIF,SAASwF,GACL,MAAO,CACHiP,aAAc,GAAKjP,GAF3B,CAIExF,GAAK,SAASwF,EAAGxF,GACf,GAAIwF,EAAEhC,EAAG,CACL,GAAImR,MAAM3U,GAAI,MAAO,CACjB0U,YAAa,OAEjB,GAAI1U,IAAM,EAAA,EAAO,MAAO,CACpB0U,YAAa,YAEjB,GAAI1U,KAAM,EAAA,EAAQ,MAAO,CACrB0U,YAAa,aAGrB,MAAO,CACHA,YAAatG,GAAGpO,GAAK,KAAOA,GAb7B,CAeLwF,EAAGxF,GAmBiD,MAAMke,GAC5Dxc,cAGIhF,KAAKmG,OAAI,GAI4C,MAAMsb,WAAWD,IAEtB,MAAME,WAAWF,GACrExc,YAAY8D,GACR1D,QAASpF,KAAK2hB,SAAW7Y,GAIwB,MAAM8Y,WAAWJ,GACtExc,YAAY8D,GACR1D,QAASpF,KAAK2hB,SAAW7Y,GAS7B,MAAM+Y,WAAWL,GACjBxc,YAAY8D,EAAGxF,GACX8B,QAASpF,KAAKqL,EAAIvC,EAAG9I,KAAKsL,EAAIhI,GAoB6B,MAAMwe,GACrE9c,YAAY8D,EAAGxF,GACXtD,KAAKsZ,MAAQxQ,EAAG9I,KAAK+hB,UAAYze,GAQrC,MAAM0e,GACNhd,YAAY8D,EAAGxF,GACXtD,KAAKiiB,WAAanZ,EAAG9I,KAAKkiB,OAAS5e,EAEKmL,cACxC,OAAO,IAAIuT,GAE2CvT,cAAc3F,GACpE,OAAO,IAAIkZ,QAAG,EAAQlZ,GAEoD2F,kBAAkB3F,GAC5F,OAAO,IAAIkZ,GAAGlZ,GAEwCqZ,aACtD,YAAO,IAAWniB,KAAKiiB,iBAAc,IAAWjiB,KAAKkiB,OAEzDhZ,QAAQJ,GACJ,OAAO9I,KAAKkiB,SAAWpZ,EAAEoZ,SAAWliB,KAAKiiB,aAAenZ,EAAEmZ,YAAcjiB,KAAKiiB,WAAW/Y,QAAQJ,EAAEmZ,aAAenZ,EAAEmZ,aA+CvH,MAAMG,IAKN,MAAMC,WAAWD,GACjBpd,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAI,IACrBhI,QAASpF,KAAKoG,IAAM0C,EAAG9I,KAAKqG,MAAQ/C,EAAGtD,KAAKsiB,aAAenY,EAAGnK,KAAKuiB,gBAAkBnV,EACrFpN,KAAKgM,KAAO,EAEhBwW,eACI,OAAO,MAgBX,MAAMC,WAAWL,GACjBpd,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAI,IACxB1I,QAASpF,KAAKoG,IAAM0C,EAAG9I,KAAK+F,KAAOzC,EAAGtD,KAAK0iB,UAAYvY,EAAGnK,KAAKsiB,aAAelV,EAC9EpN,KAAKuiB,gBAAkBzU,EAAG9N,KAAKgM,KAAO,EAE1CwW,eACI,OAAOxiB,KAAK0iB,WAI0C,MAAMC,WAAWP,GAC3Epd,YAAY8D,EAAGxF,GACX8B,QAASpF,KAAKoG,IAAM0C,EAAG9I,KAAKsiB,aAAehf,EAAGtD,KAAKgM,KAAO,EAC1DhM,KAAKuiB,gBAAkB,GAE3BC,eACI,OAAO,MAUX,MAAMI,WAAWR,GACjBpd,YAAY8D,EAAGxF,GACX8B,QAASpF,KAAKoG,IAAM0C,EAAG9I,KAAKsiB,aAAehf,EAAGtD,KAAKgM,KAAO,EAC1DhM,KAAKuiB,gBAAkB,GAE3BC,eACI,OAAO,MAmBX,MAAMK,GACI,CACNC,IAAK,YACLC,KAAM,cAGRC,GACQ,CACN,IAAK,YACL,KAAM,qBACN,IAAK,eACL,KAAM,wBACN,KAAM,QACN,KAAM,YACN,iBAAkB,iBAClBC,GAAI,KACJ,SAAU,SACV,qBAAsB,sBAGxBC,GACQ,CACNC,IAAK,MACLC,GAAI,MAmBZ,MAAMC,GACFre,YAAY8D,EAAGxF,GACXtD,KAAK+N,WAAajF,EAAG9I,KAAK8G,EAAIxD,GAetC,SAASggB,GAAGxa,EAAGxF,GACX,OAAIwF,EAAEhC,EACK,GAAG,IAAI4B,KAAK,IAAMpF,EAAEsS,SAASjN,cAAchG,QAAQ,QAAS,IAAIA,QAAQ,IAAK,QAAQ,YAAcW,EAAE8S,aAAanH,OAAO,MAE7H,CACH2G,QAAS,GAAKtS,EAAEsS,QAChBE,MAAOxS,EAAE8S,aASjB,SAASmN,GAAGza,EAAGxF,GACX,OAAOwF,EAAEhC,EAAIxD,EAAE2R,WAAa3R,EAAE4R,eAGlC,SAASsO,GAAG1a,EAAGxF,GACX,OAAOggB,GAAGxa,EAAGxF,EAAE+X,eAGnB,SAASoI,GAAG3a,GACR,OAAO0B,IAAI1B,GAAIoS,GAAGwI,cAAc,SAAS5a,GACrC,MAAMxF,EAAIkS,GAAG1M,GACb,OAAO,IAAIqN,GAAG7S,EAAEsS,QAAStS,EAAEwS,OAFC,CAG9BhN,IAGN,SAAS6a,GAAG7a,EAAGxF,GACX,OAAO,SAASwF,GACZ,OAAO,IAAIkH,GAAG,CAAE,WAAYlH,EAAEyF,UAAW,YAAazF,EAAE0F,WADrD,CAEL1F,GAAGkG,MAAM,aAAaA,MAAM1L,GAAG2M,kBAGrC,SAAS2T,GAAG9a,EAAGxF,GACX,OAAOqgB,GAAG7a,EAAEiF,WAAYzK,EAAEqN,MAG9B,SAASkT,GAAG/a,EAAGxF,GACX,MAAM6G,EAAI,SAASrB,GACf,MAAMxF,EAAI0M,GAAGY,WAAW9H,GACxB,OAAO0B,EAAEsZ,GAAGxgB,IAAKA,EAFX,CAGRA,GACF,GAAI6G,EAAEsF,IAAI,KAAO3G,EAAEiF,WAAWQ,UAAW,MAAM,IAAIhD,EAAEX,EAAG,oDAAsDT,EAAEsF,IAAI,GAAK,OAAS3G,EAAEiF,WAAWQ,WAC/I,GAAIpE,EAAEsF,IAAI,KAAO3G,EAAEiF,WAAWS,SAAU,MAAM,IAAIjD,EAAEX,EAAG,qDAAuDT,EAAEsF,IAAI,GAAK,OAAS3G,EAAEiF,WAAWS,UAC/I,OAAO,IAAIkC,IAAIlG,GAAG4C,EAAIjD,GAAG7K,OAAS,GAAK,cAAgB8N,EAAEqC,IAAI,IAAKrC,EAAEiC,SAAS,KAC7E,IAAIjC,EAGR,SAAS2W,GAAGjb,EAAGxF,GACX,OAAOqgB,GAAG7a,EAAEiF,WAAYzK,GAG5B,SAAS0gB,GAAGlb,GACR,OAAO,IAAIkH,GAAG,CAAE,WAAYlH,EAAEiF,WAAWQ,UAAW,YAAazF,EAAEiF,WAAWS,WAAYyB,kBAG9F,SAASgU,GAAGnb,EAAGxF,EAAG6G,GACd,MAAO,CACH9E,KAAMue,GAAG9a,EAAGxF,GACZwT,OAAQ3M,EAAE9D,MAAMwQ,SAASC,QAmEjC,SAASoN,GAAGpb,EAAGxF,GAEX,MAAM6G,EAAI,CACNga,gBAAiB,IAClB/W,EAAI9J,EAAEqN,KACT,OAASrN,EAAEwN,iBAAmB3G,EAAEia,OAASL,GAAGjb,EAAGsE,GAAIjD,EAAEga,gBAAgBE,KAAO,CAAE,CAC1EC,aAAchhB,EAAEwN,gBAChByT,gBAAgB,MACZpa,EAAEia,OAASL,GAAGjb,EAAGsE,EAAEkC,WAAYnF,EAAEga,gBAAgBE,KAAO,CAAE,CAC9DC,aAAclX,EAAEoC,iBAEpB,MAAM1B,EAAI,SAAShF,GACf,GAAI,IAAMA,EAAExJ,OACZ,OAAOklB,GAAGlK,GAAG3U,OAAOmD,EAAG,QAFjB,CAGRxF,EAAEiX,SACJzM,IAAM3D,EAAEga,gBAAgBM,MAAQ3W,GAChC,MAAMzO,EAAI,SAASyJ,GACf,GAAI,IAAMA,EAAExJ,OACZ,OAAOwJ,EAAEsB,KAAKtB,GAEd,SAASA,GACL,MAAO,CACHwQ,MAAOoL,GAAG5b,EAAEwQ,OACZqL,UAAWC,GAAG9b,EAAEkS,MAHxB,CAOClS,KAXK,CAYRxF,EAAEgd,SACJjhB,IAAM8K,EAAEga,gBAAgB7D,QAAUjhB,GAClC,MAAMgO,EAAI,SAASvE,EAAGxF,GAClB,OAAOwF,EAAEhC,GAAK2K,GAAGnO,GAAKA,EAAI,CACtB+C,MAAO/C,GAFL,CAIRwF,EAAGxF,EAAE4L,OACP,IAAIjN,EACJ,OAAO,OAASoL,IAAMlD,EAAEga,gBAAgBjV,MAAQ7B,GAAI/J,EAAEid,UAAYpW,EAAEga,gBAAgB5D,QAAU,CAC1FsE,QAAS5iB,EAAIqB,EAAEid,SAASrH,UACxBf,OAAQlW,EAAEgX,WACV3V,EAAEkd,QAAUrW,EAAEga,gBAAgB3D,MAAQ,SAAS1X,GAC/C,MAAO,CACH+b,QAAS/b,EAAEoQ,UACXf,OAAQrP,EAAEmQ,UAHwB,CAOzC3V,EAAEkd,QAASrW,EAGhB,SAASya,GAAG9b,GACR,OAAO+Z,GAAG/Z,GAId,SAASgc,GAAGhc,GACR,OAAOka,GAAGla,GAGd,SAASic,GAAGjc,GACR,OAAOoa,GAAGpa,GAGd,SAAS4b,GAAG5b,GACR,MAAO,CACHkc,UAAWlc,EAAEmH,mBAIrB,SAASuU,GAAG1b,GACR,OAAOA,aAAauQ,GAAK,SAASvQ,GAC9B,GAAI,OAA8BA,EAAEyQ,GAAI,CACpC,GAAIX,GAAG9P,EAAEzC,OAAQ,MAAO,CACpB4e,YAAa,CACT3L,MAAOoL,GAAG5b,EAAEwQ,OACZC,GAAI,WAGZ,GAAIZ,GAAG7P,EAAEzC,OAAQ,MAAO,CACpB4e,YAAa,CACT3L,MAAOoL,GAAG5b,EAAEwQ,OACZC,GAAI,iBAGT,GAAI,OAAkCzQ,EAAEyQ,GAAI,CAC/C,GAAIX,GAAG9P,EAAEzC,OAAQ,MAAO,CACpB4e,YAAa,CACT3L,MAAOoL,GAAG5b,EAAEwQ,OACZC,GAAI,eAGZ,GAAIZ,GAAG7P,EAAEzC,OAAQ,MAAO,CACpB4e,YAAa,CACT3L,MAAOoL,GAAG5b,EAAEwQ,OACZC,GAAI,gBAIhB,MAAO,CACH2L,YAAa,CACT5L,MAAOoL,GAAG5b,EAAEwQ,OACZC,GAAIuL,GAAGhc,EAAEyQ,IACTlT,MAAOyC,EAAEzC,QAhCI,CAmCvByC,GAAKA,aAAawR,GAAK,SAASxR,GAC9B,MAAMxF,EAAIwF,EAAEsR,aAAahQ,KAAKtB,GAAK0b,GAAG1b,KACtC,OAAI,IAAMxF,EAAEhE,OAAegE,EAAE,GACtB,CACH6hB,gBAAiB,CACb5L,GAAIwL,GAAGjc,EAAEyQ,IACTgB,QAASjX,IANI,CASvBwF,GAAKpC,IAGX,SAAS0e,GAAGtc,GACR,MAAMxF,EAAI,GACV,OAAOwF,EAAEgO,OAAO3H,SAASrG,GAAKxF,EAAEhC,KAAKwH,EAAEmH,qBAAsB,CACzDoV,WAAY/hB,GAIpB,SAASwgB,GAAGhb,GAER,OAAOA,EAAExJ,QAAU,GAAK,aAAewJ,EAAE2G,IAAI,IAAM,cAAgB3G,EAAE2G,IAAI,GAkBzE,SAAS6V,GAAGxc,GACZ,OAAO,IAAIua,GAAGva,GAAwB,GA4B1C,MAAMyc,GACFvgB,YAIA8D,EAIAxF,EAMA6G,EAAI,IAIEiD,EAAI,IAKJU,EAAI,KACN9N,KAAKwlB,EAAI1c,EAAG9I,KAAKylB,QAAUniB,EAAGtD,KAAKuL,EAAIpB,EAAGnK,KAAKyL,EAAI2B,EAAGpN,KAAK8L,EAAIgC,EAAG9N,KAAK6M,EAAI,EAAG7M,KAAKmN,EAAI,KAEvFnN,KAAKyN,EAAI/E,KAAKD,MAAOzI,KAAK0lB,QAQvBA,QACH1lB,KAAK6M,EAAI,EAKNa,IACH1N,KAAK6M,EAAI7M,KAAK8L,EAMX6B,EAAE7E,GAEL9I,KAAK2lB,SAGL,MAAMriB,EAAIwM,KAAKmE,MAAMjU,KAAK6M,EAAI7M,KAAK6N,KAAM1D,EAAI2F,KAAK8V,IAAI,EAAGld,KAAKD,MAAQzI,KAAKyN,GAAIL,EAAI0C,KAAK8V,IAAI,EAAGtiB,EAAI6G,GAE3FiD,EAAI,GAAKlD,EAAE,qBAAsB,mBAAmBkD,qBAAqBpN,KAAK6M,4BAA4BvJ,uBAAuB6G,aACzInK,KAAKmN,EAAInN,KAAKwlB,EAAEK,kBAAkB7lB,KAAKylB,QAASrY,GAAI,KAAOpN,KAAKyN,EAAI/E,KAAKD,MACzEK,OAGA9I,KAAK6M,GAAK7M,KAAKyL,EAAGzL,KAAK6M,EAAI7M,KAAKuL,IAAMvL,KAAK6M,EAAI7M,KAAKuL,GAAIvL,KAAK6M,EAAI7M,KAAK8L,IAAM9L,KAAK6M,EAAI7M,KAAK8L,GAE9FwC,IACI,OAAStO,KAAKmN,IAAMnN,KAAKmN,EAAE2Y,YAAa9lB,KAAKmN,EAAI,MAErDwY,SACI,OAAS3lB,KAAKmN,IAAMnN,KAAKmN,EAAEwY,SAAU3lB,KAAKmN,EAAI,MAEgCU,IAC9E,OAAQiC,KAAKoE,SAAW,IAAMlU,KAAK6M,GA6B3C,MAAMkZ,WAAW,QACb/gB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,GACjBhI,QAASpF,KAAKgmB,gBAAkBld,EAAG9I,KAAKimB,oBAAsB3iB,EAAGtD,KAAKkmB,WAAa/b,EACnFnK,KAAKqL,EAAI+B,EAAGpN,KAAK2O,GAAI,EAEzBqB,KACI,GAAIhQ,KAAK2O,EAAG,MAAM,IAAIpD,EAAEL,EAAG,2CAEmCT,EAAE3B,EAAGxF,EAAG6G,GACtE,OAAOnK,KAAKgQ,KAAMrE,QAAQwa,IAAI,CAAEnmB,KAAKgmB,gBAAgB3Z,WAAYrM,KAAKimB,oBAAoB5Z,aAAcW,QAAQI,EAAGU,KAAO9N,KAAKkmB,WAAWzb,EAAE3B,EAAGxF,EAAG6G,EAAGiD,EAAGU,KAAKsY,OAAOtd,IAChK,KAAM,kBAAoBA,EAAEzD,MAAQyD,EAAE7D,OAAS+F,IAAMhL,KAAKgmB,gBAAgB1Z,kBAC1EtM,KAAKimB,oBAAoB3Z,mBAAoBxD,GAAK,IAAIyC,EAAEZ,EAAG7B,EAAE0C,eAGmBZ,EAAE9B,EAAGxF,EAAG6G,EAAGiD,GAC/F,OAAOpN,KAAKgQ,KAAMrE,QAAQwa,IAAI,CAAEnmB,KAAKgmB,gBAAgB3Z,WAAYrM,KAAKimB,oBAAoB5Z,aAAcW,MAAI,EAAIc,EAAGzO,KAAOW,KAAKkmB,WAAWtb,EAAE9B,EAAGxF,EAAG6G,EAAG2D,EAAGzO,EAAG+N,KAAKgZ,OAAOtd,IACnK,KAAM,kBAAoBA,EAAEzD,MAAQyD,EAAE7D,OAAS+F,IAAMhL,KAAKgmB,gBAAgB1Z,kBAC1EtM,KAAKimB,oBAAoB3Z,mBAAoBxD,GAAK,IAAIyC,EAAEZ,EAAG7B,EAAE0C,eAGrE6a,YACIrmB,KAAK2O,GAAI,GAMjB2E,eAAegT,GAAGxd,EAAGxF,GACjB,MAAM6G,EAAIM,EAAE3B,GAAIsE,EAAI4W,GAAG7Z,EAAEkB,GAAK,aAAcyC,EAAI,CAC5CyY,OAAQjjB,EAAE8G,KAAKtB,GA1VvB,SAAYA,EAAGxF,GACX,IAAI6G,EACJ,GAAI7G,aAAa+e,GAAIlY,EAAI,CACrBqc,OAAQvC,GAAGnb,EAAGxF,EAAE8C,IAAK9C,EAAE+C,aACnB,GAAI/C,aAAaqf,GAAIxY,EAAI,CAC7BmU,OAAQsF,GAAG9a,EAAGxF,EAAE8C,WACZ,GAAI9C,aAAamf,GAAItY,EAAI,CAC7Bqc,OAAQvC,GAAGnb,EAAGxF,EAAE8C,IAAK9C,EAAEyC,MACvB0gB,WAAYrB,GAAG9hB,EAAEof,gBACb,CACJ,KAAMpf,aAAasf,IAAK,OAAOlc,IAC/ByD,EAAI,CACAuc,OAAQ9C,GAAG9a,EAAGxF,EAAE8C,MAGxB,OAAO9C,EAAEif,gBAAgBjjB,OAAS,IAAM6K,EAAEwc,iBAAmBrjB,EAAEif,gBAAgBnY,KAAKtB,GAAK,SAASA,EAAGxF,GACjG,MAAM6G,EAAI7G,EAAEye,UACZ,GAAI5X,aAAasX,GAAI,MAAO,CACxBuD,UAAW1hB,EAAEgW,MAAMrJ,kBACnB2W,iBAAkB,gBAEtB,GAAIzc,aAAauX,GAAI,MAAO,CACxBsD,UAAW1hB,EAAEgW,MAAMrJ,kBACnB4W,sBAAuB,CACnB1O,OAAQhO,EAAEwX,WAGlB,GAAIxX,aAAayX,GAAI,MAAO,CACxBoD,UAAW1hB,EAAEgW,MAAMrJ,kBACnB6W,mBAAoB,CAChB3O,OAAQhO,EAAEwX,WAGlB,GAAIxX,aAAa0X,GAAI,MAAO,CACxBmD,UAAW1hB,EAAEgW,MAAMrJ,kBACnB8W,UAAW5c,EAAEmB,GAEjB,MAAM5E,IAtB+E,CAuBvF,EAAGoC,MAAOxF,EAAEgf,aAAaH,SAAWhY,EAAE6c,gBAAkB,SAASle,EAAGxF,GAClE,YAAO,IAAWA,EAAE2e,WAAa,CAC7BA,WAAYuB,GAAG1a,EAAGxF,EAAE2e,kBACpB,IAAW3e,EAAE4e,OAAS,CACtBA,OAAQ5e,EAAE4e,QACVxb,IALkD,CAMxDoC,EAAGxF,EAAEgf,eAAgBnY,EA8SC8c,CAAG9c,EAAEkB,EAAGvC,YAE1BqB,EAAEM,EAAE,SAAU2C,EAAGU,GAG3BwF,eAAe4T,GAAGpe,EAAGxF,GACjB,MAAM6G,EAAIM,EAAE3B,GAAIsE,EAAI4W,GAAG7Z,EAAEkB,GAAK,aAAcyC,EAAI,CAC5CqZ,UAAW7jB,EAAE8G,KAAKtB,GAAK8a,GAAGzZ,EAAEkB,EAAGvC,MAChCzJ,QAAU8K,EAAES,EAAE,oBAAqBwC,EAAGU,EAAGxK,EAAEhE,QAAS+N,EAAI,IAAInB,IAC/D7M,EAAE8P,SAASrG,IACP,MAAMxF,EApXd,SAAYwF,EAAGxF,GACX,MAAO,UAAWA,EAAI,SAASwF,EAAGxF,GAC9BkH,IAAIlH,EAAE8jB,OAAQ9jB,EAAE8jB,MAAM/hB,KAAM/B,EAAE8jB,MAAMnF,WACpC,MAAM9X,EAAI0Z,GAAG/a,EAAGxF,EAAE8jB,MAAM/hB,MAAO+H,EAAIqW,GAAGngB,EAAE8jB,MAAMnF,YAAanU,EAAIxK,EAAE8jB,MAAMhI,WAAaqE,GAAGngB,EAAE8jB,MAAMhI,YAAclE,GAAGnL,MAAO1Q,EAAI,IAAIsf,GAAG,CAC9H9H,SAAU,CACNC,OAAQxT,EAAE8jB,MAAMtQ,UAGxB,OAAOkI,GAAGqI,iBAAiBld,EAAGiD,EAAGU,EAAGzO,GAPlB,CAQpByJ,EAAGxF,GAAK,YAAaA,EAAI,SAASwF,EAAGxF,GACnCkH,IAAIlH,EAAEgkB,SAAU9c,IAAIlH,EAAE6b,UACtB,MAAMhV,EAAI0Z,GAAG/a,EAAGxF,EAAEgkB,SAAUla,EAAIqW,GAAGngB,EAAE6b,UACrC,OAAOH,GAAGuI,cAAcpd,EAAGiD,GAHJ,CAIzBtE,EAAGxF,GAAKoD,IAuWI8gB,CAAGrd,EAAEkB,EAAGvC,GAClBuE,EAAElB,IAAI7I,EAAE8C,IAAIoF,WAAYlI,MAE5B,MAAMrB,EAAI,GACV,OAAOqB,EAAE6L,SAASrG,IACd,MAAMxF,EAAI+J,EAAEoC,IAAI3G,EAAE0C,YAClBhB,IAAIlH,GAAIrB,EAAEX,KAAKgC,MACdrB,EAkDL,MAAMwlB,GAAK,IAAIvb,IAWnB,SAASwb,GAAG5e,GACR,GAAIA,EAAE6e,YAAa,MAAM,IAAIpc,EAAEL,EAAG,2CAClC,IAAKuc,GAAG3J,IAAIhV,GAAI,CACZoB,EAAE,oBAAqB,0BACvB,MAAM7K,EAAI,SAASyJ,GACf,OAAO,IAAIqK,GAAGrK,EAAG8e,MAAMC,KAAK,OADtB,EAEPvkB,EAAIwF,EAAEgf,YAAa3d,EAAIrB,EAAEif,IAAIC,QAAQha,OAAS,GAAIZ,EAAItE,EAAEmf,gBAAiBna,EAAIhF,EAAEof,kBAClF,IAAIra,GAAEvK,EAAG6G,EAAGiD,EAAGU,EAAEzJ,KAAMyJ,EAAEI,IAAKJ,EAAEqa,6BAA8Bra,EAAEsa,kCAAmCta,EAAEO,mBAAoBhB,EAAIiY,GAAGxc,EAAEgf,aAAc7lB,EAAI,SAAS6G,EAAGxF,EAAG6G,EAAGiD,GAClK,OAAO,IAAI2Y,GAAGjd,EAAGxF,EAAG6G,EAAGiD,GADyH,CAElJtE,EAAEuf,iBAAkBvf,EAAEwf,qBAAsBjpB,EAAGgO,GACjDoa,GAAGtb,IAAIrD,EAAG7G,GAEd,IAAIqB,EAAG6G,EAAGiD,EAAGU,EAgBV,OAAO2Z,GAAGhY,IAAI3G,GAYrB,MAAMyf,GACFvjB,YAAY8D,GACR,IAAIxF,EACJ,QAAI,IAAWwF,EAAEzE,KAAM,CACnB,QAAI,IAAWyE,EAAEoF,IAAK,MAAM,IAAI3C,EAAEX,EAAG,sDACrC5K,KAAKqE,KAAO,2BAA4BrE,KAAKkO,KAAM,OAChDlO,KAAKqE,KAAOyE,EAAEzE,KAAMrE,KAAKkO,IAAM,QAAU5K,EAAIwF,EAAEoF,WAAQ,IAAW5K,GAAKA,EAC9E,GAAItD,KAAKwoB,YAAc1f,EAAE0f,YAAaxoB,KAAKyoB,4BAA8B3f,EAAE2f,+BAC3E,IAAW3f,EAAE4f,eAAgB1oB,KAAK0oB,eAAiB,aAAe,CAC9D,IAAK,IAAM5f,EAAE4f,gBAAkB5f,EAAE4f,eAAiB,QAAS,MAAM,IAAInd,EAAEX,EAAG,2CAC1E5K,KAAK0oB,eAAiB5f,EAAE4f,eAE5B1oB,KAAKmoB,+BAAiCrf,EAAEqf,6BAA8BnoB,KAAKooB,oCAAsCtf,EAAEsf,kCACnHpoB,KAAKqO,kBAAoBvF,EAAEuF,gBAAiB,SAASvF,EAAGxF,EAAG6G,EAAGiD,GAC1D,IAAI,IAAO9J,IAAK,IAAO8J,EAAG,MAAM,IAAI7B,EAAEX,EAAG,+FADD,CAE1C,EAAgC9B,EAAEqf,6BAA8B,EAAqCrf,EAAEsf,mCAE7Glf,QAAQJ,GACJ,OAAO9I,KAAKqE,OAASyE,EAAEzE,MAAQrE,KAAKkO,MAAQpF,EAAEoF,KAAOlO,KAAKwoB,cAAgB1f,EAAE0f,aAAexoB,KAAK0oB,iBAAmB5f,EAAE4f,gBAAkB1oB,KAAKmoB,+BAAiCrf,EAAEqf,8BAAgCnoB,KAAKooB,oCAAsCtf,EAAEsf,mCAAqCpoB,KAAKyoB,4BAA8B3f,EAAE2f,2BAA6BzoB,KAAKqO,kBAAoBvF,EAAEuF,iBAwBlY,MAAMsa,GAEN3jB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,GACjBpN,KAAKqoB,iBAAmBvf,EAAG9I,KAAKsoB,qBAAuBhlB,EAAGtD,KAAK8nB,YAAc3d,EAC7EnK,KAAK4oB,KAAOxb,EAIZpN,KAAKgM,KAAO,iBAAkBhM,KAAKioB,gBAAkB,SAAUjoB,KAAK6oB,UAAY,IAAIN,GAAG,IACvFvoB,KAAK8oB,iBAAkB,EAKhBf,UACP,IAAK/nB,KAAK4oB,KAAM,MAAM,IAAIrd,EAAEL,EAAG,gFAC/B,OAAOlL,KAAK4oB,KAEZG,mBACA,OAAO/oB,KAAK8oB,gBAEZnB,kBACA,YAAO,IAAW3nB,KAAKgpB,eAE3BC,aAAangB,GACT,GAAI9I,KAAK8oB,gBAAiB,MAAM,IAAIvd,EAAEL,EAAG,sKACzClL,KAAK6oB,UAAY,IAAIN,GAAGzf,QAAI,IAAWA,EAAE0f,cAAgBxoB,KAAKqoB,iBAAmB,SAASvf,GACtF,IAAKA,EAAG,OAAO,IAAIsD,EACnB,OAAQtD,EAAEkD,MACR,IAAK,OACH,MAAM1I,EAAIwF,EAAEogB,OACZ,OAAO,IAAIzb,GAAEnK,EAAGwF,EAAEqgB,cAAgB,IAAKrgB,EAAEsgB,UAAY,KAAMtgB,EAAEugB,kBAAoB,MAEnF,IAAK,WACH,OAAOvgB,EAAEogB,OAEX,QACE,MAAM,IAAI3d,EAAEX,EAAG,sEAX0D,CAa/E9B,EAAE0f,cAERc,eACI,OAAOtpB,KAAK6oB,UAEhBX,kBACI,OAAOloB,KAAK8oB,iBAAkB,EAAI9oB,KAAK6oB,UAE3CU,UACI,OAAOvpB,KAAKgpB,iBAAmBhpB,KAAKgpB,eAAiBhpB,KAAKwpB,cAAexpB,KAAKgpB,eAECvS,SAC/E,MAAO,CACHsR,IAAK/nB,KAAK4oB,KACV7a,WAAY/N,KAAK8nB,YACjB2B,SAAUzpB,KAAK6oB,WAShBW,aACH,OAAO,SAAS1gB,GACZ,MAAMxF,EAAImkB,GAAGhY,IAAI3G,GACjBxF,IAAM4G,EAAE,oBAAqB,sBAAuBud,GAAGnJ,OAAOxV,GAAIxF,EAAE+iB,aAFjE,CAGLrmB,MAAO2L,QAAQC,WAIzB,SAAS8d,GAAG5gB,EAAGxF,EAAG6G,GACdA,IAAMA,EAAI,aACV,MAAMiD,EAAIuc,EAAa7gB,EAAG,kBAC1B,GAAIsE,EAAEwc,cAAczf,GAAI,MAAM,IAAIoB,EAAEL,EAAG,mDACvC,OAAOkC,EAAEyc,WAAW,CAChB7B,QAAS1kB,EACTwmB,mBAAoB3f,IAI5B,SAAS4f,GAAGzmB,EAAG6G,GACX,MAAMiD,EAAI,iBAAmB9J,EAAIA,EAAIwF,IAAKgF,EAAI,iBAAmBxK,EAAIA,EAAI6G,GAAK,YAAa9K,EAAIsqB,EAAavc,EAAG,kBAAkB4c,aAAa,CAC1IC,WAAYnc,IAEhB,IAAKzO,EAAE0pB,aAAc,CACjB,MAAMjgB,EAAIrC,EAAE,aACZqC,GAAKohB,GAAG7qB,KAAMyJ,GAElB,OAAOzJ,EAeP,SAAS6qB,GAAGphB,EAAGxF,EAAG6G,EAAGiD,EAAI,IACzB,IAAIU,EACJ,MAAMzO,GAAKyJ,EAAIyI,GAAGzI,EAAG6f,KAAKW,eAC1B,GAAI,6BAA+BjqB,EAAEgF,MAAQhF,EAAEgF,OAASf,GAAK6C,EAAE,sFAC/D2C,EAAEmgB,aAAa3jB,OAAOyT,OAAOzT,OAAOyT,OAAO,GAAI1Z,GAAI,CAC/CgF,KAAM,GAAGf,KAAK6G,IACd+D,KAAK,KACJd,EAAE+c,cAAe,CAClB,IAAI7mB,EAAG6G,EACP,GAAI,iBAAmBiD,EAAE+c,cAAe7mB,EAAI8J,EAAE+c,cAAehgB,EAAItB,EAAES,cAAgB,CAG/EhG,EC73HI,SACdqJ,EACA4B,GAEA,GAAI5B,EAAM5D,IACR,MAAM,IAAItI,MACR,gHAIJ,MAKM2pB,EAAU7b,GAAa,eACvB8b,EAAM1d,EAAM0d,KAAO,EACnBC,EAAM3d,EAAM2d,KAAO3d,EAAM4d,QAC/B,IAAKD,EACH,MAAM,IAAI7pB,MAAM,wDAGlB,MAAM+pB,EAAOllB,OAAAyT,OAAA,CAEX0R,IAAK,kCAAkCL,IACvCM,IAAKN,EACLC,IAAAA,EACAM,IAAKN,EAAM,KACXO,UAAWP,EACXC,IAAAA,EACAC,QAASD,EACTO,SAAU,CACRC,iBAAkB,SAClBC,WAAY,KAIXpe,GAKL,MAAO,CACLnK,EAA8BmB,KAAK4G,UAjCtB,CACbygB,IAAK,OACLhf,KAAM,SAgCNxJ,EAA8BmB,KAAK4G,UAAUigB,IAH7B,IAKhBjpB,KAAK,KD+0HO+L,CAAEF,EAAE+c,cAAe,QAAUrc,EAAIhF,EAAE8f,YAAS,IAAW9a,OAAI,EAASA,EAAEka,QAAQzZ,WAClF,MAAMlP,EAAI+N,EAAE+c,cAAcG,KAAOld,EAAE+c,cAAcI,QACjD,IAAKlrB,EAAG,MAAM,IAAIkM,EAAEX,EAAG,wDACvBT,EAAI,IAAItB,EAAExJ,GAEdyJ,EAAEuf,iBAAmB,IAAI3b,EAAE,IAAIZ,EAAExI,EAAG6G,KAuBxC,SAAS8gB,GAAGniB,GACZ,OAAOA,EAAIyI,GAAGzI,EAAG6f,IAAKrlB,EAAEwF,EAAEif,IAAK,kBAAmBjf,EAAEygB,UAuCxD,MAAM2B,GACFlmB,cAEIhF,KAAKgM,KAAO,kBAMhB,MAAMmf,GAENnmB,YAAY8D,EAAGxF,GACXtD,KAAKorB,MAAQ9nB,EAEbtD,KAAKgM,KAAO,yBAA0BhM,KAAKqrB,MAAQviB,EAYhD/C,OACH,OAAO/F,KAAKorB,OAuBhB,MAAME,GACNtmB,YAAY8D,EAAGxF,EAAG6G,GACdnK,KAAKqrB,MAAQviB,EAAG9I,KAAKurB,UAAYjoB,EAAGtD,KAAKwrB,eAAiBrhB,EAE9DshB,MACI,OA7WRnY,eAAkBxK,EAAGxF,GACjB,MAAM6G,EAAIM,EAAE3B,GAAIsE,EAAI,SAAStE,EAAGxF,GAC5B,MAAM6G,EAAI+Z,GAAGpb,EAAGxF,GAChB,MAAO,CACHooB,2BAA4B,CACxBC,aAAc,CAAE,CACZC,MAAO,GACPC,MAAO,gBAEX1H,gBAAiBha,EAAEga,iBAEvBC,OAAQja,EAAEia,QAVE,CAYlBja,EAAEkB,EAAG6V,GAAG5d,IAAKwK,EAAIV,EAAEgX,OAErB,OADAja,EAAE+b,WAAW7b,UAAY+C,EAAEgX,cACbja,EAAES,EAAE,sBAAuBkD,EAAGV,EAA8B,IAAIgD,QAAQtH,KAAOA,EAAEgjB,SAAS1hB,KAAKtB,GAAKA,EAAEgjB,OAAOC,kBA8VhHC,CAAGhsB,KAAKurB,UAAWvrB,KAAKqrB,MAAMY,QAAQjf,MAAMlE,IAC/C0B,OAAE,IAAW1B,EAAE,IACf,MAAMxF,EAAIgC,OAAO4mB,QAAQpjB,EAAE,IAAIsH,UAAUtH,EAAGxF,KAAO,gBAAkBwF,IAAIsB,KAAK,EAAEtB,EAAGxF,KAAOtD,KAAKwrB,eAAeW,aAAa7oB,KAAK,GAChI,OAAOkH,EAAE,iBAAmBlH,GAAIqI,QAAQC,QAAQ,IAAIuf,GAAGnrB,KAAKqrB,MAAO,CAC/DO,MAAOtoB,SA0BnB,MAAM8oB,GAENpnB,YAAY8D,EAIZxF,EAAG6G,GACCnK,KAAKqsB,UAAY/oB,EAAGtD,KAAKssB,KAAOniB,EAEhCnK,KAAKgM,KAAO,WAAYhM,KAAKusB,UAAYzjB,EAEzC0jB,YACA,OAAOxsB,KAAKssB,KAAK3b,KAIV8b,SACP,OAAOzsB,KAAKssB,KAAK3b,KAAKnB,cAKfmB,WACP,OAAO3Q,KAAKssB,KAAK3b,KAAKV,kBAIfmU,aACP,OAAO,IAAIsI,GAAG1sB,KAAKusB,UAAWvsB,KAAKqsB,UAAWrsB,KAAKssB,KAAK3b,KAAKrB,WAEjEqd,cAAc7jB,GACV,OAAO,IAAIsjB,GAAGpsB,KAAKusB,UAAWzjB,EAAG9I,KAAKssB,OAO1C,MAAMM,GAGN5nB,YAAY8D,EAIZxF,EAAG6G,GACCnK,KAAKqsB,UAAY/oB,EAAGtD,KAAKisB,OAAS9hB,EAElCnK,KAAKgM,KAAO,QAAShM,KAAKusB,UAAYzjB,EAE1C6jB,cAAc7jB,GACV,OAAO,IAAI8jB,GAAG5sB,KAAKusB,UAAWzjB,EAAG9I,KAAKisB,SAO1C,MAAMS,WAAWE,GAEjB5nB,YAAY8D,EAAGxF,EAAG6G,GACd/E,MAAM0D,EAAGxF,EAAG,IAAIod,GAAGvW,IAAKnK,KAAKwsB,MAAQriB,EAErCnK,KAAKgM,KAAO,aAE2BygB,SACvC,OAAOzsB,KAAKisB,OAAOtb,KAAKnB,cAKjBmB,WACP,OAAO3Q,KAAKisB,OAAOtb,KAAKV,kBAKjBmU,aACP,MAAMtb,EAAI9I,KAAKwsB,MAAMld,UACrB,OAAOxG,EAAE4G,UAAY,KAAO,IAAI0c,GAAGpsB,KAAKusB,UACvB,KAAM,IAAI7b,GAAG5H,IAElC6jB,cAAc7jB,GACV,OAAO,IAAI4jB,GAAG1sB,KAAKusB,UAAWzjB,EAAG9I,KAAKwsB,QAI9C,SAASK,GAAG/jB,EAAGxF,KAAM6G,GACjB,GAAIrB,EAAIyE,EAAEzE,GAAIoI,GAAG,aAAc,OAAQ5N,GAAIwF,aAAa6f,GAAI,CACxD,MAAMvb,EAAI4C,GAAGY,WAAWtN,KAAM6G,GAC9B,OAAOkH,GAAGjE,GAAI,IAAIsf,GAAG5jB,EAAoB,KAAMsE,GAEnD,CACI,KAAMtE,aAAasjB,IAAMtjB,aAAa4jB,IAAK,MAAM,IAAInhB,EAAEX,EAAG,iHAC1D,MAAMwC,EAAItE,EAAE0jB,MAAMxd,MAAMgB,GAAGY,WAAWtN,KAAM6G,IAC5C,OAAOkH,GAAGjE,GAAI,IAAIsf,GAAG5jB,EAAEyjB,UACN,KAAMnf,IAgB3B,SAAS0f,GAAGhkB,EAAGxF,GACf,GAAIwF,EAAIyI,GAAGzI,EAAG6f,IAAKzX,GAAG,kBAAmB,gBAAiB5N,GAAIA,EAAE4M,QAAQ,MAAQ,EAAG,MAAM,IAAI3E,EAAEX,EAAG,0BAA0BtH,iFAC5H,OAAO,IAAIspB,GAAG9jB,EACG,KAAM,SAASA,GAC5B,OAAO,IAAI4X,GAAG1Q,GAAGa,YAAa/H,GADX,CAErBxF,IAGN,SAASypB,GAAGjkB,EAAGxF,KAAM6G,GACjB,GAAIrB,EAAIyE,EAAEzE,GAGV,IAAMkkB,UAAU1tB,SAAWgE,EAAI6Q,GAAG8Y,KAAM/b,GAAG,MAAO,OAAQ5N,GAAIwF,aAAa6f,GAAI,CAC3E,MAAMvb,EAAI4C,GAAGY,WAAWtN,KAAM6G,GAC9B,OAAOgH,GAAG/D,GAAI,IAAIgf,GAAGtjB,EACJ,KAAM,IAAI4H,GAAGtD,IAElC,CACI,KAAMtE,aAAasjB,IAAMtjB,aAAa4jB,IAAK,MAAM,IAAInhB,EAAEX,EAAG,iHAC1D,MAAMwC,EAAItE,EAAE0jB,MAAMxd,MAAMgB,GAAGY,WAAWtN,KAAM6G,IAC5C,OAAOgH,GAAG/D,GAAI,IAAIgf,GAAGtjB,EAAEyjB,UAAWzjB,aAAa4jB,GAAK5jB,EAAEujB,UAAY,KAAM,IAAI3b,GAAGtD,KAWnF,SAAS8f,GAAGpkB,EAAGxF,GACf,OAAOwF,EAAIyE,EAAEzE,GAAIxF,EAAIiK,EAAEjK,IAAKwF,aAAasjB,IAAMtjB,aAAa4jB,MAAQppB,aAAa8oB,IAAM9oB,aAAaopB,KAAQ5jB,EAAEyjB,YAAcjpB,EAAEipB,WAAazjB,EAAE6H,OAASrN,EAAEqN,MAAQ7H,EAAEujB,YAAc/oB,EAAE+oB,UAWlL,SAASc,GAAGrkB,EAAGxF,GACf,OAAOwF,EAAIyE,EAAEzE,GAAIxF,EAAIiK,EAAEjK,GAAIwF,aAAa8jB,IAAMtpB,aAAaspB,IAAO9jB,EAAEyjB,YAAcjpB,EAAEipB,WA10CxF,SAAYzjB,EAAGxF,GACX,OAAO,SAASwF,EAAGxF,GACf,GAAIwF,EAAEoG,QAAU5L,EAAE4L,MAAO,OAAO,EAChC,GAAIpG,EAAEwX,QAAQhhB,SAAWgE,EAAEgd,QAAQhhB,OAAQ,OAAO,EAClD,IAAK,IAAI6K,EAAI,EAAGA,EAAIrB,EAAEwX,QAAQhhB,OAAQ6K,IAAK,IAAK8Q,GAAGnS,EAAEwX,QAAQnW,GAAI7G,EAAEgd,QAAQnW,IAAK,OAAO,EACvF,GAAIrB,EAAEyR,QAAQjb,SAAWgE,EAAEiX,QAAQjb,OAAQ,OAAO,EAClD,IAAK,IAAI6K,EAAI,EAAGA,EAAIrB,EAAEyR,QAAQjb,OAAQ6K,IAAK,IAAKuQ,GAAG5R,EAAEyR,QAAQpQ,GAAI7G,EAAEiX,QAAQpQ,IAAK,OAAO,EACvF,OAAOrB,EAAEgI,kBAAoBxN,EAAEwN,mBAAqBhI,EAAE6H,KAAKzH,QAAQ5F,EAAEqN,SAAWwI,GAAGrQ,EAAEyX,QAASjd,EAAEid,UAAYpH,GAAGrQ,EAAE0X,MAAOld,EAAEkd,OANvH,CAOLU,GAAGpY,GAAIoY,GAAG5d,KAAOwF,EAAE8X,YAActd,EAAEsd,UAk0C4DwM,CAAGtkB,EAAEmjB,OAAQ3oB,EAAE2oB,SAAWnjB,EAAEujB,YAAc/oB,EAAE+oB,UAqB7I,MAAMgB,GAENroB,YAAY8D,GACR9I,KAAKstB,YAAcxkB,EAOhB2F,wBAAwB3F,GAC3B,IACI,OAAO,IAAIukB,GAAG1Y,GAAGsB,iBAAiBnN,IACpC,MAAOA,GACL,MAAM,IAAIyC,EAAEX,EAAG,gDAAkD9B,IAOlE2F,sBAAsB3F,GACzB,OAAO,IAAIukB,GAAG1Y,GAAGuB,eAAepN,IAM7BmM,WACH,OAAOjV,KAAKstB,YAAYrY,WAMrBC,eACH,OAAOlV,KAAKstB,YAAYpY,eAMrB1J,WACH,MAAO,iBAAmBxL,KAAKiV,WAAa,IAOzC/L,QAAQJ,GACX,OAAO9I,KAAKstB,YAAYpkB,QAAQJ,EAAEwkB,cA2BtC,MAAMC,GAONvoB,eAAe8D,GACX,IAAK,IAAIxF,EAAI,EAAGA,EAAIwF,EAAExJ,SAAUgE,EAAG,GAAI,IAAMwF,EAAExF,GAAGhE,OAAQ,MAAM,IAAIiM,EAAEX,EAAG,2EACzE5K,KAAKwtB,cAAgB,IAAIld,GAAGxH,GAOzBI,QAAQJ,GACX,OAAO9I,KAAKwtB,cAActkB,QAAQJ,EAAE0kB,gBAOxC,SAASC,KACT,OAAO,IAAIF,GAAG,YAsBd,MAAMG,GAKN1oB,YAAY8D,GACR9I,KAAK2tB,YAAc7kB,GA0BvB,MAAM8kB,GAON5oB,YAAY8D,EAAGxF,GACX,IAAKuqB,SAAS/kB,IAAMA,GAAK,IAAMA,EAAI,GAAI,MAAM,IAAIyC,EAAEX,EAAG,0DAA4D9B,GAClH,IAAK+kB,SAASvqB,IAAMA,GAAK,KAAOA,EAAI,IAAK,MAAM,IAAIiI,EAAEX,EAAG,6DAA+DtH,GACvHtD,KAAK8tB,KAAOhlB,EAAG9I,KAAK+tB,MAAQzqB,EAIrBuU,eACP,OAAO7X,KAAK8tB,KAILhW,gBACP,OAAO9X,KAAK+tB,MAOT7kB,QAAQJ,GACX,OAAO9I,KAAK8tB,OAAShlB,EAAEglB,MAAQ9tB,KAAK+tB,QAAUjlB,EAAEilB,MAEmBtX,SACnE,MAAO,CACHoB,SAAU7X,KAAK8tB,KACfhW,UAAW9X,KAAK+tB,OAMjBvX,WAAW1N,GACd,OAAOsL,GAAGpU,KAAK8tB,KAAMhlB,EAAEglB,OAAS1Z,GAAGpU,KAAK+tB,MAAOjlB,EAAEilB,QAmBrD,MAAMC,GAAK,WAEuD,MAAMC,GACxEjpB,YAAY8D,EAAGxF,EAAG6G,GACdnK,KAAK+F,KAAO+C,EAAG9I,KAAK0iB,UAAYpf,EAAGtD,KAAKuiB,gBAAkBpY,EAE9D+jB,WAAWplB,EAAGxF,GACV,OAAO,OAAStD,KAAK0iB,UAAY,IAAID,GAAG3Z,EAAG9I,KAAK+F,KAAM/F,KAAK0iB,UAAWpf,EAAGtD,KAAKuiB,iBAAmB,IAAIF,GAAGvZ,EAAG9I,KAAK+F,KAAMzC,EAAGtD,KAAKuiB,kBAI5D,MAAM4L,GAC5EnpB,YAAY8D,EAEZxF,EAAG6G,GACCnK,KAAK+F,KAAO+C,EAAG9I,KAAK0iB,UAAYpf,EAAGtD,KAAKuiB,gBAAkBpY,EAE9D+jB,WAAWplB,EAAGxF,GACV,OAAO,IAAImf,GAAG3Z,EAAG9I,KAAK+F,KAAM/F,KAAK0iB,UAAWpf,EAAGtD,KAAKuiB,kBAI5D,SAAS6L,GAAGtlB,GACR,OAAQA,GACN,KAAK,EAEG,KAAK,EAEL,KAAK,EACX,OAAO,EAET,KAAK,EACL,KAAK,EACH,OAAO,EAET,QACE,MAAMpC,KAImD,MAAM2nB,GAmBnErpB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,GACvBW,KAAKypB,SAAW3gB,EAAG9I,KAAK+N,WAAazK,EAAGtD,KAAKqL,EAAIlB,EAAGnK,KAAKyoB,0BAA4Brb,OAGrF,IAAWU,GAAK9N,KAAKqQ,KAAMrQ,KAAKuiB,gBAAkBzU,GAAK,GAAI9N,KAAK0iB,UAAYrjB,GAAK,GAEjFsR,WACA,OAAO3Q,KAAKypB,SAAS9Y,KAErBL,SACA,OAAOtQ,KAAKypB,SAASnZ,GAEgDI,GAAG5H,GACxE,OAAO,IAAIulB,GAAG/oB,OAAOyT,OAAOzT,OAAOyT,OAAO,GAAI/Y,KAAKypB,UAAW3gB,GAAI9I,KAAK+N,WAAY/N,KAAKqL,EAAGrL,KAAKyoB,0BAA2BzoB,KAAKuiB,gBAAiBviB,KAAK0iB,WAE1JxR,GAAGpI,GACC,IAAIxF,EACJ,MAAM6G,EAAI,QAAU7G,EAAItD,KAAK2Q,YAAS,IAAWrN,OAAI,EAASA,EAAE0L,MAAMlG,GAAIsE,EAAIpN,KAAK0Q,GAAG,CAClFC,KAAMxG,EACNgH,IAAI,IAER,OAAO/D,EAAEiE,GAAGvI,GAAIsE,EAEpBkE,GAAGxI,GACC,IAAIxF,EACJ,MAAM6G,EAAI,QAAU7G,EAAItD,KAAK2Q,YAAS,IAAWrN,OAAI,EAASA,EAAE0L,MAAMlG,GAAIsE,EAAIpN,KAAK0Q,GAAG,CAClFC,KAAMxG,EACNgH,IAAI,IAER,OAAO/D,EAAEiD,KAAMjD,EAEnBmE,GAAGzI,GAGC,OAAO9I,KAAK0Q,GAAG,CACXC,UAAM,EACNQ,IAAI,IAGZK,GAAG1I,GACC,OAAOwlB,GAAGxlB,EAAG9I,KAAKypB,SAAS8E,WAAYvuB,KAAKypB,SAAShY,KAAM,EAAIzR,KAAK2Q,KAAM3Q,KAAKypB,SAAS/X,IAEV8c,SAAS1lB,GACvF,YAAO,IAAW9I,KAAK0iB,UAAUrK,MAAM/U,GAAKwF,EAAE6G,WAAWrM,WAAQ,IAAWtD,KAAKuiB,gBAAgBlK,MAAM/U,GAAKwF,EAAE6G,WAAWrM,EAAEgW,SAE/HjJ,KAGI,GAAIrQ,KAAK2Q,KAAM,IAAK,IAAI7H,EAAI,EAAGA,EAAI9I,KAAK2Q,KAAKrR,OAAQwJ,IAAK9I,KAAKqR,GAAGrR,KAAK2Q,KAAKlB,IAAI3G,IAEpFuI,GAAGvI,GACC,GAAI,IAAMA,EAAExJ,OAAQ,MAAMU,KAAKwR,GAAG,qCAClC,GAAI4c,GAAGpuB,KAAKsQ,KAAO0d,GAAGzd,KAAKzH,GAAI,MAAM9I,KAAKwR,GAAG,mDAOjD,MAAMid,GACNzpB,YAAY8D,EAAGxF,EAAG6G,GACdnK,KAAK+N,WAAajF,EAAG9I,KAAKyoB,0BAA4BnlB,EAAGtD,KAAKqL,EAAIlB,GAAKmb,GAAGxc,GAE7B6I,GAAG7I,EAAGxF,EAAG6G,EAAGiD,GAAI,GAC7D,OAAO,IAAIihB,GAAG,CACV/d,GAAIxH,EACJylB,WAAYjrB,EACZoO,GAAIvH,EACJwG,KAAML,GAAGO,YACTM,IAAI,EACJM,GAAIrE,GACLpN,KAAK+N,WAAY/N,KAAKqL,EAAGrL,KAAKyoB,4BAIzC,SAASiG,GAAG5lB,GACR,MAAMxF,EAAIwF,EAAEof,kBAAmB/d,EAAImb,GAAGxc,EAAEgf,aACxC,OAAO,IAAI2G,GAAG3lB,EAAEgf,cAAexkB,EAAEmlB,0BAA2Bte,GAGlB,SAASwkB,GAAG7lB,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,EAAI,IACzE,MAAMgO,EAAIvE,EAAE6I,GAAGtS,EAAEuvB,OAASvvB,EAAEwvB,YAAc,EAAkC,EAA6BvrB,EAAG6G,EAAG2D,GAC/GsV,GAAG,sCAAuC/V,EAAGD,GAC7C,MAAMnL,EAAI6sB,GAAG1hB,EAAGC,GAChB,IAAI9N,EAAGkH,EACP,GAAIpH,EAAEuvB,MAAOrvB,EAAI,IAAIkf,GAAGpR,EAAEqV,WAAYjc,EAAI4G,EAAEkV,qBAAsB,GAAIljB,EAAEwvB,YAAa,CACjF,MAAM/lB,EAAI,GACV,IAAK,MAAMsE,KAAK/N,EAAEwvB,YAAa,CAC3B,MAAM/gB,EAAIihB,GAAGzrB,EAAG8J,EAAGjD,GACnB,IAAKkD,EAAEmhB,SAAS1gB,GAAI,MAAM,IAAIvC,EAAEX,EAAG,UAAUkD,wEAC7CkhB,GAAGlmB,EAAGgF,IAAMhF,EAAExH,KAAKwM,GAEvBvO,EAAI,IAAIkf,GAAG3V,GAAIrC,EAAI4G,EAAEkV,gBAAgBnS,QAAQtH,GAAKvJ,EAAEmf,OAAO5V,EAAEwQ,cAC1D/Z,EAAI,KAAMkH,EAAI4G,EAAEkV,gBACvB,OAAO,IAAI0L,GAAG,IAAItP,GAAG1c,GAAI1C,EAAGkH,GAGhC,MAAMwoB,WAAWvB,GACbwB,kBAAkBpmB,GACd,GAAI,IAAoCA,EAAEwH,GAAI,MAAM,IAAkCxH,EAAEwH,GAAKxH,EAAE0I,GAAG,GAAGxR,KAAK2tB,sEAAwE7kB,EAAE0I,GAAG,GAAGxR,KAAK2tB,wEAG/L,OAAO7kB,EAAE4Z,UAAUphB,KAAKwH,EAAE6H,MAAO,KAErCzH,QAAQJ,GACJ,OAAOA,aAAammB,IAmBxB,SAASE,GAAGrmB,EAAGxF,EAAG6G,GAClB,OAAO,IAAIkkB,GAAG,CACV/d,GAAI,EACJoB,GAAIpO,EAAEmmB,SAAS/X,GACf6c,WAAYzlB,EAAE6kB,YACdxc,GAAIhH,GACL7G,EAAEyK,WAAYzK,EAAE+H,EAAG/H,EAAEmlB,2BAG5B,MAAM2G,WAAW1B,GACbwB,kBAAkBpmB,GACd,OAAO,IAAIgZ,GAAGhZ,EAAE6H,KAAM,IAAI8Q,IAE9BvY,QAAQJ,GACJ,OAAOA,aAAasmB,IAI5B,MAAMC,WAAW3B,GACb1oB,YAAY8D,EAAGxF,GACX8B,MAAM0D,GAAI9I,KAAKgS,GAAK1O,EAExB4rB,kBAAkBpmB,GACd,MAAMxF,EAAI6rB,GAAGnvB,KAAM8I,GACR,GAAKqB,EAAInK,KAAKgS,GAAG5H,KAAKtB,GAAKwmB,GAAGxmB,EAAGxF,KAAM8J,EAAI,IAAIsU,GAAGvX,GAC7D,OAAO,IAAI2X,GAAGhZ,EAAE6H,KAAMvD,GAE1BlE,QAAQJ,GAEJ,OAAO9I,OAAS8I,GAIxB,MAAMymB,WAAW7B,GACb1oB,YAAY8D,EAAGxF,GACX8B,MAAM0D,GAAI9I,KAAKgS,GAAK1O,EAExB4rB,kBAAkBpmB,GACd,MAAMxF,EAAI6rB,GAAGnvB,KAAM8I,GACR,GAAKqB,EAAInK,KAAKgS,GAAG5H,KAAKtB,GAAKwmB,GAAGxmB,EAAGxF,KAAM8J,EAAI,IAAIwU,GAAGzX,GAC7D,OAAO,IAAI2X,GAAGhZ,EAAE6H,KAAMvD,GAE1BlE,QAAQJ,GAEJ,OAAO9I,OAAS8I,GAIxB,MAAM0mB,WAAW9B,GACb1oB,YAAY8D,EAAGxF,GACX8B,MAAM0D,GAAI9I,KAAKiS,GAAK3O,EAExB4rB,kBAAkBpmB,GACd,MAAMxF,EAAI,IAAIue,GAAG/Y,EAAEuC,EAAG+V,GAAGtY,EAAEuC,EAAGrL,KAAKiS,KACnC,OAAO,IAAI6P,GAAGhZ,EAAE6H,KAAMrN,GAE1B4F,QAAQJ,GAEJ,OAAO9I,OAAS8I,GAIwB,SAAS2mB,GAAG3mB,EAAGxF,EAAG6G,EAAGiD,GACjE,MAAMU,EAAIhF,EAAE6I,GAAG,EAAgCrO,EAAG6G,GAClDiZ,GAAG,sCAAuCtV,EAAGV,GAC7C,MAAM/N,EAAI,GAAIgO,EAAIsR,GAAGW,QACrB5K,GAAGtH,GAAC,CAAItE,EAAGsE,KACP,MAAMnL,EAAIytB,GAAGpsB,EAAGwF,EAAGqB,GAGXiD,EAAIG,EAAEH,GACd,MAAM7N,EAAIuO,EAAEwD,GAAGrP,GACf,GAAImL,aAAa6hB,GAEjB5vB,EAAEiC,KAAKW,OAAS,CACZ,MAAM6G,EAAIwmB,GAAGliB,EAAG7N,GAChB,MAAQuJ,IAAMzJ,EAAEiC,KAAKW,GAAIoL,EAAElB,IAAIlK,EAAG6G,QAG1C,MAAM7G,EAAI,IAAIwc,GAAGpf,GACjB,OAAO,IAAI8uB,GAAG9gB,EAAGpL,EAAG6L,EAAEyU,iBAGqC,SAASoN,GAAG7mB,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,GACtF,MAAMgO,EAAIvE,EAAE6I,GAAG,EAAgCrO,EAAG6G,GAAIlI,EAAI,CAAE8sB,GAAGzrB,EAAG8J,EAAGjD,IAAM5K,EAAI,CAAEuO,GACjF,GAAIzO,EAAEC,OAAS,GAAK,EAAG,MAAM,IAAIiM,EAAEX,EAAG,YAAYtH,0GAClD,IAAK,IAAIwF,EAAI,EAAGA,EAAIzJ,EAAEC,OAAQwJ,GAAK,EAAG7G,EAAEX,KAAKytB,GAAGzrB,EAAGjE,EAAEyJ,KAAMvJ,EAAE+B,KAAKjC,EAAEyJ,EAAI,IACxE,MAAMrC,EAAI,GAAI6G,EAAIqR,GAAGW,QAGrB,IAAK,IAAIxW,EAAI7G,EAAE3C,OAAS,EAAGwJ,GAAK,IAAKA,EAAG,IAAKkmB,GAAGvoB,EAAGxE,EAAE6G,IAAK,CACtD,MAAMxF,EAAIrB,EAAE6G,GACZ,IAAIqB,EAAI5K,EAAEuJ,GAGFqB,EAAIoD,EAAEpD,GACd,MAAMiD,EAAIC,EAAEiE,GAAGhO,GACf,GAAI6G,aAAa8kB,GAEjBxoB,EAAEnF,KAAKgC,OAAS,CACZ,MAAMwF,EAAIwmB,GAAGnlB,EAAGiD,GAChB,MAAQtE,IAAMrC,EAAEnF,KAAKgC,GAAIgK,EAAEnB,IAAI7I,EAAGwF,KAG1C,MAAM8mB,EAAI,IAAInR,GAAGhY,GACjB,OAAO,IAAI0nB,GAAG7gB,EAAGsiB,EAAGviB,EAAEkV,iBAStB,SAASsN,GAAG/mB,EAAGxF,EAAG6G,EAAGiD,GAAI,GACzB,OAAOkiB,GAAGnlB,EAAGrB,EAAE6I,GAAGvE,EAAI,EAAuC,EAAkC9J,IAW/F,SAASgsB,GAAGxmB,EAAGxF,GACf,GAAIwsB,GAGJhnB,EAAIyE,EAAEzE,IAAK,OAAOsa,GAAG,2BAA4B9f,EAAGwF,GAAIgmB,GAAGhmB,EAAGxF,GAC9D,GAAIwF,aAAa4kB,GAUjB,OAAO,SAAS5kB,EAAGxF,GAEf,IAAK8qB,GAAG9qB,EAAEgN,IAAK,MAAMhN,EAAEkO,GAAG,GAAG1I,EAAE6kB,0DAC/B,IAAKrqB,EAAEqN,KAAM,MAAMrN,EAAEkO,GAAG,GAAG1I,EAAE6kB,0DAC7B,MAAMxjB,EAAIrB,EAAEomB,kBAAkB5rB,GAC9B6G,GAAK7G,EAAEif,gBAAgBjhB,KAAK6I,GALzB,CAWNrB,EAAGxF,GAAI,KACR,QAAI,IAAWwF,GAAKxF,EAAEmlB,0BAItB,OAAO,KACP,GAGAnlB,EAAEqN,MAAQrN,EAAEof,UAAUphB,KAAKgC,EAAEqN,MAAO7H,aAAavI,MAAO,CAOpD,GAAI+C,EAAEmmB,SAAStY,IAAM,IAAyC7N,EAAEgN,GAAI,MAAMhN,EAAEkO,GAAG,mCAC/E,OAAO,SAAS1I,EAAGxF,GACf,MAAM6G,EAAI,GACV,IAAIiD,EAAI,EACR,IAAK,MAAMU,KAAKhF,EAAG,CACf,IAAIA,EAAIwmB,GAAGxhB,EAAGxK,EAAEiO,GAAGnE,IACnB,MAAQtE,IAGRA,EAAI,CACAgS,UAAW,eACX3Q,EAAE7I,KAAKwH,GAAIsE,IAEnB,MAAO,CACH8K,WAAY,CACRC,OAAQhO,IAdb,CAiBLrB,EAAGxF,GAET,OAAO,SAASwF,EAAGxF,GACf,GAAI,QAAUwF,EAAIyE,EAAEzE,IAAK,MAAO,CAC5BgS,UAAW,cAEf,GAAI,iBAAmBhS,EAAG,OAAOsY,GAAG9d,EAAE+H,EAAGvC,GACzC,GAAI,kBAAoBA,EAAG,MAAO,CAC9B2O,aAAc3O,GAElB,GAAI,iBAAmBA,EAAG,MAAO,CAC7BkO,YAAalO,GAEjB,GAAIA,aAAaJ,KAAM,CACnB,MAAMyB,EAAIgM,GAAG4Z,SAASjnB,GACtB,MAAO,CACHuO,eAAgBiM,GAAGhgB,EAAE+H,EAAGlB,IAGhC,GAAIrB,aAAaqN,GAAI,CAIjB,MAAMhM,EAAI,IAAIgM,GAAGrN,EAAE8M,QAAS,IAAM9F,KAAKmE,MAAMnL,EAAEsN,YAAc,MAC7D,MAAO,CACHiB,eAAgBiM,GAAGhgB,EAAE+H,EAAGlB,IAGhC,GAAIrB,aAAa8kB,GAAI,MAAO,CACxBhW,cAAe,CACXC,SAAU/O,EAAE+O,SACZC,UAAWhP,EAAEgP,YAGrB,GAAIhP,aAAaukB,GAAI,MAAO,CACxB3V,WAAY6L,GAAGjgB,EAAE+H,EAAGvC,EAAEwkB,cAE1B,GAAIxkB,aAAasjB,GAAI,CACjB,MAAMjiB,EAAI7G,EAAEyK,WAAYX,EAAItE,EAAEyjB,UAAUzE,YACxC,IAAK1a,EAAElE,QAAQiB,GAAI,MAAM7G,EAAEkO,GAAG,sCAAsCpE,EAAEmB,aAAanB,EAAEoB,uCAAuCrE,EAAEoE,aAAapE,EAAEqE,YAC7I,MAAO,CACHmJ,eAAgBgM,GAAG7a,EAAEyjB,UAAUzE,aAAexkB,EAAEyK,WAAYjF,EAAEwjB,KAAK3b,OAG3E,MAAMrN,EAAEkO,GAAG,4BAA4BF,GAAGxI,MA1CvC,CAkDNA,EAAGxF,GAGR,SAASwrB,GAAGhmB,EAAGxF,GACX,MAAM6G,EAAI,GACV,OAAQ,SAASrB,GACb,IAAK,MAAMxF,KAAKwF,EAAG,GAAIxD,OAAOE,UAAUgP,eAAeC,KAAK3L,EAAGxF,GAAI,OAAO,EAC1E,OAAO,EAFH,CAoBqDwF,GAM7DxF,EAAEqN,MAAQrN,EAAEqN,KAAKrR,OAAS,GAAKgE,EAAEof,UAAUphB,KAAKgC,EAAEqN,MANgB+D,GAAG5L,GAAC,CAAIA,EAAGsE,KACzE,MAAMU,EAAIwhB,GAAGliB,EAAG9J,EAAE4N,GAAGpI,IACrB,MAAQgF,IAAM3D,EAAErB,GAAKgF,MAIgC,CACrD+I,SAAU,CACNC,OAAQ3M,IAKpB,SAAS2lB,GAAGhnB,GACR,QAAS,iBAAmBA,GAAK,OAASA,GAAKA,aAAavI,OAASuI,aAAaJ,MAAQI,aAAaqN,IAAMrN,aAAa8kB,IAAM9kB,aAAaukB,IAAMvkB,aAAasjB,IAAMtjB,aAAa4kB,IAGvL,SAAStK,GAAGta,EAAGxF,EAAG6G,GACd,IAAK2lB,GAAG3lB,KAAO,SAASrB,GACpB,MAAO,iBAAmBA,GAAK,OAASA,IAAMxD,OAAO0qB,eAAelnB,KAAOxD,OAAOE,WAAa,OAASF,OAAO0qB,eAAelnB,IADnH,CAEbqB,GAAI,CACF,MAAMiD,EAAIkE,GAAGnH,GACb,KAAM,cAAgBiD,EAAI9J,EAAEkO,GAAG1I,EAAI,oBAAsBxF,EAAEkO,GAAG1I,EAAI,IAAMsE,IAM5E,SAAS2hB,GAAGjmB,EAAGxF,EAAG6G,GAClB,IAGA7G,EAAIiK,EAAEjK,cAAeiqB,GAAI,OAAOjqB,EAAEkqB,cAClC,GAAI,iBAAmBlqB,EAAG,OAAOosB,GAAG5mB,EAAGxF,GACvC,MAAMgrB,GAAG,kDAAmDxlB,GACxC,OACR,EAAQqB,GAKpB,MAAM8lB,GAAK,IAAI1a,OAAO,iBAUtB,SAASma,GAAG5mB,EAAGxF,EAAG6G,GAClB,GAAI7G,EAAE4sB,OAAOD,KAAO,EAAG,MAAM3B,GAAG,uBAAuBhrB,wDAAyDwF,GAC5F,OACR,EAAQqB,GACpB,IACI,OAAO,IAAIojB,MAAMjqB,EAAE6M,MAAM,MAAMqd,cACjC,MAAOpgB,GACL,MAAMkhB,GAAG,uBAAuBhrB,6EAA8EwF,GAC1F,OACR,EAAQqB,IAI5B,SAASmkB,GAAGxlB,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACpB,MAAMzO,EAAI+N,IAAMA,EAAEsC,UAAWrC,OAAI,IAAWS,EAC5C,IAAI7L,EAAI,YAAYqB,+BACpB6G,IAAMlI,GAAK,0BAA2BA,GAAK,KAC3C,IAAI1C,EAAI,GACR,OAAQF,GAAKgO,KAAO9N,GAAK,UAAWF,IAAME,GAAK,aAAa6N,KAAMC,IAAM9N,GAAK,gBAAgBuO,KAC7FvO,GAAK,KAAM,IAAIgM,EAAEX,EAAG3I,EAAI6G,EAAIvJ,GAGyC,SAASyvB,GAAGlmB,EAAGxF,GACpF,OAAOwF,EAAE+R,MAAM/R,GAAKA,EAAEI,QAAQ5F,KA2B9B,MAAM6sB,GAMNnrB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACpB9N,KAAKowB,WAAatnB,EAAG9I,KAAKqwB,gBAAkB/sB,EAAGtD,KAAKssB,KAAOniB,EAAGnK,KAAKswB,UAAYljB,EAC/EpN,KAAKuwB,WAAaziB,EAE4D2e,SAC9E,OAAOzsB,KAAKssB,KAAK3b,KAAKnB,cAIfghB,UACP,OAAO,IAAIpE,GAAGpsB,KAAKowB,WAAYpwB,KAAKuwB,WAAYvwB,KAAKssB,MAMlDpK,SACH,OAAO,OAASliB,KAAKswB,UAQlBvqB,OACH,GAAI/F,KAAKswB,UAAW,CAChB,GAAItwB,KAAKuwB,WAAY,CAGjB,MAAMznB,EAAI,IAAI2nB,GAAGzwB,KAAKowB,WAAYpwB,KAAKqwB,gBAAiBrwB,KAAKssB,KAAMtsB,KAAKswB,UACvD,MACjB,OAAOtwB,KAAKuwB,WAAWG,cAAc5nB,GAEzC,OAAO9I,KAAKqwB,gBAAgBlE,aAAansB,KAAKswB,UAAUvqB,KAAKM,QAcrEoJ,IAAI3G,GACA,GAAI9I,KAAKswB,UAAW,CAChB,MAAMhtB,EAAItD,KAAKswB,UAAUvqB,KAAKuT,MAAMqX,GAAG,uBAAwB7nB,IAC/D,GAAI,OAASxF,EAAG,OAAOtD,KAAKqwB,gBAAgBlE,aAAa7oB,KAejE,MAAMmtB,WAAWN,GAOjBpqB,OACI,OAAOX,MAAMW,QAUjB,MAAM6qB,GAEN5rB,YAAY8D,EAAGxF,GACXtD,KAAK6wB,MAAQvtB,EAAGtD,KAAKqrB,MAAQviB,EAEmCgoB,WAChE,MAAO,IAAK9wB,KAAK6wB,OAEyC7U,WAC1D,OAAOhc,KAAK8wB,KAAKxxB,OAEgDggB,YACjE,OAAO,IAAMtf,KAAK8wB,KAAKxxB,OAQpB6P,QAAQrG,EAAGxF,GACdtD,KAAK6wB,MAAM1hB,QAAQrG,EAAGxF,IAU1B,SAASytB,GAAGjoB,EAAGxF,GACf,OAAOwF,EAAIyE,EAAEzE,GAAIxF,EAAIiK,EAAEjK,GAAIwF,aAAaqnB,IAAM7sB,aAAa6sB,GAAKrnB,EAAEsnB,aAAe9sB,EAAE8sB,YAActnB,EAAEwjB,KAAKpjB,QAAQ5F,EAAEgpB,QAAU,OAASxjB,EAAEwnB,UAAY,OAAShtB,EAAEgtB,UAAYxnB,EAAEwnB,UAAUpnB,QAAQ5F,EAAEgtB,aAAexnB,EAAEynB,aAAejtB,EAAEitB,WAAaznB,aAAa8nB,IAAMttB,aAAastB,IAAOzD,GAAGrkB,EAAEuiB,MAAO/nB,EAAE+nB,QAAUhX,GAAGvL,EAAEgoB,KAAMxtB,EAAEwtB,KAAMC,IAKjU,SAASJ,GAAG7nB,EAAGxF,GACf,MAAO,iBAAmBA,EAAIosB,GAAG5mB,EAAGxF,GAAKA,aAAaiqB,GAAKjqB,EAAEkqB,cAAgBlqB,EAAE+D,UAAUmmB,cAuB7F,MAAMwD,IASF,MAAMC,WAAWD,IAErB,SAASE,GAAGpoB,EAAGxF,KAAM6G,GACjB,IAAIiD,EAAI,GACR9J,aAAa0tB,IAAM5jB,EAAE9L,KAAKgC,GAAI8J,EAAIA,EAAEqN,OAAOtQ,GAAI,SAASrB,GACpD,MAAMxF,EAAIwF,EAAEsH,QAAQtH,GAAKA,aAAaqoB,KAAK7xB,OAAQ6K,EAAIrB,EAAEsH,QAAQtH,GAAKA,aAAasoB,KAAK9xB,OACxF,GAAIgE,EAAI,GAAKA,EAAI,GAAK6G,EAAI,EAAG,MAAM,IAAIoB,EAAEX,EAAG,gRAFD,CAyB9CwC,GACD,IAAK,MAAM9J,KAAK8J,EAAGtE,EAAIxF,EAAE+tB,OAAOvoB,GAChC,OAAOA,EASP,MAAMsoB,WAAWH,GAIjBjsB,YAAY8D,EAAGxF,EAAG6G,GACd/E,QAASpF,KAAKsxB,OAASxoB,EAAG9I,KAAKuxB,IAAMjuB,EAAGtD,KAAKwxB,OAASrnB,EAEtDnK,KAAKgM,KAAO,QAEhByC,eAAe3F,EAAGxF,EAAG6G,GACjB,OAAO,IAAIinB,GAAGtoB,EAAGxF,EAAG6G,GAExBknB,OAAOvoB,GACH,MAAMxF,EAAItD,KAAKyxB,OAAO3oB,GACtB,OAAO4oB,GAAG5oB,EAAEmjB,OAAQ3oB,GAAI,IAAIspB,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAWlL,GAAGrY,EAAEmjB,OAAQ3oB,IAE1EmuB,OAAO3oB,GACH,MAAMxF,EAAIorB,GAAG5lB,EAAEyjB,WAAYpiB,EAAI,SAASrB,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,EAAGgO,GACtD,IAAIpL,EACJ,GAAI6L,EAAE2C,aAAc,CAChB,GAAI,mBAAmDpR,GAAK,uBAA2DA,EAAG,MAAM,IAAIkM,EAAEX,EAAG,qCAAqCvL,+BAC9K,GAAI,OAA2BA,GAAK,WAAmCA,EAAG,CACtEsyB,GAAGtkB,EAAGhO,GACN,MAAMiE,EAAI,GACV,IAAK,MAAM6G,KAAKkD,EAAG/J,EAAEhC,KAAKswB,GAAGxkB,EAAGtE,EAAGqB,IACnClI,EAAI,CACAiW,WAAY,CACRC,OAAQ7U,SAGbrB,EAAI2vB,GAAGxkB,EAAGtE,EAAGuE,OACjB,OAA2BhO,GAAK,WAAmCA,GAAK,uBAA2DA,GAAKsyB,GAAGtkB,EAAGhO,GACrJ4C,EAAI4tB,GAAG1lB,EAGC,QAHKkD,EACM,OAA2BhO,GAAK,WAAmCA,GACtF,OAAOga,GAAG1T,OAAOmI,EAAGzO,EAAG4C,GAjBI,CAkB7B6G,EAAEmjB,OAAQ,EAAS3oB,EAAGwF,EAAEyjB,UAAUzE,YAAa9nB,KAAKsxB,OAAQtxB,KAAKuxB,IAAKvxB,KAAKwxB,QAC7E,OAAOrnB,GAcX,SAAS0nB,GAAG/oB,EAAGxF,EAAG6G,GAClB,MAAMiD,EAAI9J,EAAGwK,EAAI6iB,GAAG,QAAS7nB,GAC7B,OAAOsoB,GAAGU,QAAQhkB,EAAGV,EAAGjD,GAWxB,MAAMgnB,WAAWH,GAIjBhsB,YAEA8D,EAAGxF,GACC8B,QAASpF,KAAKgM,KAAOlD,EAAG9I,KAAK+xB,kBAAoBzuB,EAErDmL,eAAe3F,EAAGxF,GACd,OAAO,IAAI6tB,GAAGroB,EAAGxF,GAErBmuB,OAAO3oB,GACH,MAAMxF,EAAItD,KAAK+xB,kBAAkB3nB,KAAK9G,GAAKA,EAAEmuB,OAAO3oB,KAAKsH,QAAQtH,GAAKA,EAAEsR,aAAa9a,OAAS,IAC9F,OAAO,IAAMgE,EAAEhE,OAASgE,EAAE,GAAKgX,GAAG3U,OAAOrC,EAAGtD,KAAKgyB,gBAErDX,OAAOvoB,GACH,MAAMxF,EAAItD,KAAKyxB,OAAO3oB,GACtB,OAAO,IAAMxF,EAAE8W,aAAa9a,OAASwJ,GAAK,SAASA,EAAGxF,GAClD,IAAI6G,EAAIrB,EACR,MAAMsE,EAAI9J,EAAE6W,sBACZ,IAAK,MAAMrR,KAAKsE,EAAGskB,GAAGvnB,EAAGrB,GAAIqB,EAAIgX,GAAGhX,EAAGrB,GAHD,CAOzCA,EAAEmjB,OAAQ3oB,GAAI,IAAIspB,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAWlL,GAAGrY,EAAEmjB,OAAQ3oB,KAEjE2uB,uBACI,OAAOjyB,KAAK+xB,kBAEhBC,eACI,MAAO,QAAUhyB,KAAKgM,KAAO,MAAoC,MAarE,SAASkmB,MAAMppB,GAEf,OAAOA,EAAEqG,SAASrG,GAAKqpB,GAAG,KAAMrpB,KAAMqoB,GAAGW,QAAQ,KAAkChpB,GAYnF,SAASspB,MAAMtpB,GAEf,OAAOA,EAAEqG,SAASrG,GAAKqpB,GAAG,MAAOrpB,KAAMqoB,GAAGW,QAAQ,MAAoChpB,GAWtF,MAAMupB,WAAWpB,GAIjBjsB,YAAY8D,EAAGxF,GACX8B,QAASpF,KAAKsxB,OAASxoB,EAAG9I,KAAKsyB,WAAahvB,EAE5CtD,KAAKgM,KAAO,UAEhByC,eAAe3F,EAAGxF,GACd,OAAO,IAAI+uB,GAAGvpB,EAAGxF,GAErB+tB,OAAOvoB,GACH,MAAMxF,EAAI,SAASwF,EAAGxF,EAAG6G,GACrB,GAAI,OAASrB,EAAEyX,QAAS,MAAM,IAAIhV,EAAEX,EAAG,wFACvC,GAAI,OAAS9B,EAAE0X,MAAO,MAAM,IAAIjV,EAAEX,EAAG,qFACrC,MAAMwC,EAAI,IAAI2N,GAAGzX,EAAG6G,GACpB,OAAO,SAASrB,EAAGxF,GACf,GAAI,OAASud,GAAG/X,GAAI,CAEhB,MAAMqB,EAAI2W,GAAGhY,GACb,OAASqB,GAAKooB,GAAGzpB,EAAGqB,EAAG7G,EAAEgW,QAJ1B,CAMLxQ,EAAGsE,GAAIA,EAVH,CAsBbtE,EAAEmjB,OAAQjsB,KAAKsxB,OAAQtxB,KAAKsyB,YACzB,OAAO,IAAI1F,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAW,SAASvjB,EAAGxF,GAEhD,MAAM6G,EAAIrB,EAAE6X,gBAAgBlG,OAAO,CAAEnX,IACrC,OAAO,IAAIod,GAAG5X,EAAE6H,KAAM7H,EAAEgI,gBAAiB3G,EAAGrB,EAAEyR,QAAQtL,QAASnG,EAAEoG,MAAOpG,EAAE8X,UAAW9X,EAAEyX,QAASzX,EAAE0X,OAH9D,CAItC1X,EAAEmjB,OAAQ3oB,KAehB,SAASkvB,GAAG1pB,EAAGxF,EAAI,OACnB,MAAM6G,EAAI7G,EAAG8J,EAAIujB,GAAG,UAAW7nB,GAC/B,OAAOupB,GAAGP,QAAQ1kB,EAAGjD,GASrB,MAAMsoB,WAAWxB,GAIjBjsB,YAEA8D,EAAGxF,EAAG6G,GACF/E,QAASpF,KAAKgM,KAAOlD,EAAG9I,KAAK0yB,OAASpvB,EAAGtD,KAAK2yB,WAAaxoB,EAE/DsE,eAAe3F,EAAGxF,EAAG6G,GACjB,OAAO,IAAIsoB,GAAG3pB,EAAGxF,EAAG6G,GAExBknB,OAAOvoB,GACH,OAAO,IAAI8jB,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAW,SAASvjB,EAAGxF,EAAG6G,GACnD,OAAO,IAAIuW,GAAG5X,EAAE6H,KAAM7H,EAAEgI,gBAAiBhI,EAAE6X,gBAAgB1R,QAASnG,EAAEyR,QAAQtL,QAAS3L,EAAG6G,EAAGrB,EAAEyX,QAASzX,EAAE0X,OADtE,CAEtC1X,EAAEmjB,OAAQjsB,KAAK0yB,OAAQ1yB,KAAK2yB,cAUlC,SAASC,GAAG9pB,GACZ,OAAO0I,GAAG,QAAS1I,GAAI2pB,GAAGX,QAAQ,QAAShpB,EAAG,KAY9C,SAAS+pB,GAAG/pB,GACZ,OAAO0I,GAAG,cAAe1I,GAAI2pB,GAAGX,QAAQ,cAAehpB,EAAG,KAS1D,MAAMgqB,WAAW7B,GAIjBjsB,YAEA8D,EAAGxF,EAAG6G,GACF/E,QAASpF,KAAKgM,KAAOlD,EAAG9I,KAAK+yB,aAAezvB,EAAGtD,KAAKgzB,WAAa7oB,EAErEsE,eAAe3F,EAAGxF,EAAG6G,GACjB,OAAO,IAAI2oB,GAAGhqB,EAAGxF,EAAG6G,GAExBknB,OAAOvoB,GACH,MAAMxF,EAAI2vB,GAAGnqB,EAAG9I,KAAKgM,KAAMhM,KAAK+yB,aAAc/yB,KAAKgzB,YACnD,OAAO,IAAIpG,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAW,SAASvjB,EAAGxF,GAChD,OAAO,IAAIod,GAAG5X,EAAE6H,KAAM7H,EAAEgI,gBAAiBhI,EAAE6X,gBAAgB1R,QAASnG,EAAEyR,QAAQtL,QAASnG,EAAEoG,MAAOpG,EAAE8X,UAAWtd,EAAGwF,EAAE0X,OAD9E,CAEtC1X,EAAEmjB,OAAQ3oB,KAIpB,SAAS4vB,MAAMpqB,GACX,OAAOgqB,GAAGhB,QAAQ,UAAWhpB,GACd,GAGnB,SAASqqB,MAAMrqB,GACX,OAAOgqB,GAAGhB,QAAQ,aAAchpB,GACjB,GASf,MAAMsqB,WAAWnC,GAIjBjsB,YAEA8D,EAAGxF,EAAG6G,GACF/E,QAASpF,KAAKgM,KAAOlD,EAAG9I,KAAK+yB,aAAezvB,EAAGtD,KAAKgzB,WAAa7oB,EAErEsE,eAAe3F,EAAGxF,EAAG6G,GACjB,OAAO,IAAIipB,GAAGtqB,EAAGxF,EAAG6G,GAExBknB,OAAOvoB,GACH,MAAMxF,EAAI2vB,GAAGnqB,EAAG9I,KAAKgM,KAAMhM,KAAK+yB,aAAc/yB,KAAKgzB,YACnD,OAAO,IAAIpG,GAAG9jB,EAAEyjB,UAAWzjB,EAAEujB,UAAW,SAASvjB,EAAGxF,GAChD,OAAO,IAAIod,GAAG5X,EAAE6H,KAAM7H,EAAEgI,gBAAiBhI,EAAE6X,gBAAgB1R,QAASnG,EAAEyR,QAAQtL,QAASnG,EAAEoG,MAAOpG,EAAE8X,UAAW9X,EAAEyX,QAASjd,GADpF,CAEtCwF,EAAEmjB,OAAQ3oB,KAIpB,SAAS+vB,MAAMvqB,GACX,OAAOsqB,GAAGtB,QAAQ,YAAahpB,GAChB,GAGnB,SAASwqB,MAAMxqB,GACX,OAAOsqB,GAAGtB,QAAQ,QAAShpB,GACZ,GAGgD,SAASmqB,GAAGnqB,EAAGxF,EAAG6G,EAAGiD,GACpF,GAAIjD,EAAE,GAAKoD,EAAEpD,EAAE,IAAKA,EAAE,aAAcgmB,GAAI,OAAO,SAASrnB,EAAGxF,EAAG6G,EAAGiD,EAAGU,GAChE,IAAKV,EAAG,MAAM,IAAI7B,EAAET,EAAG,uDAAuDX,QAC9E,MAAM9K,EAAI,GAQF,IAAK,MAAM8K,KAAK6W,GAAGlY,GAAI,GAAIqB,EAAEmP,MAAM7I,aAAcpR,EAAEiC,KAAKmX,GAAGnV,EAAG8J,EAAEhH,UAAY,CAChF,MAAM0C,EAAIsE,EAAErH,KAAKuT,MAAMnP,EAAEmP,OACzB,GAAI1C,GAAG9N,GAAI,MAAM,IAAIyC,EAAEX,EAAG,+FAAiGT,EAAEmP,MAAQ,2HACrI,GAAI,OAASxQ,EAAG,CACZ,MAAMA,EAAIqB,EAAEmP,MAAMrJ,kBAClB,MAAM,IAAI1E,EAAEX,EAAG,+FAA+F9B,4CAElHzJ,EAAEiC,KAAKwH,GAEX,OAAO,IAAIkQ,GAAG3Z,EAAGyO,GAnB0B,CAuB9ChF,EAAEmjB,OAAQnjB,EAAEyjB,UAAUzE,YAAaxkB,EAAG6G,EAAE,GAAGmmB,UAAWljB,GACvD,CACI,MAAMU,EAAI4gB,GAAG5lB,EAAEyjB,WACf,OAAO,SAASzjB,EAAGxF,EAAG6G,EAAGiD,EAAGU,EAAGzO,GAE3B,MAAMgO,EAAIvE,EAAE6X,gBACZ,GAAI7S,EAAExO,OAAS+N,EAAE/N,OAAQ,MAAM,IAAIiM,EAAEX,EAAG,kCAAkCwC,8FAC1E,MAAMnL,EAAI,GACV,IAAK,IAAI5C,EAAI,EAAGA,EAAIyO,EAAExO,OAAQD,IAAK,CAC/B,MAAME,EAAIuO,EAAEzO,GACZ,GAAIgO,EAAEhO,GAAGia,MAAM7I,aAAc,CACzB,GAAI,iBAAmBlR,EAAG,MAAM,IAAIgM,EAAEX,EAAG,uDAAuDwC,yBAAyB7N,KACzH,IAAKwhB,GAAGjY,KAAO,IAAMvJ,EAAE2Q,QAAQ,KAAM,MAAM,IAAI3E,EAAEX,EAAG,+FAA+FwC,yCAAyC7N,wBAC5L,MAAM4K,EAAIrB,EAAE6H,KAAK3B,MAAMgB,GAAGY,WAAWrR,IACrC,IAAKmR,GAAGU,cAAcjH,GAAI,MAAM,IAAIoB,EAAEX,EAAG,qGAAqGwC,kDAAkDjD,4DAChM,MAAM2D,EAAI,IAAI4C,GAAGvG,GACjBlI,EAAEX,KAAKmX,GAAGnV,EAAGwK,QACV,CACH,MAAMhF,EAAI+mB,GAAG1lB,EAAGiD,EAAG7N,GACnB0C,EAAEX,KAAKwH,IAGf,OAAO,IAAIkQ,GAAG/W,EAAG5C,GAnBd,CAyBVyJ,EAAEmjB,OAAQnjB,EAAEyjB,UAAUzE,YAAaha,EAAGxK,EAAG6G,EAAGiD,IAIjD,SAASwkB,GAAG9oB,EAAGxF,EAAG6G,GACd,GAAI,iBAAoBA,EAAIoD,EAAEpD,IAAK,CAC/B,GAAI,KAAOA,EAAG,MAAM,IAAIoB,EAAEX,EAAG,qHAC7B,IAAKmW,GAAGzd,KAAO,IAAM6G,EAAE+F,QAAQ,KAAM,MAAM,IAAI3E,EAAEX,EAAG,yGAAyGT,gCAC7J,MAAMiD,EAAI9J,EAAEqN,KAAK3B,MAAMgB,GAAGY,WAAWzG,IACrC,IAAKuG,GAAGU,cAAchE,GAAI,MAAM,IAAI7B,EAAEX,EAAG,kIAAkIwC,uDAAuDA,EAAE9N,YACpO,OAAOmZ,GAAG3P,EAAG,IAAI4H,GAAGtD,IAExB,GAAIjD,aAAaiiB,GAAI,OAAO3T,GAAG3P,EAAGqB,EAAEmiB,MACpC,MAAM,IAAI/gB,EAAEX,EAAG,uHAAuH0G,GAAGnH,OAMzI,SAASwnB,GAAG7oB,EAAGxF,GACf,IAAK/C,MAAMC,QAAQsI,IAAM,IAAMA,EAAExJ,OAAQ,MAAM,IAAIiM,EAAEX,EAAG,qDAAqDtH,EAAEkI,wBAC/G,GAAI1C,EAAExJ,OAAS,GAAI,MAAM,IAAIiM,EAAEX,EAAG,mBAAmBtH,EAAEkI,4EAcvD,SAASkmB,GAAG5oB,EAAGxF,GACf,GAAIA,EAAE4W,eAAgB,CAClB,MAAM/P,EAAI2W,GAAGhY,GAAIsE,EAAI9J,EAAEgW,MACvB,GAAI,OAASnP,IAAMA,EAAEjB,QAAQkE,GAAI,MAAM,IAAI7B,EAAEX,EAAG,oJAAoJT,EAAEqB,oBAAoB4B,EAAE5B,eAC5N,MAAMsC,EAAI+S,GAAG/X,GACb,OAASgF,GAAKykB,GAAGzpB,EAAGsE,EAAGU,GAE3B,MAAM3D,EAAI,SAASrB,EAAGxF,GAClB,IAAK,MAAM6G,KAAKrB,EAAG,IAAK,MAAMA,KAAKqB,EAAEgQ,sBAAuB,GAAI7W,EAAE4M,QAAQpH,EAAEyQ,KAAO,EAAG,OAAOzQ,EAAEyQ,GAC/F,OAAO,KAFD,CAGRzQ,EAAEyR,QAAS,SAASzR,GAClB,OAAQA,GACN,IAAK,KACH,MAAO,CAAE,KAAgC,UAE3C,IAAK,iBACH,MAAO,CAAE,iBAAiD,qBAAyD,UAErH,IAAK,KACH,MAAO,CAAE,qBAAyD,KAAyB,UAE7F,IAAK,qBACH,MAAO,CAAE,iBAAiD,qBAAyD,KAAyB,UAE9I,IAAK,SACH,MAAO,CAAE,iBAAiD,qBAAyD,KAAyB,SAAiC,MAE/K,QACE,MAAO,IAlBF,CAoBXxF,EAAEiW,KACJ,GAAI,OAASpP,EAEb,MAAMA,IAAM7G,EAAEiW,GAAK,IAAIhO,EAAEX,EAAG,gDAAgDtH,EAAEiW,GAAG/N,uBAAyB,IAAID,EAAEX,EAAG,kCAAkCtH,EAAEiW,GAAG/N,6BAA6BrB,EAAEqB,wBAG7L,SAAS+mB,GAAGzpB,EAAGxF,EAAG6G,GACd,IAAKA,EAAEjB,QAAQ5F,GAAI,MAAM,IAAIiI,EAAEX,EAAG,qGAAqGtH,EAAEkI,yCAAyClI,EAAEkI,0FAA0FrB,EAAEqB,wBAGpR,SAAS2mB,GAAGrpB,EAAGxF,GACX,KAAMA,aAAa8tB,IAAM9tB,aAAa6tB,IAAK,MAAM,IAAI5lB,EAAEX,EAAG,YAAY9B,oGA4B1E,SAASyqB,GAAGzqB,EAAGxF,EAAG6G,GACd,IAAIiD,EAIJ,OAAOA,EAAItE,EAAIqB,IAAMA,EAAEykB,OAASzkB,EAAE0kB,aAAe/lB,EAAE0qB,YAAYlwB,EAAG6G,GAAKrB,EAAE0qB,YAAYlwB,GAAKA,EAC1F8J,EAGJ,MAAMqmB,WAAW,MACbtH,aAAarjB,EAAGxF,EAAI,QAChB,OAAQiU,GAAGzO,IACT,KAAK,EACH,OAAO,KAET,KAAK,EACH,OAAOA,EAAE2O,aAEX,KAAK,EACH,OAAO1B,GAAGjN,EAAEiP,cAAgBjP,EAAEkP,aAEhC,KAAK,EACH,OAAOhY,KAAK0zB,iBAAiB5qB,EAAEuO,gBAEjC,KAAK,EACH,OAAOrX,KAAK2zB,uBAAuB7qB,EAAGxF,GAExC,KAAK,EACH,OAAOwF,EAAEkO,YAEX,KAAK,EACH,OAAOhX,KAAK4zB,aAAa5d,GAAGlN,EAAE4O,aAEhC,KAAK,EACH,OAAO1X,KAAK6zB,iBAAiB/qB,EAAE6O,gBAEjC,KAAK,EACH,OAAO3X,KAAK8zB,gBAAgBhrB,EAAE8O,eAEhC,KAAK,EACH,OAAO5X,KAAK+zB,aAAajrB,EAAEoP,WAAY5U,GAEzC,KAAK,GACH,OAAOtD,KAAKg0B,cAAclrB,EAAE+N,SAAUvT,GAExC,QACE,MAAMoD,KAGdstB,cAAclrB,EAAGxF,GACb,MAAM6G,EAAI,GACV,OAAOuK,GAAG5L,EAAEgO,QAAM,CAAIhO,EAAGsE,KACrBjD,EAAErB,GAAK9I,KAAKmsB,aAAa/e,EAAG9J,MAC3B6G,EAET2pB,gBAAgBhrB,GACZ,OAAO,IAAI8kB,GAAG7X,GAAGjN,EAAE+O,UAAW9B,GAAGjN,EAAEgP,YAEvCic,aAAajrB,EAAGxF,GACZ,OAAQwF,EAAEqP,QAAU,IAAI/N,KAAKtB,GAAK9I,KAAKmsB,aAAarjB,EAAGxF,KAE3DqwB,uBAAuB7qB,EAAGxF,GACtB,OAAQA,GACN,IAAK,WACH,MAAM6G,EAAI8M,GAAGnO,GACb,OAAO,MAAQqB,EAAI,KAAOnK,KAAKmsB,aAAahiB,EAAG7G,GAEjD,IAAK,WACH,OAAOtD,KAAK0zB,iBAAiBvc,GAAGrO,IAElC,QACE,OAAO,MAGf4qB,iBAAiB5qB,GACb,MAAMxF,EAAIkS,GAAG1M,GACb,OAAO,IAAIqN,GAAG7S,EAAEsS,QAAStS,EAAEwS,OAE/Bme,mBAAmBnrB,EAAGxF,GAClB,MAAM6G,EAAI6F,GAAGY,WAAW9H,GACxB0B,EAAEsZ,GAAG3Z,IACL,MAAMiD,EAAI,IAAIkB,GAAEnE,EAAEsF,IAAI,GAAItF,EAAEsF,IAAI,IAAK3B,EAAI,IAAI4C,GAAGvG,EAAEkF,SAAS,IAC3D,OAAOjC,EAAElE,QAAQ5F,IAEjBgH,EAAE,YAAYwD,gEAAgEV,EAAEmB,aAAanB,EAAEoB,gGAAgGlL,EAAEiL,aAAajL,EAAEkL,sBAChNV,IAGJ9I,YAAY8D,GACR1D,QAASpF,KAAKusB,UAAYzjB,EAE9B8qB,aAAa9qB,GACT,OAAO,IAAIukB,GAAGvkB,GAElB+qB,iBAAiB/qB,GACb,MAAMxF,EAAItD,KAAKi0B,mBAAmBnrB,EAAG9I,KAAKusB,UAAUzE,aACpD,OAAO,IAAIsE,GAAGpsB,KAAKusB,UAA4B,KAAMjpB,IAgBzD,SAAS4wB,GAAGprB,GACZ,MAAMxF,EAAIokB,IAAI5e,EAAIyI,GAAGzI,EAAGsjB,KAAKG,WAAYpiB,EAAI,IAAIspB,GAAG3qB,EAAEyjB,WACtD,OAAOrF,GAAG5jB,EAAG,CAAEwF,EAAEwjB,OAAQtf,MAAM1J,IAC3BkH,EAAE,IAAMlH,EAAEhE,QACV,MAAM8N,EAAI9J,EAAE,GACZ,OAAO,IAAI6sB,GAAGrnB,EAAEyjB,UAAWpiB,EAAGrB,EAAEwjB,KAAMlf,EAAE6S,kBAAoB7S,EAAI,KAAMtE,EAAEujB,cAe5E,SAAS8H,GAAGrrB,IACX,SAASA,GACN,GAAI,MAA6BA,EAAE8X,WAAa,IAAM9X,EAAE6X,gBAAgBrhB,OAAQ,MAAM,IAAIiM,EAAEzE,EAAG,0EADlG,EAEEgC,EAAIyI,GAAGzI,EAAG8jB,KAAKX,QAClB,MAAM3oB,EAAIokB,GAAG5e,EAAEyjB,WAAYpiB,EAAI,IAAIspB,GAAG3qB,EAAEyjB,WACxC,OA5mEJjZ,eAAkBxK,EAAGxF,GACjB,MAAM6G,EAAIM,EAAE3B,GAAIsE,EAAI8W,GAAG/Z,EAAEkB,EAAG6V,GAAG5d,IAC/B,aAAc6G,EAAES,EAAE,WAAYwC,EAAEgX,OAAQ,CACpCD,gBAAiB/W,EAAE+W,mBACnB/T,QAAQtH,KAAOA,EAAE3F,WAAWiH,KAAKtB,GAAK,SAASA,EAAGxF,EAAG6G,GACrD,MAAMiD,EAAIyW,GAAG/a,EAAGxF,EAAE+B,MAAOyI,EAAI2V,GAAGngB,EAAE2e,YAAa5iB,EAAIiE,EAAE8b,WAAaqE,GAAGngB,EAAE8b,YAAclE,GAAGnL,MAAO1C,EAAI,IAAIsR,GAAG,CACtG9H,SAAU,CACNC,OAAQxT,EAAEwT,UAGlB,OADQkI,GAAGqI,iBAAiBja,EAAGU,EAAGzO,EAAGgO,GALC,CAOxClD,EAAEkB,EAAGvC,EAAE3F,YAimEFixB,CAAG9wB,EAAGwF,EAAEmjB,QAAQjf,MAAM1J,IACzB,MAAM8J,EAAI9J,EAAE8G,KAAK9G,GAAK,IAAImtB,GAAG3nB,EAAEyjB,UAAWpiB,EAAG7G,EAAE8C,IAAK9C,EAAGwF,EAAEujB,aACzD,MAAO,MAA6BvjB,EAAEmjB,OAAOrL,WAI7CxT,EAAEinB,UAAW,IAAIzD,GAAG9nB,EAAGsE,MAI/B,SAASknB,GAAGxrB,EAAGxF,EAAG6G,GACd,MAAMiD,EAAImmB,IAAIzqB,EAAIyI,GAAGzI,EAAGsjB,KAAKC,UAAW/oB,EAAG6G,GAAI2D,EAAI6gB,GAAGD,GAAG5lB,EAAEyjB,WAAY,SAAUzjB,EAAEwjB,KAAMlf,EAAG,OAAStE,EAAEujB,UAAWliB,GAClH,OAAOmc,GAAGoB,GAAG5e,EAAEyjB,WAAY,CAAEze,EAAEogB,WAAWplB,EAAEwjB,KAAMtK,GAAGuS,UAGzD,SAASC,GAAG1rB,EAAGxF,EAAG6G,KAAMiD,GACpB,MAAMU,EAAI4gB,IAAI5lB,EAAIyI,GAAGzI,EAAGsjB,KAAKG,WAGzB,IAAIltB,EAER,OADAA,EAAI,iBAAoBiE,EAAIiK,EAAEjK,KAAOA,aAAaiqB,GAAKoC,GAAG7hB,EAAG,YAAahF,EAAEwjB,KAAMhpB,EAAG6G,EAAGiD,GAAKqiB,GAAG3hB,EAAG,YAAahF,EAAEwjB,KAAMhpB,GACjHgjB,GAAGoB,GAAG5e,EAAEyjB,WAAY,CAAEltB,EAAE6uB,WAAWplB,EAAEwjB,KAAMtK,GAAGE,QAAO,MAc5D,SAASuS,GAAG3rB,GACZ,OAAOwd,GAAGoB,IAAI5e,EAAIyI,GAAGzI,EAAGsjB,KAAKG,WAAY,CAAE,IAAI5J,GAAG7Z,EAAEwjB,KAAMtK,GAAGuS,UAiB7D,SAASG,GAAG5rB,EAAGxF,GACf,MAAM6G,EAAI4iB,GAAGjkB,EAAIyI,GAAGzI,EAAG4jB,KAAMtf,EAAImmB,GAAGzqB,EAAEujB,UAAW/oB,GAAIwK,EAAI6gB,GAAGD,GAAG5lB,EAAEyjB,WAAY,SAAUpiB,EAAEmiB,KAAMlf,EAAG,OAASjD,EAAEkiB,UAAW,IACxH,OAAO/F,GAAGoB,GAAG5e,EAAEyjB,WAAY,CAAEze,EAAEogB,WAAW/jB,EAAEmiB,KAAMtK,GAAGE,QAAO,MAAQlV,MAAI,IAAQ7C,IAgChF,SAASwqB,GAAG7rB,GACZ,MAAMxF,EAAIiO,GAAGzI,EAAEyjB,UAAW5D,IAAKxe,EAAIud,GAAGpkB,GAAI8J,EAAI,IAAIqmB,GAAGnwB,GACrD,OAAO,IAAIgoB,GAAGxiB,EAAGqB,EAAGiD,GAAGqe,MAcvB,SAASmJ,GAAG9rB,EAAGxF,GACf,OAAO6pB,GAAGrkB,EAAEuiB,MAAO/nB,EAAE+nB,QAAUuE,EAAE9mB,EAAE/C,OAAQzC,EAAEyC,QAsB7C,SAAS8uB,KACT,OAAO,IAAI5F,GAAG,eAMd,SAAS6F,KACT,OAAO,IAAI1F,GAAG,mBAcd,SAAS2F,MAAMjsB,GAGf,OAAO,IAAIumB,GAAG,aAAcvmB,GAa5B,SAASksB,MAAMlsB,GAGf,OAAO,IAAIymB,GAAG,cAAezmB,GAqB7B,SAASmsB,GAAGnsB,GACZ,OAAO,IAAI0mB,GAAG,YAAa1mB,GA0B3B,MAAMosB,GAENlwB,YAAY8D,EAAGxF,GACXtD,KAAKowB,WAAatnB,EAAG9I,KAAKm1B,eAAiB7xB,EAAGtD,KAAKo1B,WAAa,GAAIp1B,KAAKq1B,YAAa,EACtFr1B,KAAKs1B,YAAc5G,GAAG5lB,GAE1BqD,IAAIrD,EAAGxF,EAAG6G,GACNnK,KAAKu1B,sBACL,MAAMnoB,EAAIooB,GAAG1sB,EAAG9I,KAAKowB,YAAatiB,EAAIylB,GAAGnmB,EAAEif,UAAW/oB,EAAG6G,GAAI9K,EAAIsvB,GAAG3uB,KAAKs1B,YAAa,iBAAkBloB,EAAEkf,KAAMxe,EAAG,OAASV,EAAEif,UAAWliB,GACzI,OAAOnK,KAAKo1B,WAAW9zB,KAAKjC,EAAE6uB,WAAW9gB,EAAEkf,KAAMtK,GAAGuS,SAAUv0B,KAElEwmB,OAAO1d,EAAGxF,EAAG6G,KAAMiD,GACfpN,KAAKu1B,sBACL,MAAMznB,EAAI0nB,GAAG1sB,EAAG9I,KAAKowB,YAGb,IAAI/wB,EACZ,OAAOA,EAAI,iBAAoBiE,EAAIiK,EAAEjK,KAAOA,aAAaiqB,GAAKoC,GAAG3vB,KAAKs1B,YAAa,oBAAqBxnB,EAAEwe,KAAMhpB,EAAG6G,EAAGiD,GAAKqiB,GAAGzvB,KAAKs1B,YAAa,oBAAqBxnB,EAAEwe,KAAMhpB,GAC7KtD,KAAKo1B,WAAW9zB,KAAKjC,EAAE6uB,WAAWpgB,EAAEwe,KAAMtK,GAAGE,QAAO,KAAOliB,KAOxDse,OAAOxV,GACV9I,KAAKu1B,sBACL,MAAMjyB,EAAIkyB,GAAG1sB,EAAG9I,KAAKowB,YACrB,OAAOpwB,KAAKo1B,WAAap1B,KAAKo1B,WAAW3a,OAAO,IAAIkI,GAAGrf,EAAEgpB,KAAMtK,GAAGuS,SAAUv0B,KAazEy1B,SACH,OAAOz1B,KAAKu1B,sBAAuBv1B,KAAKq1B,YAAa,EAAIr1B,KAAKo1B,WAAW91B,OAAS,EAAIU,KAAKm1B,eAAen1B,KAAKo1B,YAAczpB,QAAQC,UAEzI2pB,sBACI,GAAIv1B,KAAKq1B,WAAY,MAAM,IAAI9pB,EAAEL,EAAG,wEAI5C,SAASsqB,GAAG1sB,EAAGxF,GACX,IAAKwF,EAAIyE,EAAEzE,IAAIyjB,YAAcjpB,EAAG,MAAM,IAAIiI,EAAEX,EAAG,uEAC/C,OAAO9B,EAeP,SAAS4sB,GAAG5sB,GACZ,MAAMxF,EAAIokB,GAAG5e,EAAIyI,GAAGzI,EAAG6f,KACvB,OAAO,IAAIuM,GAAGpsB,GAAIA,GAAKwd,GAAGhjB,EAAGwF,KAsB7B,MAAM6sB,GACN3wB,YAAY8D,GACR9I,KAAKurB,UAAYziB,EAEjB9I,KAAK41B,aAAe,IAAI1pB,IAAKlM,KAAK61B,UAAY,GAAI71B,KAAK81B,WAAY,EAKnE91B,KAAK+1B,eAAiB,KAOtB/1B,KAAKg2B,YAAc,IAAIC,IAE3B3iB,aAAaxK,GACT,GAAI9I,KAAKk2B,wBAAyBl2B,KAAK61B,UAAUv2B,OAAS,EAAG,MAAM,IAAIiM,EAAEX,EAAG,8EAC5E,MAAMtH,QAAU4jB,GAAGlnB,KAAKurB,UAAWziB,GACnC,OAAOxF,EAAE6L,SAASrG,GAAK9I,KAAKm2B,cAAcrtB,KAAMxF,EAEpD6I,IAAIrD,EAAGxF,GACHtD,KAAKo2B,MAAM9yB,EAAE4qB,WAAWplB,EAAG9I,KAAKsiB,aAAaxZ,KAAM9I,KAAKg2B,YAAY3X,IAAIvV,EAAE0C,YAE9Egb,OAAO1d,EAAGxF,GACN,IACItD,KAAKo2B,MAAM9yB,EAAE4qB,WAAWplB,EAAG9I,KAAKq2B,sBAAsBvtB,KACxD,MAAOA,GACL9I,KAAK+1B,eAAiBjtB,EAE1B9I,KAAKg2B,YAAY3X,IAAIvV,EAAE0C,YAE3B8S,OAAOxV,GACH9I,KAAKo2B,MAAM,IAAIzT,GAAG7Z,EAAG9I,KAAKsiB,aAAaxZ,KAAM9I,KAAKg2B,YAAY3X,IAAIvV,EAAE0C,YAExE8H,eACI,GAAItT,KAAKk2B,wBAAyBl2B,KAAK+1B,eAAgB,MAAM/1B,KAAK+1B,eAClE,MAAMjtB,EAAI9I,KAAK41B,aAEP51B,KAAK61B,UAAU1mB,SAAS7L,IAC5BwF,EAAEwV,OAAOhb,EAAE8C,IAAIoF,eAInB1C,EAAEqG,SAAO,CAAGrG,EAAGxF,KACX,MAAM6G,EAAIuG,GAAG4lB,SAAShzB,GACtBtD,KAAK61B,UAAUv0B,KAAK,IAAIshB,GAAGzY,EAAGnK,KAAKsiB,aAAanY,cACzCmc,GAAGtmB,KAAKurB,UAAWvrB,KAAK61B,WAAY71B,KAAK81B,WAAY,EAEpEK,cAAcrtB,GACV,IAAIxF,EACJ,GAAIwF,EAAEmX,kBAAmB3c,EAAIwF,EAAEoW,YAAc,CACzC,IAAKpW,EAAEoX,eAAgB,MAAMxZ,IAE7BpD,EAAI4X,GAAGnL,MAEX,MAAM5F,EAAInK,KAAK41B,aAAanmB,IAAI3G,EAAE1C,IAAIoF,YACtC,GAAIrB,GACA,IAAK7G,EAAE4F,QAAQiB,GAEf,MAAM,IAAIoB,EAAEJ,EAAG,oDACZnL,KAAK41B,aAAazpB,IAAIrD,EAAE1C,IAAIoF,WAAYlI,GAK5Cgf,aAAaxZ,GAChB,MAAMxF,EAAItD,KAAK41B,aAAanmB,IAAI3G,EAAE0C,YAClC,OAAQxL,KAAKg2B,YAAYlY,IAAIhV,EAAE0C,aAAelI,EAAIA,EAAE4F,QAAQgS,GAAGnL,OAASiS,GAAGE,QAAO,GAAMF,GAAGC,WAAW3e,GAAK0e,GAAGuS,OAI3G8B,sBAAsBvtB,GACzB,MAAMxF,EAAItD,KAAK41B,aAAanmB,IAAI3G,EAAE0C,YAG1B,IAAKxL,KAAKg2B,YAAYlY,IAAIhV,EAAE0C,aAAelI,EAAG,CAClD,GAAIA,EAAE4F,QAAQgS,GAAGnL,OAUjB,MAAM,IAAIxE,EAAEX,EAAG,+CAEH,OAAOoX,GAAGC,WAAW3e,GAIrC,OAAO0e,GAAGE,QAAO,GAErBkU,MAAMttB,GACF9I,KAAKk2B,wBAAyBl2B,KAAK61B,UAAUv0B,KAAKwH,GAEtDotB,0BAkBA,MAAMK,GAAK,CACXC,YAAa,GAuBjB,MAAMC,GACFzxB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACpB9N,KAAK02B,WAAa5tB,EAAG9I,KAAKurB,UAAYjoB,EAAGtD,KAAKgoB,QAAU7d,EAAGnK,KAAK22B,eAAiBvpB,EACjFpN,KAAK42B,SAAW9oB,EAAG9N,KAAK4T,GAAKzJ,EAAEqsB,YAAax2B,KAAKmU,GAAK,IAAIoR,GAAGvlB,KAAK02B,WAAY,qBAElBjL,MAC5DzrB,KAAK4T,IAAM,EAAG5T,KAAKoU,KAEvBA,KACIpU,KAAKmU,GAAGxG,aACJ,MAAM7E,EAAI,IAAI6sB,GAAG31B,KAAKurB,WAAYjoB,EAAItD,KAAKqU,GAAGvL,GAC9CxF,GAAKA,EAAE0J,MAAM1J,IACTtD,KAAK02B,WAAWG,kBAAkB,IAAM/tB,EAAE2sB,SAASzoB,WAC/ChN,KAAK42B,SAAShrB,QAAQtI,MACtB8iB,OAAOtd,IACP9I,KAAKuU,GAAGzL,WAEZsd,OAAOtd,IACP9I,KAAKuU,GAAGzL,SAIpBuL,GAAGvL,GACC,IACI,MAAMxF,EAAItD,KAAK22B,eAAe7tB,GAC9B,OAAQ2I,GAAGnO,IAAMA,EAAE8iB,OAAS9iB,EAAE0J,KAAO1J,GAAKtD,KAAK42B,SAAS/qB,OAAOpL,MAAM,+CACrE,MACF,MAAOqI,GAEL,OAAO9I,KAAK42B,SAAS/qB,OAAO/C,GAAI,MAGxCyL,GAAGzL,GACC9I,KAAK4T,GAAK,GAAK5T,KAAK0U,GAAG5L,IAAM9I,KAAK4T,IAAM,EAAG5T,KAAK02B,WAAWG,kBAAkB,KAAO72B,KAAKoU,KACzFzI,QAAQC,cAAgB5L,KAAK42B,SAAS/qB,OAAO/C,GAEjD4L,GAAG5L,GACC,GAAI,kBAAoBA,EAAEzD,KAAM,CAG5B,MAAM/B,EAAIwF,EAAE7D,KACZ,MAAO,YAAc3B,GAAK,wBAA0BA,GAAK,mBAAqBA,IAO9E,SAASwF,GACL,OAAQA,GACN,QACE,OAAOpC,IAET,KAAKgE,EACL,KAAKC,EACL,KAAKE,EACL,KAAKI,EACL,KAAKI,EACL,KAAKC,EAGe,KAAKN,EACvB,OAAO,EAET,KAAKJ,EACL,KAAKE,EACL,IAzmMwG,iBA0mMxG,KAAKC,EACL,KAAKG,EAIe,KAAKC,EACzB,KAAKC,EACL,KAAKtE,EACL,IAlnM8T,YAmnM5T,OAAO,GA5Bf,CA8BExD,GAEN,OAAO,GAoB2D,SAASwzB,KAG/E,MAAO,oBAAsB3zB,SAAWA,SAAW,KA6BnD,MAAM4zB,GACN/xB,YAAY8D,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACpB9N,KAAK02B,WAAa5tB,EAAG9I,KAAKylB,QAAUniB,EAAGtD,KAAKg3B,aAAe7sB,EAAGnK,KAAKuZ,GAAKnM,EAAGpN,KAAKi3B,gBAAkBnpB,EAClG9N,KAAK42B,SAAW,IAAInrB,EAAGzL,KAAKgN,KAAOhN,KAAK42B,SAASlrB,QAAQsB,KAAK6a,KAAK7nB,KAAK42B,SAASlrB,SAIjF1L,KAAK42B,SAASlrB,QAAQ0a,OAAOtd,QAe1B2F,yBAAyB3F,EAAGxF,EAAG6G,EAAGiD,EAAGU,GACxC,MAAMzO,EAAIqJ,KAAKD,MAAQ0B,EAAGkD,EAAI,IAAI0pB,GAAGjuB,EAAGxF,EAAGjE,EAAG+N,EAAGU,GACjD,OAAOT,EAAEd,MAAMpC,GAAIkD,EAKhBd,MAAMzD,GACT9I,KAAKk3B,YAAcC,YAAY,IAAMn3B,KAAKo3B,sBAAuBtuB,GAK9Dgd,YACH,OAAO9lB,KAAKo3B,qBAQTzR,OAAO7c,GACV,OAAS9I,KAAKk3B,cAAgBl3B,KAAKq3B,eAAgBr3B,KAAK42B,SAAS/qB,OAAO,IAAIN,EAAEb,EAAG,uBAAyB5B,EAAI,KAAOA,EAAI,OAE7HsuB,qBACIp3B,KAAK02B,WAAWG,sBAAwB,OAAS72B,KAAKk3B,aAAel3B,KAAKq3B,eAC1Er3B,KAAKuZ,KAAKvM,MAAMlE,GAAK9I,KAAK42B,SAAShrB,QAAQ9C,MAAQ6C,QAAQC,YAE/DyrB,eACI,OAASr3B,KAAKk3B,cAAgBl3B,KAAKi3B,gBAAgBj3B,MAAOq3B,aAAar3B,KAAKk3B,aAC5El3B,KAAKk3B,YAAc,OAmBvB,MAAMI,GACNtyB,cAEIhF,KAAK2U,GAAKhJ,QAAQC,UAGlB5L,KAAKsV,GAAK,GAGVtV,KAAKwV,IAAK,EAGVxV,KAAK+V,GAAK,GAEV/V,KAAKgW,GAAK,KAGVhW,KAAKmW,IAAK,EAEVnW,KAAK4W,IAAK,EAEV5W,KAAKiX,GAAK,GAEVjX,KAAKmU,GAAK,IAAIoR,GAAGvlB,KAAM,qBAIvBA,KAAKmX,GAAK,KACN,MAAMrO,EAAIguB,KACVhuB,GAAKoB,EAAE,aAAc,+BAAiCpB,EAAEyuB,iBAAkBv3B,KAAKmU,GAAG7F,KAEtF,MAAMxF,EAAIguB,KACVhuB,GAAK,mBAAqBA,EAAE0uB,kBAAoB1uB,EAAE0uB,iBAAiB,mBAAoBx3B,KAAKmX,IAE5FsgB,qBACA,OAAOz3B,KAAKwV,GAKTqhB,iBAAiB/tB,GAEpB9I,KAAK03B,QAAQ5uB,GAEjB6uB,oCAAoC7uB,GAChC9I,KAAKsX,KAELtX,KAAKuX,GAAGzO,GAEZ8uB,oBAAoB9uB,GAChB,IAAK9I,KAAKwV,GAAI,CACVxV,KAAKwV,IAAK,EAAIxV,KAAK4W,GAAK9N,IAAK,EAC7B,MAAMxF,EAAIwzB,KACVxzB,GAAK,mBAAqBA,EAAEu0B,qBAAuBv0B,EAAEu0B,oBAAoB,mBAAoB73B,KAAKmX,KAG1GugB,QAAQ5uB,GACJ,GAAI9I,KAAKsX,KAAMtX,KAAKwV,GAEpB,OAAO,IAAI7J,kBAIH,MAAMrI,EAAI,IAAImI,EACtB,OAAOzL,KAAKuX,IAAI,IAAMvX,KAAKwV,IAAMxV,KAAK4W,GAAKjL,QAAQC,WAAa9C,IAAIkE,KAAK1J,EAAEsI,QAAStI,EAAEuI,QACtFvI,EAAEoI,WAAWsB,MAAI,IAAQ1J,EAAEoI,UAE/Bc,iBAAiB1D,GACb9I,KAAK62B,kBAAgB,KAAS72B,KAAKsV,GAAGhU,KAAKwH,GAAI9I,KAAKwX,QAKjDlE,WACH,GAAI,IAAMtT,KAAKsV,GAAGhW,OAAQ,CACtB,UACUU,KAAKsV,GAAG,KAAMtV,KAAKsV,GAAGwiB,QAAS93B,KAAKmU,GAAGuR,QAC/C,MAAO5c,GACL,IAkBA,SAASA,GAGL,MAAO,8BAAgCA,EAAEzD,KAH7C,CAoBXyD,GAAI,MAAMA,EAEiBoB,EAAE,aAAc,0CAA4CpB,GAEhF9I,KAAKsV,GAAGhW,OAAS,GAWjBU,KAAKmU,GAAGxG,GAAC,IAAQ3N,KAAKwX,QAG9BD,GAAGzO,GACC,MAAMxF,EAAItD,KAAK2U,GAAG3H,MAAI,KAAShN,KAAKmW,IAAK,EAAIrN,IAAIsd,OAAOtd,IACpD9I,KAAKgW,GAAKlN,EAAG9I,KAAKmW,IAAK,EACvB,MAAM7S,EAMN,SAASwF,GACL,IAAIxF,EAAIwF,EAAE5D,SAAW,GAErB,OADA4D,EAAEivB,QAAUz0B,EAAIwF,EAAEivB,MAAMhxB,SAAS+B,EAAE5D,SAAW4D,EAAEivB,MAAQjvB,EAAE5D,QAAU,KAAO4D,EAAEivB,OACtEz0B,EAHX,CA6BPwF,GAIO,MAAMwB,EAAE,6BAA8BhH,GAAIwF,KAC1CkE,MAAMlE,IAAM9I,KAAKmW,IAAK,EAAIrN,QAC9B,OAAO9I,KAAK2U,GAAKrR,EAAGA,EAExBuiB,kBAAkB/c,EAAGxF,EAAG6G,GACpBnK,KAAKsX,KAELtX,KAAKiX,GAAG/G,QAAQpH,IAAM,IAAMxF,EAAI,GAChC,MAAM8J,EAAI2pB,GAAGiB,kBAAkBh4B,KAAM8I,EAAGxF,EAAG6G,GAAIrB,GAAK9I,KAAKoY,GAAGtP,KAC5D,OAAO9I,KAAK+V,GAAGzU,KAAK8L,GAAIA,EAE5BkK,KACItX,KAAKgW,IAAMtP,IAEfuxB,6BAIO3kB,WAKH,IAAIxK,EACJ,GACIA,EAAI9I,KAAK2U,SAAU7L,QACdA,IAAM9I,KAAK2U,IAKjB4D,GAAGzP,GACN,IAAK,MAAMxF,KAAKtD,KAAK+V,GAAI,GAAIzS,EAAEmiB,UAAY3c,EAAG,OAAO,EACrD,OAAO,EAQJ2P,GAAG3P,GAEN,OAAO9I,KAAKsY,KAAKtL,WAEbhN,KAAK+V,GAAGyC,MAAI,CAAG1P,EAAGxF,IAAMwF,EAAEkuB,aAAe1zB,EAAE0zB,eAC3C,IAAK,MAAM1zB,KAAKtD,KAAK+V,GAAI,GAAIzS,EAAEwiB,YAAa,QAA4Bhd,GAAKxF,EAAEmiB,UAAY3c,EAAG,MAC9F,OAAO9I,KAAKsY,QAKbI,GAAG5P,GACN9I,KAAKiX,GAAG3V,KAAKwH,GAE4CsP,GAAGtP,GAE5D,MAAMxF,EAAItD,KAAK+V,GAAG7F,QAAQpH,GAC1B9I,KAAK+V,GAAGmiB,OAAO50B,EAAG,IAI1B,MAAM60B,GAEFnzB,YAAY8D,EAAGxF,GACXtD,KAAKowB,WAAatnB,EAAG9I,KAAKo4B,aAAe90B,EAAGtD,KAAKs1B,YAAc5G,GAAG5lB,GAO/D2G,IAAI3G,GACP,MAAMxF,EAAIkyB,GAAG1sB,EAAG9I,KAAKowB,YAAajmB,EAAI,IAAIspB,GAAGzzB,KAAKowB,YAClD,OAAOpwB,KAAKo4B,aAAaC,OAAO,CAAE/0B,EAAEgpB,OAAQtf,MAAMlE,IAC9C,IAAKA,GAAK,IAAMA,EAAExJ,OAAQ,OAAOoH,IACjC,MAAM0G,EAAItE,EAAE,GACZ,GAAIsE,EAAE6S,kBAAmB,OAAO,IAAIkQ,GAAGnwB,KAAKowB,WAAYjmB,EAAGiD,EAAEhH,IAAKgH,EAAG9J,EAAE+oB,WACvE,GAAIjf,EAAE8S,eAAgB,OAAO,IAAIiQ,GAAGnwB,KAAKowB,WAAYjmB,EAAG7G,EAAEgpB,KAAM,KAAMhpB,EAAE+oB,WACxE,MAAM3lB,OAGdyF,IAAIrD,EAAGxF,EAAG6G,GACN,MAAMiD,EAAIooB,GAAG1sB,EAAG9I,KAAKowB,YAAatiB,EAAIylB,GAAGnmB,EAAEif,UAAW/oB,EAAG6G,GAAI9K,EAAIsvB,GAAG3uB,KAAKs1B,YAAa,kBAAmBloB,EAAEkf,KAAMxe,EAAG,OAASV,EAAEif,UAAWliB,GAC1I,OAAOnK,KAAKo4B,aAAajsB,IAAIiB,EAAEkf,KAAMjtB,GAAIW,KAE7CwmB,OAAO1d,EAAGxF,EAAG6G,KAAMiD,GACf,MAAMU,EAAI0nB,GAAG1sB,EAAG9I,KAAKowB,YAGb,IAAI/wB,EACZ,OAAOA,EAAI,iBAAoBiE,EAAIiK,EAAEjK,KAAOA,aAAaiqB,GAAKoC,GAAG3vB,KAAKs1B,YAAa,qBAAsBxnB,EAAEwe,KAAMhpB,EAAG6G,EAAGiD,GAAKqiB,GAAGzvB,KAAKs1B,YAAa,qBAAsBxnB,EAAEwe,KAAMhpB,GAC/KtD,KAAKo4B,aAAa5R,OAAO1Y,EAAEwe,KAAMjtB,GAAIW,KAOlCse,OAAOxV,GACV,MAAMxF,EAAIkyB,GAAG1sB,EAAG9I,KAAKowB,YACrB,OAAOpwB,KAAKo4B,aAAa9Z,OAAOhb,EAAEgpB,MAAOtsB,MAsB7C,SAASs4B,GAAGxvB,EAAGxF,EAAG6G,GAClB,MAAMiD,EAAIsa,GAAG5e,EAAIyI,GAAGzI,EAAG6f,KAAM7a,EAAIxI,OAAOyT,OAAOzT,OAAOyT,OAAO,GAAIwd,IAAKpsB,IACrE,SAASrB,GACN,GAAIA,EAAE0tB,YAAc,EAAG,MAAM,IAAIjrB,EAAEX,EAAG,mCADzC,CAECkD,GACF,MAAMzO,EAAI,IAAIoM,EACd,OAAO,IAAIgrB,GAAG,IAAIa,GAAIlqB,EAAGU,GAAI3D,GAAK7G,EAAE,IAAI60B,GAAGrvB,EAAGqB,KAAM9K,GAAGosB,MAAOpsB,EAAEqM,QAWhEnC,EACF,GAAGuE,SAAW3D,EAAE,IEnvNL,MAiBXnF,YACWK,EACAkzB,EACAvsB,GAFAhM,KAAIqF,KAAJA,EACArF,KAAeu4B,gBAAfA,EACAv4B,KAAIgM,KAAJA,EAnBXhM,KAAiBw4B,mBAAG,EAIpBx4B,KAAYy4B,aAAe,GAE3Bz4B,KAAA04B,kBAA2C,OAE3C14B,KAAiB24B,kBAAwC,KAczDC,qBAAqBC,GAEnB,OADA74B,KAAK04B,kBAAoBG,EAClB74B,KAGT84B,qBAAqBN,GAEnB,OADAx4B,KAAKw4B,kBAAoBA,EAClBx4B,KAGT+4B,gBAAgBC,GAEd,OADAh5B,KAAKy4B,aAAeO,EACbh5B,KAGTi5B,2BAA2BC,GAEzB,OADAl5B,KAAK24B,kBAAoBO,EAClBl5B,OF2sNa,kBAAgB,CAAI8I,GAAIghB,mBAAoBxmB,EAAG0kB,QAAS7d,MAC5E,MAAMiD,EAAItE,EAAEqwB,YAAY,OAAOnP,eAAgBlc,EAAI,IAAI6a,GAAG,IAAI9b,GAAE/D,EAAEqwB,YAAY,kBAAmB,IAAIxrB,GAAE7E,EAAEqwB,YAAY,uBAAwB,SAASrwB,EAAGxF,GACrJ,IAAKgC,OAAOE,UAAUgP,eAAe4kB,MAAMtwB,EAAEkf,QAAS,CAAE,cAAgB,MAAM,IAAIzc,EAAEX,EAAG,uDACvF,OAAO,IAAI0D,GAAExF,EAAEkf,QAAQzZ,UAAWjL,GAFuG,CAmB5I8J,EAAG9J,GAAI8J,GACR,OAAOjD,GAAK2D,EAAEmb,aAAa9e,GAAI2D,IAC/B,UAAUgrB,sBAAqB,IAEnC1rB,EAAE,iBAAkB,QAAS,IAAKA,EAAE,iBAAkB,QAAS","preExistingComment":"firebase-firestore-lite.js.map"}