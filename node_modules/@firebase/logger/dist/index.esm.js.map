{"version":3,"file":"index.esm.js","sources":["../src/logger.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n"],"names":[],"mappings":"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"}