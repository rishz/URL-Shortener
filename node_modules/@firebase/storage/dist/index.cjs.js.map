{"version":3,"file":"index.cjs.js","sources":["../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/type.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/tasksnapshot.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../compat/tasksnapshot.ts","../compat/task.ts","../compat/list.ts","../compat/reference.ts","../src/implementation/failrequest.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../compat/service.ts","../compat/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","import { FirebaseError } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError extends FirebaseError {\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  constructor(code: Code, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, FirebaseStorageError.prototype);\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  get message(): string {\n    if (this.customData.serverResponse) {\n      return `${this.message}\\n${this.customData.serverResponse}`;\n    } else {\n      return this.message;\n    }\n  }\n\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n  }\n}\n\nexport const errors = {};\n\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error',\n  UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(message: string): FirebaseStorageError {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\n\n/**\n * An enumeration of the possible string formats for upload.\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\n/**\n * XHR headers\n */\nexport interface Headers {\n  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { internalError } from './error';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirebaseStorageError } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw new FirebaseStorageError(\n      Code.INVALID_ARGUMENT,\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw new FirebaseStorageError(\n      Code.INVALID_ARGUMENT,\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\nimport { Code, FirebaseStorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\n        Code.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (type.isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Reference } from '../reference';\nimport { StorageService } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!type.isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: StorageService): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: StorageService,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = UrlUtils.makeUrl(urlPart);\n    const queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport * as json from './json';\nimport { ListResult } from '../list';\nimport { StorageService } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: StorageService,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: StorageService,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(\n      service,\n      bucket,\n      text\n    );\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: StorageService,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: StorageService,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = MetadataUtils.toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: StorageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\nexport function multipartUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = MetadataUtils.toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = MetadataUtils.toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: StorageService,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: StorageService,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: FirebaseStorageError) => void;\nexport type CompleteFn = () => void;\nexport type Unsubscribe = () => void;\n\nexport interface StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n}\n\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      type.isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { canceled, Code, FirebaseStorageError } from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport { async as fbsAsync } from './implementation/async';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsRequests from './implementation/requests';\nimport { Reference } from './reference';\nimport { getMappings } from './implementation/metadata';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * @internal\n   */\n  _blob: FbsBlob;\n  /**\n   * @internal\n   */\n  _metadata: Metadata | null;\n  private _mappings: fbsMetadata.Mappings;\n  /**\n   * @internal\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserver<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * @internal\n   */\n  _state: InternalTaskState;\n  private _error?: FirebaseStorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: FirebaseStorageError) => void;\n  private _metadataErrorHandler: (p1: FirebaseStorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: FirebaseStorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._ref.storage.getAuthToken().then(authToken => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this._chunkMultiplier;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this._increaseMultiplier();\n          this._request = undefined;\n          this._updateProgress(newStatus.current);\n          if (newStatus.finalized) {\n            this._metadata = newStatus.metadata;\n            this._transition(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return new UploadTaskSnapshot(\n      this._transferred,\n      this._blob.size(),\n      externalState,\n      this._metadata!,\n      this,\n      this._ref\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | ((a: UploadTaskSnapshot) => unknown),\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(nextOrObserver, error, completed);\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: FirebaseStorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(\n    onRejected: (p1: FirebaseStorageError) => T | Promise<T>\n  ): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: FirebaseStorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as FirebaseStorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, parent, lastComponent } from './implementation/path';\nimport {\n  list as requestsList,\n  getMetadata as requestsGetMetadata,\n  updateMetadata as requestsUpdateMetadata,\n  getDownloadUrl as requestsGetDownloadUrl,\n  deleteObject as requestsDeleteObject\n} from './implementation/requests';\nimport { StringFormat, dataFromString } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { StorageService } from './service';\nimport { ListOptions, ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  /**\n   * @internal\n   */\n  _location: Location;\n\n  constructor(private _service: StorageService, location: string | Location) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @returns The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected newRef(service: StorageService, location: Location): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * @returns An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this.newRef(this._service, location);\n  }\n\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  get storage(): StorageService {\n    return this._service;\n  }\n\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Uploads a blob to this object's location.\n * @public\n * @param ref - Storage Reference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns An UploadTask that lets you control and\n *     observe the upload.\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata: Metadata | null = null\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * @public\n * @param ref - Storage Reference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded object.\n * @returns An UploadTask that lets you control and\n *     observe the upload.\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('putString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - Storage Reference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @internal\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - Storage Reference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport async function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const authToken = await ref.storage.getAuthToken();\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * A promise that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - Storage Reference to get metadata from.\n */\nexport async function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const authToken = await ref.storage.getAuthToken();\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - Storage Reference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A promise that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport async function updateMetadata(\n  ref: Reference,\n  metadata: Metadata\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const authToken = await ref.storage.getAuthToken();\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A promise that resolves with the download\n *     URL for this object.\n */\nexport async function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const authToken = await ref.storage.getAuthToken();\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequest(requestInfo, authToken)\n    .getPromise()\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - Storage Reference for object to delete.\n * @returns A promise that resolves if the deletion succeeds.\n */\nexport async function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const authToken = await ref.storage.getAuthToken();\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n * @internal\n *\n * @param ref - Storage Reference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n */\nexport function getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { ReferenceCompat } from './reference';\nimport { UploadTaskCompat } from './task';\nimport { UploadTaskSnapshot } from '../src/tasksnapshot';\nimport { Metadata } from '../src/metadata';\n\nexport class UploadTaskSnapshotCompat implements types.UploadTaskSnapshot {\n  constructor(\n    readonly _delegate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonly ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    return this._delegate.bytesTransferred;\n  }\n  get metadata(): Metadata {\n    return this._delegate.metadata;\n  }\n  get state(): string {\n    return this._delegate.state;\n  }\n  get totalBytes(): number {\n    return this._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UploadTask } from '../src/task';\nimport { UploadTaskSnapshotCompat } from './tasksnapshot';\nimport { TaskEvent } from '../src/implementation/taskenums';\nimport * as types from '@firebase/storage-types';\nimport {\n  StorageObserver,\n  ErrorFn,\n  CompleteFn,\n  Subscribe,\n  Unsubscribe\n} from '../src/implementation/observer';\nimport { UploadTaskSnapshot } from '../src/tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport { FirebaseStorageError } from '../src/implementation/error';\n\nexport class UploadTaskCompat implements types.UploadTask {\n  private readonly _snapshot: UploadTaskSnapshotCompat;\n  constructor(\n    private readonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\n  ) {\n    this._snapshot = new UploadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      this._ref\n    );\n  }\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return this._snapshot;\n  }\n\n  cancel = this._delegate.cancel.bind(this._delegate);\n  catch = this._delegate.catch.bind(this._delegate);\n  pause = this._delegate.pause.bind(this._delegate);\n  resume = this._delegate.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshotCompat) => unknown) | null,\n    onRejected?: ((a: FirebaseStorageError) => unknown) | null\n  ): Promise<unknown> {\n    return this._delegate.then(snapshot => {\n      if (onFulfilled) {\n        return onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, this._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<UploadTaskSnapshotCompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) => unknown),\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshotCompat> {\n    let wrappedNextOrObserver:\n      | StorageObserver<UploadTaskSnapshot>\n      | undefined\n      | ((a: UploadTaskSnapshot) => unknown) = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = (taskSnapshot: UploadTaskSnapshot) =>\n          nextOrObserver(\n            new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next\n            ? (taskSnapshot: UploadTaskSnapshot) =>\n                nextOrObserver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n                )\n            : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined,\n      completed || undefined\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { ListResult } from '../src/list';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\n\nexport class ListResultCompat implements types.ListResult {\n  constructor(\n    private readonly _delegate: ListResult,\n    private readonly _service: StorageServiceCompat\n  ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.prefixes.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.items.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.nextPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Reference,\n  getChild,\n  uploadBytesResumable,\n  uploadString,\n  list,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject\n} from '../src/reference';\nimport * as types from '@firebase/storage-types';\nimport { Metadata } from '../src/metadata';\nimport { StringFormat } from '../src/implementation/string';\nimport { ListOptions } from '../src/list';\nimport { UploadTaskCompat } from './task';\nimport { ListResultCompat } from './list';\nimport { StorageServiceCompat } from './service';\nimport { invalidRootOperation } from '../src/implementation/error';\n\nexport class ReferenceCompat implements types.Reference {\n  constructor(\n    private readonly _delegate: Reference,\n    public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    return this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return this._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._delegate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obtained by\n   * appending childPath, removing any duplicate, beginning, or trailing\n   * slashes.\n   */\n  child(childPath: string): types.Reference {\n    const reference = getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.Reference {\n    return new ReferenceCompat(this._delegate.root, this.storage);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * current object, or null if the current object is the root.\n   */\n  get parent(): types.Reference | null {\n    const reference = this._delegate.parent;\n    if (reference == null) {\n      return null;\n    }\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data - The blob to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, data, metadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value - The string to upload.\n   * @param format - The format of the string to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('putString');\n    return new UploadTaskCompat(\n      uploadString(this._delegate, value, format, metadata),\n      this\n    );\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @returns A Promise that resolves with all the items and prefixes under\n   *  the current storage reference. `prefixes` contains references to\n   *  sub-directories and `items` contains references to objects in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<types.ListResult> {\n    return listAll(this._delegate).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options - See ListOptions for details.\n   * @returns A Promise that resolves with the items and prefixes.\n   * `prefixes` contains references to sub-folders and `items`\n   * contains references to objects in this folder. `nextPageToken`\n   * can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<types.ListResult> {\n    return list(this._delegate, options).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * A promise that resolves with the metadata for this object. If this\n   * object doesn't exist or metadata cannot be retreived, the promise is\n   * rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    return getMetadata(this._delegate);\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata - The new metadata for the object.\n   * Only values that have been explicitly set will be changed. Explicitly\n   * setting a value to null will remove the metadata.\n   * @returns A promise that resolves\n   * with the new metadata for this object.\n   * @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    return updateMetadata(this._delegate, metadata);\n  }\n\n  /**\n   * @returns A promise that resolves with the download\n   * URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @returns A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  }\n\n  private _throwIfRoot(name: string): void {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as backoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_!: (value?: T | PromiseLike<T> | undefined) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.serverResponse = xhr.getResponseText();\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers): void {\n  const version =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  const queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference, getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  _FirebaseService\n} from '@firebase/app-types-exp';\nimport * as constants from '../src/implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: StorageService, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: StorageService | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof StorageService) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n      return getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: StorageService, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: StorageService | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: StorageService | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof StorageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(config?: FirebaseOptions): Location | null {\n  const bucketString = config?.[constants.CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString);\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n */\nexport class StorageService implements _FirebaseService {\n  /**\n   * @internal\n   */\n  readonly _bucket: Location | null = null;\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n\n  constructor(\n    readonly app: FirebaseApp,\n    /**\n     * @internal\n     */\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _pool: XhrIoPool,\n    /**\n     * @internal\n     */\n    readonly _url?: string\n  ) {\n    this._maxOperationRetryTime = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url);\n    } else {\n      this._bucket = extractBucket(this.app.options);\n    }\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async getAuthToken(): Promise<string | null> {\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   * @internal\n   */\n  _delete(): Promise<void> {\n    this._deleted = true;\n    this._requests.forEach(request => request.cancel());\n    this._requests.clear();\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @internal\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        this._pool\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { StorageService, isUrl, ref } from '../src/service';\nimport { Location } from '../src/implementation/location';\nimport { ReferenceCompat } from './reference';\nimport { invalidArgument } from '../src/implementation/error';\nimport { FirebaseApp } from '@firebase/app-types';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n */\nexport class StorageServiceCompat implements types.FirebaseStorage {\n  constructor(public app: FirebaseApp, readonly _delegate: StorageService) {}\n\n  INTERNAL = {\n    /**\n     * Called when the associated app is deleted.\n     */\n    delete: () => {\n      return this._delegate._delete();\n    }\n  };\n\n  get maxOperationRetryTime(): number {\n    return this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUrl(path)) {\n      throw invalidArgument(\n        'ref() expected a child path but got a URL, use refFromURL instead.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): types.Reference {\n    if (!isUrl(url)) {\n      throw invalidArgument(\n        'refFromURL() expected a full URL but got a child path, use ref() instead.'\n      );\n    }\n    try {\n      Location.makeFromUrl(url);\n    } catch (e) {\n      throw invalidArgument(\n        'refFromUrl() expected a valid full URL but got an invalid one.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this._delegate.maxUploadRetryTime = time;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._delegate.maxOperationRetryTime = time;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from '../src/implementation/string';\nimport { TaskEvent, TaskState } from '../src/implementation/taskenums';\n\nimport { XhrIoPool } from '../src/implementation/xhriopool';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport { StorageService } from '../src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  // TODO: This should eventually be 'app-compat'\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n  const storageServiceCompat: StorageServiceCompat = new StorageServiceCompat(\n    app,\n    new StorageService(app, authProvider, new XhrIoPool(), url)\n  );\n  return storageServiceCompat;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"],"names":["__extends","FirebaseError","type.isNativeBlobDefined","type.isNativeBlob","fs.sliceBlob","fs.getBlob","type.isString","type.isNonArrayObject","path.lastComponent","json.jsonObjectOrNull","UrlUtils.makeUrl","UrlUtils.makeQueryString","MetadataUtils.fromResourceString","ListResultUtils.fromResponseString","MetadataUtils.downloadUrlFromResourceString","MetadataUtils.toResourceString","type.isFunction","fbsRequests.createResumableUpload","fbsRequests.getResumableUploadStatus","fbsRequests.resumableUploadChunkSize","fbsRequests.ResumableUploadStatus","fbsRequests.continueResumableUpload","fbsRequests.getMetadata","fbsRequests.multipartUpload","fbsAsync","__assign","list","requestsList","getMetadata","requestsGetMetadata","updateMetadata","requestsUpdateMetadata","requestsGetDownloadUrl","deleteObject","requestsDeleteObject","type.isJustDef","backoff.start","backoff.stop","firebase","constants.CONFIG_STORAGE_BUCKET_KEY","constants.DEFAULT_MAX_OPERATION_RETRY_TIME","constants.DEFAULT_MAX_UPLOAD_RETRY_TIME","Component"],"mappings":"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"}