{"version":3,"file":"bundle.js","sources":["../../export.ts","../../index.bundle.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, Query } from './src/api/database';\nimport { LoadBundleTask } from './src/exp/bundle';\nimport {\n  loadBundle as expLoadBundle,\n  namedQuery as expNamedQuery\n} from './src/exp/database';\n\nexport { Blob } from './src/api/blob';\nexport {\n  CollectionReference,\n  DocumentReference,\n  DocumentSnapshot,\n  Firestore,\n  Query,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n  IndexedDbPersistenceProvider,\n  MemoryPersistenceProvider,\n  Transaction,\n  WriteBatch,\n  setLogLevel\n} from './src/api/database';\nexport { CACHE_SIZE_UNLIMITED } from './src/exp/database';\nexport { GeoPoint } from './src/api/geo_point';\nexport { FieldPath } from './src/api/field_path';\nexport { FieldValue } from './src/api/field_value';\nexport { Timestamp } from './src/api/timestamp';\nexport { FirebaseFirestore as ExpFirebaseFirestore } from './src/exp/database';\n\nexport function loadBundle(\n  this: Firestore,\n  data: ArrayBuffer | ReadableStream<Uint8Array> | string\n): LoadBundleTask {\n  return expLoadBundle(this._delegate, data);\n}\n\nexport function namedQuery(\n  this: Firestore,\n  queryName: string\n): Promise<Query | null> {\n  return expNamedQuery(this._delegate, queryName).then(expQuery => {\n    if (!expQuery) {\n      return null;\n    }\n    return new Query(\n      this,\n      // We can pass `expQuery` here directly since named queries don't have a UserDataConverter.\n      // Otherwise, we would have to create a new ExpQuery and pass the old UserDataConverter.\n      expQuery\n    );\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, loadBundle, namedQuery } from './export';\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\nexport function registerBundle(instance: typeof Firestore): void {\n  instance.prototype.loadBundle = loadBundle;\n  instance.prototype.namedQuery = namedQuery;\n}\n\nregisterBundle(Firestore);\n"],"names":["expLoadBundle","expNamedQuery"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;SA8CgB,UAAU,CAExB,IAAuD;IAEvD,OAAOA,YAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC7C,CAAC;SAEe,UAAU,CAExB,SAAiB;IAEjB,OAAOC,YAAa,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ;QAC3D,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,KAAK,CACd,IAAI;;;QAGJ,QAAQ,CACT,CAAC;KACH,CAAC,CAAC;AACL;;ACpEA;;;;;;;;;;;;;;;;AAmBA;;;SAGgB,cAAc,CAAC,QAA0B;IACvD,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;IAC3C,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7C,CAAC;AAED,cAAc,CAAC,SAAS,CAAC;;;;"}